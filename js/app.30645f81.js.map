{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?5b85","webpack:///./src/components/sequencediagram/SequenceDiagramRenderer.vue?cd95","webpack:///./src/components/stats/StatisticsConnectionRenderer.vue?e161","webpack:///./src/components/packetizationdiagram/PacketizationDiagramConfigurator.vue?1fd3","webpack:///./src/components/filemanager/FileManagerContainer.vue?9e9c","webpack:///./src/components/multiplexinggraph/MultiplexingGraphConfigurator.vue?14d6","webpack:///./src/components/stats/StatisticsConfigurator.vue?9a80","webpack:///./src/components/stats/StatisticsRenderer.vue?2b08","webpack:///./src/components/congestiongraph/CongestionGraphRenderer.vue?d810","webpack:///./src/components/congestiongraph/CongestionGraphConfigurator.vue?90a9","webpack:///./src/App.vue?92c7","webpack:///./src/data/ConnectionGroup.ts","webpack:///./src/data/QlogEventParser.ts","webpack:///./src/components/filemanager/pcapconverter/qlog_tcp_tls_h2.ts","webpack:///./src/components/filemanager/pcapconverter/tcptoqlog.ts","webpack:///./src/data/Connection.ts","webpack:///./src/data/QlogLoaderV2.ts","webpack:///./src/data/QlogLoader.ts","webpack:///./src/components/filemanager/utils/StreamingJSONParser.ts","webpack:///./src/store/ConnectionStore.ts","webpack:///./src/App.vue?ec60","webpack:///./src/App.vue?bfbe","webpack:///./src/App.vue","webpack:///./src/views/MainMenu.vue?9756","webpack:///./src/views/MainMenu.vue?ffa5","webpack:///./src/views/MainMenu.vue?6ea3","webpack:///./src/views/MainMenu.vue","webpack:///./src/views/VUEDebug.vue?47b5","webpack:///./src/components/HelloWorld.vue?34f9","webpack:///./src/components/HelloWorld.vue?1d82","webpack:///./src/components/HelloWorld.vue?4852","webpack:///./src/components/HelloWorld.vue","webpack:///./src/views/VUEDebug.vue?14f0","webpack:///./src/components/filemanager/netlogconverter/netlog.ts","webpack:///./src/components/filemanager/data/FileLoader.ts","webpack:///./src/views/VUEDebug.vue?0f3c","webpack:///./src/views/VUEDebug.vue","webpack:///./src/views/FileManager.vue?3d0e","webpack:///./src/components/filemanager/FileManagerContainer.vue?7b48","webpack:///./src/components/filemanager/netlogconverter/netlogtoqlog.ts","webpack:///./src/components/filemanager/newlineconverter/newlinejsontoqlog.ts","webpack:///./src/components/filemanager/FileManagerContainer.vue?15b5","webpack:///./src/components/filemanager/FileManagerContainer.vue?68ce","webpack:///./src/components/filemanager/FileManagerContainer.vue","webpack:///./src/views/FileManager.vue?b452","webpack:///./src/views/FileManager.vue?29b5","webpack:///./src/views/FileManager.vue","webpack:///./src/views/SequenceDiagram.vue?db33","webpack:///./src/components/sequencediagram/SequenceDiagramContainer.vue?d7e8","webpack:///./src/components/sequencediagram/SequenceDiagramConfigurator.vue?6d76","webpack:///./src/components/sequencediagram/data/SequenceDiagramConfig.ts","webpack:///./src/components/shared/ConnectionConfigurator.vue?2bdc","webpack:///./src/components/shared/ConnectionConfigurator.vue?758e","webpack:///./src/components/shared/ConnectionConfigurator.vue?73fd","webpack:///./src/components/shared/ConnectionConfigurator.vue","webpack:///./src/components/sequencediagram/SequenceDiagramConfigurator.vue?cdef","webpack:///./src/components/sequencediagram/renderer/SequenceDiagramD3Renderer.ts","webpack:///./src/components/sequencediagram/SequenceDiagramConfigurator.vue?c816","webpack:///./src/components/sequencediagram/SequenceDiagramConfigurator.vue","webpack:///./src/components/sequencediagram/SequenceDiagramRenderer.vue?2729","webpack:///./src/components/sequencediagram/SequenceDiagramRenderer.vue?ca6a","webpack:///./src/components/sequencediagram/SequenceDiagramRenderer.vue?f77e","webpack:///./src/components/sequencediagram/SequenceDiagramRenderer.vue","webpack:///./src/components/sequencediagram/SequenceDiagramSimpleRenderer.vue?2b1d","webpack:///./src/components/sequencediagram/SequenceDiagramSimpleRenderer.vue?7c96","webpack:///./src/components/sequencediagram/SequenceDiagramSimpleRenderer.vue?5de8","webpack:///./src/components/sequencediagram/SequenceDiagramSimpleRenderer.vue","webpack:///./src/components/congestiongraph/data/CongestionGraphConfig.ts","webpack:///./src/components/stats/data/StatisticsConfig.ts","webpack:///./src/components/multiplexinggraph/data/MultiplexingGraphConfig.ts","webpack:///./src/components/packetizationdiagram/data/PacketizationDiagramConfig.ts","webpack:///./src/store/ConfigurationStore.ts","webpack:///./src/components/sequencediagram/SequenceDiagramContainer.vue?bdcf","webpack:///./src/components/sequencediagram/SequenceDiagramContainer.vue?480a","webpack:///./src/components/sequencediagram/SequenceDiagramContainer.vue","webpack:///./src/views/SequenceDiagram.vue?3211","webpack:///./src/views/SequenceDiagram.vue?d798","webpack:///./src/views/SequenceDiagram.vue","webpack:///./src/views/PacketizationDiagram.vue?4d2a","webpack:///./src/components/packetizationdiagram/PacketizationDiagramContainer.vue?0856","webpack:///./src/components/packetizationdiagram/PacketizationDiagramConfigurator.vue?1f32","webpack:///./src/components/packetizationdiagram/PacketizationDiagramConfigurator.vue?ac3c","webpack:///./src/components/packetizationdiagram/renderer/PacketizationDiagramModels.ts","webpack:///./src/components/packetizationdiagram/PacketizationDiagramConfigurator.vue?269f","webpack:///./src/components/packetizationdiagram/PacketizationDiagramConfigurator.vue","webpack:///./src/components/packetizationdiagram/PacketizationDiagramRenderer.vue?c99d","webpack:///./src/components/shared/helpers/ColorHelper.ts","webpack:///./src/components/packetizationdiagram/renderer/PacketizationDiagramDataHelper.ts","webpack:///./src/components/packetizationdiagram/renderer/PacketizationTCPPreProcessor.ts","webpack:///./src/components/packetizationdiagram/renderer/PacketizationQUICPreProcessor.ts","webpack:///./src/components/packetizationdiagram/renderer/PacketizationDiagramD3Renderer.ts","webpack:///./src/components/packetizationdiagram/PacketizationDiagramRenderer.vue?63dc","webpack:///./src/components/packetizationdiagram/PacketizationDiagramRenderer.vue?6efe","webpack:///./src/components/packetizationdiagram/PacketizationDiagramRenderer.vue","webpack:///./src/components/packetizationdiagram/PacketizationDiagramContainer.vue?70a6","webpack:///./src/components/packetizationdiagram/PacketizationDiagramContainer.vue?0534","webpack:///./src/components/packetizationdiagram/PacketizationDiagramContainer.vue","webpack:///./src/views/PacketizationDiagram.vue?4187","webpack:///./src/views/PacketizationDiagram.vue?8979","webpack:///./src/views/PacketizationDiagram.vue","webpack:///./src/views/CongestionGraph.vue?161f","webpack:///./src/components/congestiongraph/CongestionGraphContainer.vue?a943","webpack:///./src/components/congestiongraph/CongestionGraphConfigurator.vue?3aec","webpack:///./src/components/congestiongraph/CongestionGraphConfigurator.vue?901c","webpack:///./src/components/congestiongraph/CongestionGraphConfigurator.vue?dac3","webpack:///./src/components/congestiongraph/CongestionGraphConfigurator.vue","webpack:///./src/components/congestiongraph/CongestionGraphRenderer.vue?701f","webpack:///./src/components/congestiongraph/renderer/MainGraphState.ts","webpack:///./src/components/congestiongraph/renderer/RecoveryGraphState.ts","webpack:///./src/components/congestiongraph/renderer/CongestionGraphD3Renderer.ts","webpack:///./src/components/congestiongraph/CongestionGraphRenderer.vue?2fef","webpack:///./src/components/congestiongraph/CongestionGraphRenderer.vue?cd76","webpack:///./src/components/congestiongraph/CongestionGraphRenderer.vue","webpack:///./src/components/congestiongraph/CongestionGraphContainer.vue?efb5","webpack:///./src/components/congestiongraph/CongestionGraphContainer.vue?d3ba","webpack:///./src/components/congestiongraph/CongestionGraphContainer.vue","webpack:///./src/views/CongestionGraph.vue?3852","webpack:///./src/views/CongestionGraph.vue?9874","webpack:///./src/views/CongestionGraph.vue","webpack:///./src/views/MultiplexingGraph.vue?8db6","webpack:///./src/components/multiplexinggraph/MultiplexingGraphContainer.vue?ffa3","webpack:///./src/components/multiplexinggraph/MultiplexingGraphConfigurator.vue?c7e1","webpack:///./src/components/multiplexinggraph/MultiplexingGraphConfigurator.vue?1aed","webpack:///./src/components/multiplexinggraph/renderer/MultiplexingGraphD3CollapsedRenderer.ts","webpack:///./src/components/multiplexinggraph/MultiplexingGraphConfigurator.vue?1d4d","webpack:///./src/components/multiplexinggraph/MultiplexingGraphConfigurator.vue","webpack:///./src/components/multiplexinggraph/MultiplexingGraphRenderer.vue?8ec7","webpack:///./src/components/multiplexinggraph/MultiplexingGraphCollapsedRenderer.vue?b1c7","webpack:///./src/components/multiplexinggraph/renderer/MultiplexingGraphDataHelper.ts","webpack:///./src/components/multiplexinggraph/renderer/MultiplexingGraphD3ByterangesRenderer.ts","webpack:///./src/components/multiplexinggraph/renderer/MultiplexingGraphD3WaterfallRenderer.ts","webpack:///./src/components/multiplexinggraph/MultiplexingGraphCollapsedRenderer.vue?c7b1","webpack:///./src/components/multiplexinggraph/MultiplexingGraphCollapsedRenderer.vue?1c9e","webpack:///./src/components/multiplexinggraph/MultiplexingGraphCollapsedRenderer.vue","webpack:///./src/components/multiplexinggraph/MultiplexingGraphRenderer.vue?376d","webpack:///./src/components/multiplexinggraph/MultiplexingGraphRenderer.vue?9f8c","webpack:///./src/components/multiplexinggraph/MultiplexingGraphRenderer.vue","webpack:///./src/components/multiplexinggraph/MultiplexingGraphContainer.vue?286a","webpack:///./src/components/multiplexinggraph/MultiplexingGraphContainer.vue?a8b7","webpack:///./src/components/multiplexinggraph/MultiplexingGraphContainer.vue","webpack:///./src/views/MultiplexingGraph.vue?58cf","webpack:///./src/views/MultiplexingGraph.vue?d3c0","webpack:///./src/views/MultiplexingGraph.vue","webpack:///./src/views/Statistics.vue?864d","webpack:///./src/components/stats/StatisticsContainer.vue?bae6","webpack:///./src/components/stats/StatisticsConfigurator.vue?45f4","webpack:///./src/components/stats/StatisticsConfigurator.vue?89f5","webpack:///./src/components/stats/StatisticsConfigurator.vue?0db3","webpack:///./src/components/stats/StatisticsConfigurator.vue","webpack:///./src/components/stats/StatisticsRenderer.vue?fe2b","webpack:///./src/components/stats/StatisticsConnectionRenderer.vue?bf44","webpack:///./src/components/stats/StatisticsConnectionRenderer.vue?b331","webpack:///./src/components/stats/StatisticsConnectionRenderer.vue?27d3","webpack:///./src/components/stats/StatisticsConnectionRenderer.vue","webpack:///./src/components/stats/StatisticsRenderer.vue?37c1","webpack:///./src/components/stats/StatisticsRenderer.vue?6e58","webpack:///./src/components/stats/StatisticsRenderer.vue","webpack:///./src/components/stats/StatisticsContainer.vue?c2c0","webpack:///./src/components/stats/StatisticsContainer.vue?5d2b","webpack:///./src/components/stats/StatisticsContainer.vue","webpack:///./src/views/Statistics.vue?bdb8","webpack:///./src/views/Statistics.vue?0748","webpack:///./src/views/Statistics.vue","webpack:///./src/router.ts","webpack:///./src/store.ts","webpack:///./src/registerServiceWorker.ts","webpack:///./src/main.ts","webpack:///./src/views/MainMenu.vue?bf19"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","render","_vm","this","_h","$createElement","_c","_self","attrs","staticRenderFns","QlogConnectionGroup","connections","Array","version","format","filename","URL","URLshort","title","description","summary","connection","TimeTrackingMethod","EventCategory","HTTP2EventType","TCPPacketDetailName","HTTP2FrameTypeName","Direction","parent","eventFieldNames","commonFields","configuration","time_offset","time_units","original_uris","wasAutoGenerated","events","vantagePoint","type","unknown","flow","_isVue","addConnection","lookupTable","Map","output","JSON","parse","stringify","eventParser","parser","init","evt","load","server","client","size","category","parseEvent","eventType","has","set","categoryDictionary","setupLookupTable","connectionName","json","qlog_version","fromDraft02","console","error","fileContents","log","traces","group","qlog_format","jsonconnection","qlogconnections","undefined","error_description","conn","uri","usesEventFields","event_fields","needsSplit","groupIDKey","indexOf","groupLUT","event","keys","groupID","getEvents","setEvents","lastEvent","vantage_point","setEventParser","common_fields","misOrdered","minimumTime","parsedEvt","absoluteTime","sort","a","b","alert","timeTrackingMethod","ABSOLUTE_TIME","addTime","subtractTime","timeMultiplier","_timeOffset","categoryCommon","nameCommon","currentEvent","time","parseFloat","RELATIVE_TIME","split","val","curName","replace","trace","time_format","DELTA_TIME","reference_time","warn","parseReferenceTime","allEvents","previousTime","time_ms","refTimeIn","multiplier","Date","fromPreSpec","fromDraft00","fromDraft01","fromJSON","groupIDIndex","needsUpgrade","packet_type","toLowerCase","id","frames","frame","fixPreviousInto01","connection_started","connection_id_updated","key_updated","key_retired","stream_state_updated","congestion_state_updated","loss_timer_set","loss_timer_triggered","connection_state_updated","new","closed","src_id","parameters_set","tls_cipher","quic_version","alpn","metrics_updated","datagrams_sent","datagrams_received","spin_bit_updated","frame_type","push_id","stream_id","fields","headers","param","parameters","onertt","zerortt","network","metadata","vantagepoint","timeIndex","categoryIndex","nameIndex","dataIndex","CATEGORY","EVENT_TYPE","map","relativeTime","TCPEventType","TLSEventType","pcapJSON","qlogFile","connectionMap","entry","_source","layers","ip","ipv6","tcp","IP","IPsrcField","IPdstField","TCP","direction","sending","receiving","qlog","protocol_type","DEBUG_originalEntries","probable_url","TLSAppDataTrailerSize","TLSRecordsToBeAdjustedForTrailerSize","DEBUG_HTTPtotalSize","DEBUG_TLSpayloadSize","timestampTracker","seq","addEntry","values","prevSentSeqNr","prevRecvSeqNr","evti","header","sequence_number","timestamp","seqNr","parseInt","qlogEvent","packet_sent","packet_received","packetSent","packet_number","payload_length","header_length","packet_size","TLS","HTTP","TLSrecords","HTTPframes","tls","extractRecords","obj","isArray","el","e","http2","extractFrames","recordLength","record","httpLength","Math","abs","record_created","record_parsed","contentTypeValue","content_type","appDataLength","fullPayloadLength","totalH2payloadLength","frameLength","suggestedTrailerSize","recordToBeAdjusted","trailer_length","trailerSize","expectedRecordFields","field","DEBUG_wiresharkFrameNumber","DEBUG_frameSizeTracker","frame_created","frame_parsed","typeNrToName","priority","reset_stream","settings","push_promise","ping","go_away","window_update","continuation","magic","headerLength","frameData","h","stream_end","byte_length","frameSent","text","streamOnlyAsFallback","finalOutput","cleanExit","initialRoot","oboeStream","on","node","path","ancestors","root","done","fail","errorReport","initialLength","currentLength","currentRoot","emit","eventFieldsLength","eventCount","removed","pop","parseQlogText","context","JSONroot","currentDepth","onFieldParsed","previousDepth","currentRootIndex","currentKey","nextPathElementIsArrayIndex","pathStartIndex","max","isFinalElement","curValue","moduler","super","grouplist","outstandingRequests","amount","index","fileContentsJSON","fileInfo","commit","notify","duration","testGroup","connectionCount","round","random","connectionTest","ceil","dummy","queryParameters","urlToLoad","fullURL","file","list","file1","apireturns","fetch","ok","txt","url","location","toString","params","qlogRoot","Error","urlToLoadShort","substr","lastIndexOf","dispatch","loadQlogDirectlyFromURL","responseType","transformResponse","then","res","fileContentsRaw","parseJSONWithDeduplication","convertedContents","convert","store","$store","loadFilesFromServer","$route","query","component","staticClass","staticStyle","_v","fullPath","$event","AddRandomConnection","DeleteFirstConnection","ChangeConnectionName","ChangeEventName","RemoveEvent","_l","connectionGroup","_s","msg","groups","getConnections","DEBUG_LoadRandomFile","cgroup","deleteGroup","components","HelloWorld","PacketType","LONG_HEADER_TYPE","FileType","model","callback","$$v","expression","_e","secretsToLoad","loadURL","Boolean","filesToUpload","secretsToUpload","uploadFile","loadExamples","loadMassiveExample","invertMap","entries","forEach","calculateAckRanges","largestObserved","smallestObserved","missing_packets","missingIndex","from","to","session","sessionId","startTime","host","connection_id","qlogEvents","txQUICFrames","rxQUICFrames","rxPacket","event_type","http","netlogJSON","constants","event_types","timeTickOffset","logEventTypes","source_types","logSourceType","phases","logEventPhase","source_type","source","source_id","phase","event_params","quic_transport_parameters","owner","transport","crypto","offset","data_length","pushFrame","padding","stream","fin","acked_ranges","largest_observed","smallest_observed","ack","ack1","ack2","max_data","maximum","byte_offset","max_stream_data","error_code","quic_rst_stream_error","final_size","stop_sending","application_error_code","connection_close","error_space","transport_error","quic_error","raw_error_code","reason","details","encryption_level","handshake","initial","assign","packet","is_coalesced","long_header_type","retry","version_negotiation","invalid","transmission_type","recovery","packet_lost","packet_dropped","control","stream_type_set","qpack_decode","qpack_encode","max_header_list_size","SETTINGS_MAX_HEADER_LIST_SIZE","max_table_capacity","SETTINGS_QPACK_MAX_TABLE_CAPACITY","blocked_streams_count","SETTINGS_QPACK_BLOCKED_STREAMS","max_push_id","pushH3Frame","info","marker","qlogs","inputStream","rawJSONentries","parseNDJSON","resolver","rejecter","Promise","resolve","reject","jsonStream","createNewlineTransformer","streamReader","getReader","read","is_reader","cancellationRequest","readLineCount","ReadableStream","start","controller","reader","decoder","TextDecoder","data_buf","processResult","trim","data_l","enqueue","close","decode","lines","data_line","cancel","highWaterMark","chunk","rawContents","loader","qlogJSON","GuesstimateFileTypeFromExtension","unsupported","unclear","firstFewCharacters","File","LoadFirstFewCharacters","substring","GuesstimateFileTypeFromHeader","contents","qlog_newline","Response","body","LoadFileAsText","blob","Blob","contentsJSON","qlog_normal","pcap_json","rawJSON","netlog","typeMap","extension","endsWith","identifier","FileReader","firstFewBytes","onload","target","onabort","onerror","readAsText","urlIsPcap","secrets","uploadIsPcap","uploadFileName","Load","addGroupFromQlogFile","catch","alreadyLoaded","loadExamplesForDemo","FileManagerContainer","config","timeOffset","allowCustomTimeOffset","onConnectionSelected","onConnectionRemoved","onTimeOffsetChange","selectDefault","directives","rawName","modifiers","$set","outstandingRequestCount","SequenceDiagramConfig","timeResolution","getEventParser","allowGroupSelection","allowConnectionSelection","groupOptions","onGroupSelectionChanged","selectedGroup","connectionOptions","onConnectionSelectionChanged","selectedConnection","removeMyself","numericalInputName","combinedOptions","onNumericalValueUpdated","numericalValue","numericalInputValue","newConnection","oldConnection","options","allGroups","disabled","newlySelected","onGroupSelected","onRemoved","onNumericalValueChanged","default","immediate","deep","find","connectionIndex","filter","createConnectionWithTimeoffset","firstConnection","secondConnection","firstPerspective","getVantagePointPerspective","secondPerspective","renderables","connectionIndexInParent","perspective","allTheSame","previousVantagePoint","firstNonAutogenerated","found","ConnectionConfigurator","arrowTargetProperty","eventLink","eventDetail","eventDetailExtra","hideEventModal","containerID","svgID","onEventClicked","rendering","scrollHandler","shortenedIntervals","dimensions","bandWidth","frameTypeToColorLUT","ignoreEventName","rawEvt","focusInfo","metrics","createPrivateNamespace","qvis","sequencediagram","candidateRaw","candidate","metricName","fromEntries","focusOn","selectedTraces","canContinue","setup","renderPartialExtents","tracesInput","document","getElementById","performance","now","ensureMoreThanOneTrace","margin","top","bottom","left","right","width","height","pixelsPerMillisecond","shortenIntervalsLongerThan","calculateTimeOffsets","calculateCoordinates","calculateConnections","container","svg","d3","select","selectAll","remove","attr","clientWidth","currentX","append","link","createElementNS","setAttribute","style","textDecoration","appendChild","textContent","interval","yMin","yMax","timeSkipped","toFixed","rangeHeight","screen","renderedRanges","currentRangeY","currentRangeIndex","rendered","svgGroup","removeEventListener","scrollEventCount","scrollTimer","execute","clearTimeout","setTimeout","addEventListener","originalCount","v","originalTrace","generatedSibling","sibling","newTrace","clone","unshift","sentEvents","lookup","receivedEvents","firstInitialSent","firstInitialReceived","guessedPerspective","clientConnection","serverConnection","manualTimeOffset","getAbsoluteStartTime","getTimeTrackingMethod","refTime","setReferenceTime","latencyOneWay","Number","MIN_SAFE_INTEGER","smoothedBackup","clientMetricUpdates","update","latest_rtt","smoothed_rtt","timeToMilliseconds","serverMetricUpdates","initialSent","initialReceived","serverInitialReceived","firstInitialReceivedPN","serverReceiveTime","expectedServerReceiveTime","heads","fill","trackers","absoluteAggregatedStartTime","MAX_VALUE","tracker","y","min","doneCount","maxY","currentTimestampUnderConsideration","currentY","inOverlapPreventionMode","previousMinimumTrace","currentMinimumEvent","currentMinimumTrace","currentMinimumTime","timeText","currentTimeBucket","floor","maxTrackerY","timeDifference","connectEventLists","metadataTargetProperty","startEvents","end","endEvents","startParser","endParser","lastFoundTargetIndex","endEventsFraction","rawevt","startCandidateIndex","endCandidateIndex","counterpartFound","lost","DEBUG_packetLostCount","connectTraces","startPerspective","endPerspective","startEventType","endEventType","eventIndex","targetY","scrollTo","svgRect","getBoundingClientRect","offsetFromDocumentTop","pageYOffset","innerHeight","fromRange","toRange","extentsToRender","rangeIndex","stop","rangeIndicesToRemove","removeFrom","removeTo","rangeSvgGroup","parentNode","removeChild","previousYDiffLeft","previousYDiffRight","extent","extentContainer","currentMetadata","currentEventId","rect","rectSize","onclick","evt_in","offsetMultiplier","directionText","directionColor","packetLost","colorRight","colorLeft","targetX","line","arrowX","points","deltaY","deltaX","angle","atan2","PI","arrow","crossX","crossY","cross","textWidth","sqrt","pow","textHeight","textAngle","midwayX","midwayY","textForeign","overflow","textContainer","textAlign","smallArrowSize","directionSpan","createElement","display","borderTop","borderBottom","borderRight","marginRight","textSpanFront","packetTypeToString","color","backgroundColor","paddingLeft","paddingRight","border","borderStyle","fontSize","framesToRender","typeCounter","frameRaw","frameTypeName","textSpan","bgColor","textColor","frameTypeToColor","prepend","sequence","hide","frameToShortString","borderLeft","marginLeft","sideOffset","x","align","textContainerOuter","eventTypeToColor","eventToShortString","frameType","application_close","new_connection_id","retire_connection_id","path_challenge","path_response","max_streams","data_blocked","streams_blocked","stream_data_blocked","ranges","range","no_error","http_no_error","stream_type","limit","csuEvent","draining","state","metricNames","count","cwnd","bytes_in_flight","ssthresh","amountLeftOver","delta","timeout","timeString","pnSpaceString","packet_number_space","timer_type","toUpperCase","packetType","streamID","method","verb","message","focusOnNext","renderer","showEventModal","focusOnConnection","focusOnEvent","$bvModal","extra","eventNr","getTraces","URLs","ctrace","fileLinks","show","newConfig","oldConfig","manualRTT","scale","GetEvents","trigger","CongestionGraphConfig","StatisticsConfig","MultiplexingGraphConfig","collapsed","showwaterfall","showbyteranges","PacketizationDiagramConfig","congestionGraphConfig","sequenceDiagramConfig","statisticsConfig","multiplexingGraphConfig","packetizationDiagramConfig","SequenceDiagramConfigurator","SequenceDiagramRenderer","SequenceDiagramSimpleRenderer","SequenceDiagramContainer","toggleInfo","infoShown","holblockinfo","conns","PacketizationDirection","_m","reserved","cancel_push","goaway","raw_frame_type","input","remainingLength","ColorHelper","protocol","lut","H2streamIDColorLUT","H3streamIDColorLUT","streamIDnumber","StreamIDToColor","tcpConnection","HTTPHeadersSentEventType","HTTPEventType","TCPData","TLSData","HTTPData","StreamData","TCPindex","TLSindex","HTTPindex","TCPmax","TCPPayloadRanges","TLSPayloadRanges","HTTPStreamInfo","eventRaw","isPayload","lowerLayerIndex","rawPacket","payloadLength","headerRanges","extractRanges","headerRange","contentType","record_length","payloadRanges","payloadRange","trailerRanges","trailerRange","frame_length","total_size","CSSClassName","rangeToString","tcpRangeToString","tlsRangeToString","httpRangeToString","streamRangeToString","heightModifier","streamInfo","frameSizeErrorShown","QUICEventType","max_packet_size_local","max_packet_size_remote","QUICPacketData","QUICFrameData","QUICPacketIndex","QUICFrameIndex","QUICmax","DEBUG_QUICpayloadSize","QUICtotalSize","HTTPpayloadSize","QUICPayloadRangesPerStream","HTTP3OutstandingFramesPerStream","processHTTP3Frames","outstandingFrames","payloadRangesForStream","frameEvt","framePayloadLength","frameHeaderLength","VLIELength","H3FrameTypeToNumber","totalAvailablePayloadSize","reduce","prev","cur","totalPacketLength","trailerLength","frameStart","backfillFrameSizes","bogus","header_size","payload_size","skipProcessing","max_packet_size","controlStreamData","adjustedHTTPsizeForControlStreams","efficiency","quicRangeToString","max_size_local","max_size_remote","quicFrameRangeToString","httpFrameRangeToString","frame_size","totalFrameLength","simulatedPayloadLength","fakeFrameHeaderSize","otherFrameCount","leftoverLength","lengthPerOtherFrame","axisLocation","totalHeight","renderLive","tooltip","lanes","process","xMax","bottomRanges","rects","packetSidePadding","xDomain","domain","xAxis","mouseOver","transition","html","pageX","pageY","mouseOut","packetHeight","allClassNames","join","lane","yOffsetMultiplier","enter","localname","remotename","flowLabel","updateChart","newX","transform","rescaleX","zoom","scaleExtent","translateExtent","rendererTop","rendererBottom","PacketizationDiagramConfigurator","PacketizationDiagramRenderer","PacketizationDiagramContainer","resetZoom","useBrushX","useBrush2d","useRuler","toggleCongestionGraph","code","togglePerspective","hideLegend","showLegend","MainGraphState","eventBus","outerWidth","innerWidth","outerHeight","margins","graphSvg","canvas","canvasContext","mouseHandlerPanningSvg","mouseHandlerBrushXSvg","mouseHandlerBrush2dSvg","mouseHandlerSelectionSvg","mouseHandlerPickSvg","mouseHandlerRulerSvg","brushX","brushXElement","brush2d","brush2dElement","selectionBrush","packetInformationDiv","congestionGraphEnabled","useSentPerspective","gxAxis","gyAxis","gyCongestionAxis","congestionAxisText","reset","sent","received","xScale","yScale","yCongestionScale","yAxis","yCongestionAxis","rangeX","rangeY","congestionRangeY","originalRangeX","originalRangeY","originalCongestionRangeY","drawScaleX","drawScaleY","metricUpdateLines","bytes","minRTT","smoothedRTT","lastRTT","flowControlLines","application","RecoveryGraphState","isInitialised","_startTimeOffset","previousMouseX","previousMouseY","mainGraphState","cursor","linePoints","lineHorizontal","lineVertical","textTime","textBytes","textRate","evtEmitter","startDrawing","x1","offsetX","y1","offsetY","x2","y2","handleDrawing","invert","endTime","startBytes","endBytes","bytesDifference","bytesText","bits","rate","rateText","timeCenter","bytesCenter","rateCenterX","rateCenterY","once","usePanning","redrawCanvas","currentPerspective","setPerspective","recoveryGraphState","renderParts","mainGraphContainer","recoveryGraphContainer","getContext","firstEvent","parseQlog","initSentSide","initReceivedSide","self","onZoom","onPan","onHover","onPickerClick","onBrushXEnd","onBrush2dEnd","minCongestionY","maxCongestionY","maxRTT","findMetricUpdateExtrema","localXMin","localXMax","minX","maxX","localMinY","localMaxY","findYExtrema","scaledMaxCongestionY","nice","tickSize","tickFormat","nr","valueOf","k","minY","rectWidth","clearRect","xScalingFunction","yScalingFunction","packetList","packetsSent","packetsReceived","parsedPacket","extraData","congestion","transformTime","drawRect","correspondingAck","parsedAck","ackX","correspondingLoss","parsedLoss","lossX","drawLines","point","drawCircle","drawCross","beginPath","fillStyle","pointList","tickDrawFunction","lineWidth","strokeStyle","startX","startY","moveTo","pointX","pointY","lineTo","stroke","centerX","centerY","radius","arc","redraw","xMin","Infinity","packetsLost","metricUpdates","transportParams","packetSentList","packetReceivedList","totalSentByteCount","totalReceivedByteCount","initial_max_data","initial_max_stream_data_bidi_remote","DEBUG_packetsWithInvalidSize","packetOffsetStart","streamFCMap","ackFrames","streamFCSum","DEBUG_packetsNotSent","ackedNr","sentPacket","correspondingPackets","receivedPacket","lostPacketNumber","parsedUpdate","congestion_window","min_rtt","fixMetricUpdates","preventDefault","clearPacketInfoWidget","zoomFactor","mouseX","currentTarget","leftX","rightX","zoomedLeftPortion","zoomedRightPortion","newLeftX","newRightX","newTopY","newBottomY","buttons","graphX","graphY","panAmountX","panAmountY","movementX","movementY","panCanvas","svgHoverCoords","graphCoords","pixelData","getImageData","pixelColor","parsedPacketTime","parsedPacketData","extraDetails","packetText","ackPacket","parsedAckPacket","topY","bottomY","lostPacked","parsedLostPacket","deltaXin","deltaYin","selection","dragStartX","dragStopX","move","dragStartY","dragStopY","svgClickCoords","dispatchEvent","CustomEvent","detail","exp","originalUpdates","lastValue","classList","add","CongestionGraphConfigurator","CongestionGraphRenderer","CongestionGraphContainer","selectAllConnections","FrameArrivalType","connection2","getLongName","streamDetail","requestTime","totalData","frameCount","id_waterfall","id_fifo","id_data","id_byterange","allFrames","allDataMoved","newXDomain","updateZoom","streamFrames","dataMoved","maxBytes","countEnd","yDomain","widthModifier","countStart","opacity","movedOffset","startIndex","endIndex","endY","newY","copy","byteRangeContainerID","waterfallRenderer","barHeight","currentDomain","byteRangeRenderer","xMSRange","packetIndex","streamIDs","Set","streamRanges","calculateFrameArrivalType","outputType","UNKNOWN","outputTimestampDifference","outputHole","foundHole","hole","holes","Retransmit","foundFilled","filled","Duplicate","createdHole","currentHead","highestReceived","Future","Normal","spanning","filled1","filled2","timeDifferenceSampleCount","cumulativeTimeDifference","avg","Reordered","stack","previousInterval","currentInterval","newHoles","newHole","foundHole2","dataSent","isDataStream","arrivalInfo","packetNumber","arrivalType","arrivalTimeDifference","arrivalCreatedHole","data_moved","movedLength","foundFrame","packetMouseOver","packetMouseOut","typeGap","typeHeight","onStreamClicked","onStreamClickedUpper","requestEventType","dataEventType","dataFrameCount","streams","streamFrame","stopIndex","order","requestIndex","minBarHeight","rects2","minWidth","circleWidth","legendY","legendIconWidth","skipRender","streamDetails","dataRenderer","updateRenderers","fixedWidth","MultiplexingGraphCollapsedRenderer","MultiplexingGraphConfigurator","MultiplexingGraphRenderer","MultiplexingGraphContainer","totalEventCount","qlogns","VantagePointType","H3headersSummary","domProps","getLookupTable","catmap","index1","evtmap","index2","totalFrameCount","framemap","encryptionLUT","encmap","item","index3","index4","streamDataFCRemote","index6","fcLimit","index66","index5","index55","frameLookupTable","encryptionLookupTable","h3Headers","flowControlRemote","connectionDataFCList","connectionDataFCListTimes","streamDataFCList","streamDataFCListTimes","streamsUniFCList","streamsBidiFCList","flowControlLocal","frameCreatedEvents","frameParsedEvents","userAgent","authority","frameEvents","totalFrameCounter","fc","packetEventType","initial_max_stream_data_bidi_local","initial_max_stream_data_uni","streamFC","times","timesInput","valsInput","vals","prevVal","prevTime","fillConnectionDataFC","staggeredResults","createStaggeredLines","fillStreamDataFC","StatisticsConnectionRenderer","StatisticsConfigurator","StatisticsRenderer","StatisticsContainer","use","router","routes","redirect","menu","MainMenu","beforeEach","next","search","URLSearchParams","Store","configurations","productionTip","$mount"],"mappings":"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","file":"js/app.30645f81.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SequenceDiagramRenderer.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SequenceDiagramRenderer.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StatisticsConnectionRenderer.vue?vue&type=style&index=0&id=8adfb654&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StatisticsConnectionRenderer.vue?vue&type=style&index=0&id=8adfb654&scoped=true&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PacketizationDiagramConfigurator.vue?vue&type=style&index=0&id=08f291f4&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PacketizationDiagramConfigurator.vue?vue&type=style&index=0&id=08f291f4&scoped=true&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileManagerContainer.vue?vue&type=style&index=0&id=fdd4971e&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileManagerContainer.vue?vue&type=style&index=0&id=fdd4971e&scoped=true&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiplexingGraphConfigurator.vue?vue&type=style&index=0&id=1eb2b106&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiplexingGraphConfigurator.vue?vue&type=style&index=0&id=1eb2b106&scoped=true&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StatisticsConfigurator.vue?vue&type=style&index=0&id=d3f9bc98&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StatisticsConfigurator.vue?vue&type=style&index=0&id=d3f9bc98&scoped=true&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StatisticsRenderer.vue?vue&type=style&index=0&id=7640512c&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StatisticsRenderer.vue?vue&type=style&index=0&id=7640512c&scoped=true&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CongestionGraphRenderer.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CongestionGraphRenderer.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CongestionGraphConfigurator.vue?vue&type=style&index=0&id=ee54e634&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CongestionGraphConfigurator.vue?vue&type=style&index=0&id=ee54e634&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view',{attrs:{\"name\":\"menu\"}}),_c('router-view'),_c('notifications',{attrs:{\"group\":\"default\",\"position\":\"bottom center\",\"width\":\"50%\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import QlogConnection from \"@/data/Connection\"\n\n// This is basically the wrapper for a single qlog file, which contains multiple traces (\"connections\")\n// NOTE: this has nothing directly to do with the \"group_id\" concept! \n// TODO: rename this class to QlogCollection or QlogTraceCollection or QlogTraceFile or something\nexport default class QlogConnectionGroup {\n    \n    public version:string;\n    public format:string;\n\n    public filename:string;\n    public title:string;\n    public description:string;\n\n    public URL:string;\n    public URLshort:string;\n\n    public summary:any;\n\n    private connections:Array<QlogConnection>;\n\n    public constructor() {\n        this.connections = new Array<QlogConnection>();\n        this.version = \"\";\n        this.format = \"JSON\";\n        this.filename = \"\";\n        this.URL = \"\";\n        this.URLshort = \"\";\n        this.title = \"\";\n        this.description = \"\";\n        this.summary = {};\n    }\n\n    public addConnection( connection:QlogConnection ):void { this.connections.push( connection ); }\n    public getConnections() { return this.connections; }\n}\n","import QlogConnection from '@/data/Connection';\n\nexport enum TimeTrackingMethod {\n    ABSOLUTE_TIME,\n    RELATIVE_TIME,\n    DELTA_TIME,\n}\n\nexport interface IQlogEventParser {\n\n    readonly relativeTime:number;\n    readonly absoluteTime:number;\n    readonly category:string;\n             name:string; // name is not a readonly since we want to be able to change it when cloning traces (e.g., in sequenceDiagram)\n    readonly data:any|undefined;\n\n    readonly timeOffset:number;\n\n    timeToMilliseconds(time: string | number): number;\n    getAbsoluteStartTime(): number;\n\n    init( connection:QlogConnection) : void;\n    load( evt:IQlogRawEvent ) : IQlogEventParser;\n\n    getTimeTrackingMethod() : TimeTrackingMethod;\n    setReferenceTime(time:number) : void; // should not be needed normally\n}\n\nexport type IQlogRawEvent = Array<any>;\n","\nexport enum EventCategory {\n    tcp = \"transport\",\n    tls = \"tls\",\n    http2 = \"http2\",\n}\n\nexport enum TCPEventType {\n    packet_sent = \"packet_sent\",\n    packet_received = \"packet_received\",\n}\n\nexport enum TLSEventType {\n    record_created = \"record_created\",\n    record_parsed = \"record_parsed\",\n}\n\nexport enum HTTP2EventType {\n    frame_created = \"frame_created\",\n    frame_parsed = \"frame_parsed\",\n}\n\nexport interface IEventPacketSent {\n    header: IPacketHeader,\n    raw?: string,\n\n    details?: Array<IPacketDetail>,\n}\n\nexport interface IEventPacketReceived{\n    header: IPacketHeader,\n    raw?: string,\n\n    details?: Array<IPacketDetail>,\n\n    // TODO: add : options?; Array<IPacketOptions>,\n}\n\nexport interface IPacketHeader {\n    sequence_number: number;\n    packet_size?: number;\n    payload_length?: number;\n    header_length?:number;\n\n    // quic-compatibility\n    packet_number: number;\n}\n\nexport type IPacketDetail = IPacketAcks | IPacketFlowControl;\n\nexport enum TCPPacketDetailName {\n    ack = \"ack\",\n    flow_control = \"flow_control\",\n    flags = \"flags\",\n}\n\nexport interface IPacketFlags {\n    type:TCPPacketDetailName.flags,\n\n    syn?:boolean,\n    ack?:boolean,\n    reset?:boolean,\n    fin?:boolean,\n}\n\nexport interface IPacketAcks {\n    type:TCPPacketDetailName.ack,\n}\n\nexport interface IPacketFlowControl {\n    type:TCPPacketDetailName.flow_control,\n}\n\nexport interface IEventRecordCreated {\n    header:IRecordHeader,\n\n    raw?:string\n}\n\nexport interface IEventRecordParsed {\n    header:IRecordHeader,\n\n    raw?:string\n}\n\nexport interface IRecordHeader {\n    content_type?:\"handshake\"|\"alert\"|\"application\"|\"change-cipherspec\"|\"unknown\",\n    version?:string,\n    payload_length?:number,\n    header_length?:number,\n    trailer_length?:number,\n\n    DEBUG_wiresharkFrameNumber?:number,\n}\n\n\nexport interface IEventH2FrameCreated {\n    stream_id:number,\n    frame:HTTP2Frame,\n    payload_length?:number,\n    header_length?:number,\n\n    raw?:string\n}\n\nexport interface IEventH2FrameParsed {\n    stream_id:number,\n    frame:HTTP2Frame,\n    payload_length?:number,\n    header_length?:number,\n\n    raw?:string\n}\n\nexport enum HTTP2FrameTypeName {\n    data = \"data\",\n    headers = \"headers\",\n    priority = \"priority\",\n    reset_stream = \"reset_stream\",\n    settings = \"settings\",\n    push_promise = \"push_promise\",\n    ping = \"ping\",\n    go_away = \"go_away\",\n    window_update = \"window_update\",\n    continuation = \"continuation\",\n    unknown = \"unknown\",\n    magic = \"magic\",\n}\n\n\nexport type HTTP2Frame = IDataFrame | IHeadersFrame | ISettingsFrame | IUnknownFrame | IAnyFrame;\n\nexport interface IDataFrame{\n    frame_type:HTTP2FrameTypeName.data,\n\n    byte_length?:number,\n    stream_end?:boolean,\n\n    raw?:string\n}\n\nexport interface IHeadersFrame {\n    frame_type:HTTP2FrameTypeName.headers,\n    byte_length?:number,\n\n    headers:Array<IHTTPHeader>,\n\n    stream_end?:boolean,\n    raw?:string\n}\n\nexport interface IHTTPHeader {\n    name:string,\n    value:string,\n}\n\nexport interface ISettingsFrame {\n    frame_type:HTTP2FrameTypeName.settings,\n    byte_length?:number,\n\n    raw?:string\n}\n\n// TODO: replace with proper frame definitions for all the different frame types!\nexport interface IAnyFrame {\n    frame_type:HTTP2FrameTypeName,\n    byte_length?:number,\n\n    raw?:string\n}\n\nexport interface IUnknownFrame {\n    frame_type:HTTP2FrameTypeName.unknown,\n    byte_length?:number,\n\n    raw?:string\n}\n","import * as qlogschema from '@quictools/qlog-schema';\nimport * as tcpschema from './qlog_tcp_tls_h2';\n\ninterface TCPConnection {\n    qlog:qlogschema.ITrace,\n    DEBUG_originalEntries:Array<any>,\n    probable_url:string|undefined, // guessed from the HTTP/2 :authority header\n    TLSAppDataTrailerSize:number|undefined,\n    TLSRecordsToBeAdjustedForTrailerSize:Array<any>,\n\n\n    DEBUG_HTTPtotalSize:number,\n    DEBUG_TLSpayloadSize:number,\n\n    timestampTracker:Map<Direction, {time: number, seq: number}>,\n}\n\nenum Direction {\n    sending = \"sending\",\n    receiving = \"receiving\",\n}\n\nexport default class TCPToQlog {\n\n    public static convert( pcapJSON:any ) {\n\n        console.log(\"TCPToQlog: converting file with \" + pcapJSON.length + \" events\");\n\n        const qlogFile:qlogschema.IQLog = { qlog_version: \"draft-02-wip\", traces: new Array<qlogschema.ITrace>() };\n        const connectionMap:Map<string, TCPConnection> = new Map<string, TCPConnection>();\n        \n\n        for ( const entry of pcapJSON ) {\n\n            if ( !entry._source || !entry._source.layers || (!entry._source.layers.ip && !entry._source.layers.ipv6) || !entry._source.layers.tcp ){\n                // console.error(\"Bad entry in JSON, skipping\", entry._source.layers);\n                // this is normal behaviour if we just dump a wireshark trace as a whole: will contain other protocols such as DNS as well, which we're not interested in here\n                continue;\n            }\n\n            let IP = entry._source.layers.ip;\n            let IPsrcField = \"ip.src\";\n            let IPdstField = \"ip.dst\";\n            if ( !IP ) {\n                IP = entry._source.layers.ipv6;\n                IPsrcField = \"ipv6.src\";\n                IPdstField = \"ipv6.dst\";\n            }\n                \n            const TCP = entry._source.layers.tcp;\n\n\n            let connection:TCPConnection|undefined = connectionMap.get( IP[IPsrcField] + \":\" + TCP[\"tcp.srcport\"] );\n            let direction:Direction = Direction.sending;\n\n            if ( !connection ) {\n                connection = connectionMap.get( IP[IPdstField] + \":\" + TCP[\"tcp.dstport\"] );\n                direction = Direction.receiving;\n            }\n\n            if ( !connection ) {\n                // create new connection (always initiated from the client)\n                direction = Direction.sending;\n\n                connection = { qlog: {  vantage_point: { type: qlogschema.VantagePointType.client }, \n                                        event_fields: [\"time\", \"category\", \"event\", \"data\"],\n                                        common_fields: { protocol_type: \"TCP_HTTP2\" },\n                                        events: new Array<Array<qlogschema.EventField>>(), \n                                        title: \"\" + IP[IPsrcField] + \":\" + TCP[\"tcp.srcport\"] + \" -> \" + IP[IPdstField] + \":\" + TCP[\"tcp.dstport\"],\n                                    }, \n                                DEBUG_originalEntries: [],\n                                probable_url: undefined,\n                                TLSAppDataTrailerSize: undefined,\n                                TLSRecordsToBeAdjustedForTrailerSize: new Array<any>(),\n\n                                DEBUG_HTTPtotalSize: 0,\n                                DEBUG_TLSpayloadSize: 0,\n                                timestampTracker: new Map<Direction, {time: number, seq: number}>(),\n                             }; \n\n                \n\n                connection.timestampTracker.set(Direction.sending, { time: -1, seq: -1});\n                connection.timestampTracker.set(Direction.receiving, { time: -1, seq: -1} );\n                                 \n                connectionMap.set( IP[IPsrcField] + \":\" + TCP[\"tcp.srcport\"], connection );\n\n                console.log(\"Created new connection #\", connectionMap.size, IP[IPsrcField] + \":\" + TCP[\"tcp.srcport\"], \" => \", IP[IPdstField] + \":\" + TCP[\"tcp.dstport\"] );\n\n\n                // TODO: add new connectivity event\n            }\n\n            this.addEntry( connection, direction, entry._source.layers );\n            connection.DEBUG_originalEntries.push( entry );\n        }\n\n        for ( const connection of connectionMap.values() ) {\n\n            if ( connection.probable_url ) {\n                connection.qlog.title += \" => \" + connection.probable_url;\n            }\n            else {\n                connection.qlog.title += \" => Unknown URL\";\n            }\n\n            if ( !connection.TLSAppDataTrailerSize ) {\n                console.error(\"TCPToQlog: unable to estimate TLS trailer size from this trace... \" + connection.qlog.title);\n            }\n            else {\n                connection.qlog.title += \" @ \" + connection.TLSAppDataTrailerSize + \" TLS trailer size\";\n            }\n\n            // we fix the ordering per Direction in the addEntry function, but between directions, there are still problems\n            connection.qlog.events.sort( (a, b) => { return (a[0] as number) - (b[0] as number) });\n            \n            // this code is mainly for debugging to make sure the above sorting actually works\n            // TODO: refactor to a map on event type instead of 2 hardcoded seqNr keepers\n            let prevSentSeqNr = -1;\n            let prevRecvSeqNr = -1;\n            for ( const evti of connection.qlog.events ){\n                const evt:any = evti as any;\n\n                if ( evt[2] === \"packet_sent\" ) {\n                    if ( evt[3].header && evt[3].sequence_number ){\n                        if ( evt[3].sequence_number < prevSentSeqNr ){\n                            console.error(\"BADLY ORDERED SEQ NRS send\");\n                        }\n\n                        prevSentSeqNr = evt[3].sequence_number;\n                    }\n                }\n                else if (evt[2] === \"packet_received\" ) {\n                    if ( evt[3].header && evt[3].sequence_number ){\n                        if ( evt[3].sequence_number < prevRecvSeqNr ){\n                            console.error(\"BADLY ORDERED SEQ NRS recv\");\n                        }\n\n                        prevRecvSeqNr = evt[3].sequence_number;\n                    }\n                }\n            }\n\n            qlogFile.traces.push( connection.qlog );\n\n            if ( connection.DEBUG_HTTPtotalSize !== connection.DEBUG_TLSpayloadSize ) {\n                console.error(\"HTTP doesn't fully fill TLS\", \"TLS: \", connection.DEBUG_TLSpayloadSize, \"HTTP: \", connection.DEBUG_HTTPtotalSize, connection.DEBUG_TLSpayloadSize - connection.DEBUG_HTTPtotalSize );\n            }\n        }\n\n        console.warn(\"TCPToQlog: remember to add support for HTTP/2 padding to be fully compliant!\");\n        console.log(\"TCPToQlog : done converting pcap\", connectionMap.values());\n\n\n        return qlogFile;\n    }\n\n    protected static addEntry( connection:TCPConnection, direction:Direction, entry:any ) {\n\n        // console.log( entry.frame );\n\n        let timestamp = parseFloat( entry.frame['frame.time_epoch']);\n\n        // timestamps are often badly ordered for us... SYN/ACK supposedly arrives long after the ACK reply...\n        // so, we use frame.number instead, since the ordering in the file seems to be correct at least\n        // timestamp = parseInt( entry.frame[\"frame.number\"], 10 );\n\n        const seqNr = parseInt( entry.tcp[\"tcp.seq\"], 10 );\n\n        // this should NEVER happen\n        if ( seqNr < connection.timestampTracker.get(direction)!.seq ) {   \n            console.error(\"UNORDERED SEQ NUMBERS\", timestamp, \" : \", seqNr, \" < \", connection.timestampTracker.get(direction));\n            // alert(\"UNORDERED TCP SEQ NUMBERS\");\n        }\n\n        if ( timestamp < connection.timestampTracker.get(direction)!.time ){\n            // if timestamps are off, at least make sure the sequence numbers are correct (i.e., order in JSON is ok, its just the timestamps that are borked)\n            if ( seqNr > connection.timestampTracker.get(direction)!.seq ) {\n                timestamp = connection.timestampTracker.get(direction)!.time + 0.000001; // pretend everything arrived at +- the same time\n                console.warn(\"Mismatched timestamps, but sequence numbers were correctly ordered: faking timestamp instead\");\n    \n                connection.timestampTracker.set(direction, { time: timestamp, seq: seqNr } );\n            }\n            else {\n                console.error(\"UNORDERED TIMESTAMPS\", timestamp, \" : \", seqNr, \" < \", connection.timestampTracker.get(direction));\n            }\n        }\n        else {\n            // normal case: timestamps are well-ordered\n            connection.timestampTracker.set(direction, { time: timestamp, seq: seqNr } );\n        }\n\n        // TCP packet info\n        {\n            const TCP = entry.tcp;\n\n            const qlogEvent:Array<qlogschema.EventField> = new Array<qlogschema.EventField>();\n            qlogEvent.push( timestamp );\n            qlogEvent.push( tcpschema.EventCategory.tcp );\n            \n            if ( direction === Direction.sending ) {\n                qlogEvent.push( tcpschema.TCPEventType.packet_sent );\n            }\n            else {\n                qlogEvent.push( tcpschema.TCPEventType.packet_received );\n            }\n    \n            // packetSent and Received are basically the same, just use Sent here\n            const packetSent:tcpschema.IEventPacketSent = {\n                header: {\n                    packet_number:   parseInt(entry.frame[\"frame.number\"], 10),\n                    sequence_number: parseInt(TCP[\"tcp.seq\"], 10),\n                    payload_length:  parseInt(TCP[\"tcp.len\"], 10),\n                    header_length:   parseInt(TCP[\"tcp.hdr_len\"], 10),\n                    \n                    packet_size:     parseInt(TCP[\"tcp.hdr_len\"], 10) + parseInt(TCP[\"tcp.len\"], 10),\n                },\n            }\n    \n            qlogEvent.push( packetSent );\n    \n            connection.qlog.events.push ( qlogEvent );\n        }\n\n        let TLS = undefined;\n        let HTTP = undefined;\n\n        // we extract the TLS records and HTTP2 frames first, as we need the H2 frames to calculate possible TLS trailer size\n        const TLSrecords = new Array<any>();\n        const HTTPframes = new Array<any>();\n\n        // sometimes. entry.tls is just the string \"Transport Layer Security\"... no idea why\n        if ( entry.tls && typeof entry.tls !== \"string\" ) {\n            TLS = entry.tls;\n\n            // tshark is INREDIBLY inconsistent with how it groups tls records\n            // sometimes there are multiple entries in the TLS top level object,\n            // sometimes the \"tls.record\" field is an array\n\n            const extractRecords = (obj:any) => {\n                if ( Object.keys(obj).length === 0 ) { // for some reason, there are often empty entries here... skip them\n\n                    // we THINK it only happens if there are multiple TLS record segments in 1 TCP and the latter record is enough to decode part of the H2 frame, but not entirely\n                    // bit wonky to check automatically if that's the case (because the TLS record decoding from up top is non-deterministic... urgh)\n                    console.warn(\"tcp2qlog: empty TLS record... ignoring\", obj, entry);\n\n                    return;\n                }\n\n                if ( obj[\"tls.record\"] ){\n                    if ( Array.isArray(obj[\"tls.record\"]) ) {\n                        for ( const el of obj[\"tls.record\"] ) {\n                            extractRecords( el );\n                        }\n                    }\n                    else {\n                        TLSrecords.push ( obj[\"tls.record\"] );\n                    }\n                }\n                else if ( obj[\"tls.record.length\"] ) {\n                    TLSrecords.push ( obj );\n                }\n                else {\n\n                    try {\n                        for ( const el of obj ) {\n                            extractRecords( el );\n                        }\n                    }\n                    catch (e) {\n                        console.error(\"TLS object was not iterable, skipping. Typically only if we have TLS Unknown Record!\", obj, entry);\n                    }\n                }\n            };\n\n            if ( TLS.length && TLS.length === 2 ){\n                // sometimes, we weirdly have two TLS entries but the second one is empty...\n                if ( Object.keys(TLS[1]).length === 0 ) {\n                    extractRecords( TLS[0] );\n                } \n                else {\n\n                    extractRecords( TLS );\n\n                    // console.warn(\"tcptoqlog: Merged two TLS entries into one, typically because there were two application-data records together. Should be fine.\", records, TLS );\n                }\n            }\n            else if ( TLS.length && TLS.length > 2 ) {\n                console.error(\"tcptoqlog: More than two TLS entries... what is happening?\", TLS );\n                extractRecords( TLS );\n            }\n            else {\n                extractRecords( TLS );\n            }\n\n\n            if ( TLSrecords.length === 0 ) {\n                console.error(\"tcptoqlog: No tls.record... what is happening?\", TLS );\n\n                return;\n            }\n        }\n\n        // sometimes. entry.http2 is just the string \"HyperText Transport Protocol 2\"... no idea why\n        if ( entry.http2 && typeof entry.http2 !== \"string\" ) {\n\n            HTTP = entry.http2;\n\n            const extractFrames = (obj:any) => {\n                if ( Object.keys(obj).length === 0 ) { // for some reason, there are often empty entries here... skip them\n\n                    // we THINK it only happens if there are multiple TLS record segments in 1 TCP and the latter record is enough to decode part of the H2 frame, but not entirely\n                    // bit wonky to check automatically if that's the case (because the TLS record decoding from up top is non-deterministic... urgh)\n                    console.warn(\"tcp2qlog: empty HTTP/2 frame... ignoring (expected if TLS record contains a small piece of the H2 frame. Look at the tls.segment.data array contents: 2nd entry should be +- 9 bytes)\", entry);\n\n                    return;\n                }\n\n                // the magic number is part of the payload, but wireshark doesn't show its length or anything... dreadful\n                if ( obj[\"http2.magic\"] ) {\n                    obj[\"http2.length\"] = \"24\"; // always 24 octets long, per-spec (PRI * HTTP/2.0\\r\\n\\r\\nSM\\r\\n\\r\\n)\n                    obj[\"http2.type\"]   = \"magic\";\n                }\n\n                if ( obj[\"http2.stream\"] ) {\n                    if ( Array.isArray(obj[\"http2.stream\"]) ) {\n                        for ( const el of obj[\"http2.stream\"] ){\n                            extractFrames(el);\n                        }\n                    }\n                    else {\n                        HTTPframes.push( obj[\"http2.stream\"] );\n                    }\n                }\n                else if ( obj[\"http2.length\"] ){ // member of http2.stream. NOt named http2.stream.length because wireshark is wildly inconsistent\n                    HTTPframes.push ( obj );\n                }\n                // sometimes, one of the entries is just the string \"HyperText Transport Protocol 2\" and for-of'ing that gives us the individual characters of the string...\n                // as this leads to inifite recursion, don't keep looking if it's a string\n                else if ( typeof obj !== \"string\" ) {\n                    try{\n                        for ( const el of obj ) {\n                            extractFrames( el );\n                        }\n                    }\n                    catch (e) {\n                        console.error(\"HTTP/2 object was not iterable, skipping. Haven't seen this before!\", obj, entry);\n                    }\n                }\n            };\n\n            extractFrames( HTTP );\n        }\n\n\n        if ( TLS ) {\n\n\n\n            // DEBUG: REMOVE\n            {\n                let recordLength = 0;\n                for ( const record of TLSrecords ) {\n                    if ( record[\"tls.record.content_type\"]=== \"23\" ) {\n                        recordLength += parseInt(record[\"tls.record.length\"], 10);\n                    }\n                }\n\n                let httpLength = 0;\n                for ( const frame of HTTPframes ) {\n                    // if ( frame[\"http2.type\"] === \"0\" ) {\n                    httpLength += parseInt( frame[\"http2.length\"], 10);\n                    // }\n                }\n\n                if ( Math.abs( recordLength - httpLength ) > 500 ) {\n                    console.warn(\"Weird inconsistencies between frame sizes\", recordLength, httpLength, entry);\n                }\n            }\n\n            for ( const record of TLSrecords ) {\n                \n                const qlogEvent:Array<qlogschema.EventField> = new Array<qlogschema.EventField>();\n                qlogEvent.push( timestamp );\n                qlogEvent.push( tcpschema.EventCategory.tls );\n                \n                if ( direction === Direction.sending ) {\n                    qlogEvent.push( tcpschema.TLSEventType.record_created );\n                }\n                else {\n                    qlogEvent.push( tcpschema.TLSEventType.record_parsed );\n                }\n\n                let contentTypeValue = \"\";\n                if ( record[\"tls.record.content_type\"] ) {\n                    contentTypeValue = record[\"tls.record.content_type\"];\n                }\n                // keep this off for now, at least for this we know up until where it still works\n                // else if ( record[\"tls.record.opaque_type\"] ) { // in some cases with re-ordered packets, content_Type isn't present but opaque_type is... very strange\n                //     contentTypeValue = record[\"tls.record.opaque_type\"];\n                // }\n\n                let content_type:\"handshake\"|\"alert\"|\"application\"|\"change-cipherspec\"|\"unknown\" = \"unknown\";\n                if ( contentTypeValue === \"23\" ) {\n                    content_type = \"application\";\n                }\n                else if ( contentTypeValue === \"22\" ) {\n                    content_type = \"handshake\";\n                }\n                else if ( contentTypeValue === \"21\" ) {\n                    content_type = \"alert\";\n                }\n                else if ( contentTypeValue === \"20\" ) {\n                    content_type = \"change-cipherspec\";\n                }\n\n                if ( !record[\"tls.record.length\"] ) {\n                    console.error(\"no tls.record.length set... weird\", record);\n                }\n                \n                const recordLength = parseInt(record[\"tls.record.length\"], 10);\n                let appDataLength = -1; \n                if ( record[\"tls.app_data\"] ) { \n                    appDataLength = (record[\"tls.app_data\"].length + 1) / 3;\n\n                    if ( appDataLength !== recordLength ) {\n                        console.error(\"tcptoqlog: Record length is different from app_data length\", recordLength, appDataLength, record, TLS);\n                    }\n                }\n\n                if ( content_type === \"application\" && appDataLength === -1 ) {\n                    console.error(\"tcptoqlog: TLS application record without app data... weird?\", record, TLS);\n                }\n\n                const fullPayloadLength = recordLength; // includes all trailers, but not the 5-byte header\n                let totalH2payloadLength = 0;\n                for ( const frame of HTTPframes ) {\n                    const frameLength = parseInt( frame[\"http2.length\"], 10 );\n                    totalH2payloadLength += frameLength + 9;\n                }\n\n                // try to find records that contain a full H2 frame in and of itself\n                // most connections have at least one of these...\n                // proper way would be to match H2 frames across TLS records, but that's a bunch more work, tracking re-assembly across TCP packets etc.\n                // this is dirty, but hopefully works well-enough (TM)\n                if ( content_type === \"application\" && TLSrecords.length === HTTPframes.length && fullPayloadLength - totalH2payloadLength > 0 &&\n                     !entry[\"tls.segments\"] && !TLS[\"tls.segment.data\"] ){\n                    \n                    // console.log(\"TLS payload length vs h2 consituent lengths:\", fullPayloadLength, totalH2payloadLength, fullPayloadLength - totalH2payloadLength, TLS, HTTP, entry);\n\n                    const suggestedTrailerSize = fullPayloadLength - totalH2payloadLength;\n\n                    if (suggestedTrailerSize !== 16 &&\n                        suggestedTrailerSize  !== 17 && // + 1 because TLS 1.3 repeats content type at the back against padding\n                        // suggestedTrailerSize !== 4 && \n                        suggestedTrailerSize !== 8 && \n                        suggestedTrailerSize !== 24) {\n                            console.error(\"TCPToQlog: TLS trailer size is not 16, 17, 8 or 24: potential error! TODO: actually check with negotiated cipher what is expected here!\", suggestedTrailerSize);\n                    } \n                    else if ( !connection.TLSAppDataTrailerSize ) {\n                        connection.TLSAppDataTrailerSize = suggestedTrailerSize;\n                        console.log(\"TCPToQlog: TLS trailer size estimated\", connection.TLSAppDataTrailerSize, connection.TLSRecordsToBeAdjustedForTrailerSize, entry);\n\n                        for ( const recordToBeAdjusted of connection.TLSRecordsToBeAdjustedForTrailerSize ) {\n                            recordToBeAdjusted.header.trailer_length = connection.TLSAppDataTrailerSize;\n                            recordToBeAdjusted.header.payload_length = recordToBeAdjusted.header.payload_length - recordToBeAdjusted.header.trailer_length;\n\n                            if ( recordToBeAdjusted.header.payload_length < 0 ) {\n                                console.error(\"TCPToQlog: adjusting for TLS trailer size lead to negative size...\", recordToBeAdjusted);\n                            }\n\n                            connection.DEBUG_TLSpayloadSize -= recordToBeAdjusted.header.trailer_length;\n                        }\n\n                        connection.TLSRecordsToBeAdjustedForTrailerSize = new Array<any>();\n                    }\n                    else {\n                        if ( connection.TLSAppDataTrailerSize !== fullPayloadLength - totalH2payloadLength ) {\n                            console.error(\"TCPToQlog: guesstimated TLS trailer size was inconsistent\", connection.TLSAppDataTrailerSize, \"!=\", fullPayloadLength - totalH2payloadLength, fullPayloadLength, totalH2payloadLength, TLS, HTTP, entry);\n                        }\n                    } \n                }\n\n\n                const trailerSize = (connection.TLSAppDataTrailerSize && content_type === \"application\") ? connection.TLSAppDataTrailerSize : 0;\n                \n                // if ( content_type === \"application\" ) {\n                //     // MAC at the end... hardcoded at 16 for now, will bite us in the ass later no doubt\n                //     // only for application-data records, as only those mess with HTTP/2 size calculations, we don't really care about handshake records at this point\n                //     trailerSize = 16;\n                // }\n\n                // if ( record[\"tls.record.opaque_type\"] ){\n                //     // In TLS 1.3, there is a 1-byte record type appended to the plaintext (to deal with padding)\n                //     // see also https://github.com/wireshark/wireshark/blob/71e03ef0423ef5215f8b4843433dc623ad1df74a/epan/dissectors/packet-tls.c#L1875\n                //     // this 1-byte is NOT included in the record.length field, OF COURSE, giving us some weird off-by-one errors before. Took 1.5 days to find this, urgh\n                //     trailerSize += 1;\n                // } \n\n                // some defensive programming, since we got hit so hard with the 1-byte opaque_type above\n                const expectedRecordFields = [\"tls.record.content_type\", \"tls.record.opaque_type\", \"tls.record.length\", \"tls.record.version\", \"tls.app_data\", \"tls.handshake\", \"tls.change_cipher_spec\", \"tls.handshake.fragments\", \"tls.alert_message\", \"tls.reassembled_in\", \"tls.handshake.reassembled_in\"];\n                for ( const field of Object.keys(record) ) {\n                    if ( expectedRecordFields.indexOf(field) < 0 ) {\n                        alert(\"Unknown field found in TLS record: \" + field);\n                        console.error(\"Unknown field found in TLS record: \", field, expectedRecordFields, entry);\n                    }\n                }\n\n                // recordCreated and recordParsed are basically the same, just use Sent here\n                const packetSent:tcpschema.IEventRecordCreated = {\n                    header: {\n                        content_type:   content_type,\n                        header_length: 5, // TLS record header length is always 5\n                        trailer_length: trailerSize, \n                        payload_length: recordLength - trailerSize,\n\n                        DEBUG_wiresharkFrameNumber: parseInt( entry.frame[\"frame.number\"], 10 ),\n                    },\n                }\n\n                // re-adjusted these later when we know the actual trailer size\n                if ( content_type === \"application\" && !connection.TLSAppDataTrailerSize ) {\n                    connection.TLSRecordsToBeAdjustedForTrailerSize.push ( packetSent );\n                }\n\n                if ( packetSent.header.content_type === \"application\" ) {\n                    connection.DEBUG_TLSpayloadSize += recordLength - trailerSize;\n                }\n\n                if ( packetSent.header.payload_length === 0 ) {\n                    console.error(\"TLS record without payload... seems weird\", record);\n                }\n        \n                qlogEvent.push( packetSent );\n        \n                connection.qlog.events.push ( qlogEvent );\n\n                // if ( entry.http2 ) {\n                //    console.log(\"RECORDS\", parseInt( (qlogEvent[3] as any).header.payload_length, 10) );\n                // }\n            }\n\n        }\n\n        if ( HTTP ) {\n            \n            const DEBUG_frameSizeTracker:Array<number> = [];\n\n            for ( const frame of HTTPframes ) {\n                // defensive programming: make sure sizes between TLS and HTTP2 match\n                // reassembled length is only when we actually had split records. Borks when records nicely fit inside TCP packets, so comment this out for now \n                // {\n                //     if ( entry[\"tls.segments\"] && entry[\"tls.segments\"][\"tls.reassembled.length\"] ){\n                //         const reassLength = parseInt( entry[\"tls.segments\"][\"tls.reassembled.length\"], 10);\n                //         const h2Length = parseInt(frame[\"http2.length\"], 10);\n\n                //         if ( reassLength !== h2Length + 9 ) {\n                //             console.error(\"H2 frame doesn't have a header of 9 bytes\", entry);\n                //         }\n                //     }\n                //     else {\n                //         console.error(\"HTTP/2 frame not from TLS segments\", frame, entry);\n                //     }\n                // }\n\n\n                const qlogEvent:Array<qlogschema.EventField> = new Array<qlogschema.EventField>();\n                qlogEvent.push( timestamp );\n                qlogEvent.push( tcpschema.EventCategory.http2 );\n                \n                if ( direction === Direction.sending ) {\n                    // NOTE: normally, if this would be logged in an implementation, frame_created would be logged BEFORE packet_sent\n                    // however, because we're parsing from a pcap, it is logged AFTER the packet_sent... \n                    // this has caused us some grief in the PacketizationDiagram setup, though it's actually easier on the logic if it's logged after\n                    // TODO: ideally, though, for consistency, we should refactor this and inject these before the previous packet_sent (does require updates to the TCP packetizationDiagram logic)\n                    qlogEvent.push( tcpschema.HTTP2EventType.frame_created );\n                }\n                else {\n                    qlogEvent.push( tcpschema.HTTP2EventType.frame_parsed );\n                }\n\n                const typeNrToName = (type:string) => {\n                    switch ( type ){\n                        case \"0\":\n                            return tcpschema.HTTP2FrameTypeName.data;\n                            break;\n                        case \"1\":\n                            return tcpschema.HTTP2FrameTypeName.headers;\n                            break;\n                        case \"2\":\n                            return tcpschema.HTTP2FrameTypeName.priority;\n                            break;\n                        case \"3\":\n                            return tcpschema.HTTP2FrameTypeName.reset_stream;\n                            break;\n                        case \"4\":\n                            return tcpschema.HTTP2FrameTypeName.settings;\n                            break;\n                        case \"5\":\n                            return tcpschema.HTTP2FrameTypeName.push_promise;\n                            break;\n                        case \"6\":\n                            return tcpschema.HTTP2FrameTypeName.ping;\n                            break;\n                        case \"7\":\n                            return tcpschema.HTTP2FrameTypeName.go_away;\n                            break;\n                        case \"8\":\n                            return tcpschema.HTTP2FrameTypeName.window_update;\n                            break;\n                        case \"9\":\n                            return tcpschema.HTTP2FrameTypeName.continuation;\n                            break;\n                        case \"magic\":\n                            return tcpschema.HTTP2FrameTypeName.magic;\n\n                        default:\n                            return tcpschema.HTTP2FrameTypeName.unknown;\n                            break;\n                    }\n                };\n                \n                const frameLength = parseInt( frame[\"http2.length\"], 10);\n                let headerLength = 0;\n                if ( frame[\"http2.type\"] !== \"magic\" ) {\n                    headerLength = 9;\n                }\n\n                const frameData = { frame_type: typeNrToName( frame[\"http2.type\"] ) };\n                switch (frameData.frame_type) {\n\n                    case tcpschema.HTTP2FrameTypeName.headers:\n                        (frameData as tcpschema.IHeadersFrame).headers = new Array<tcpschema.IHTTPHeader>();\n                        for ( const header of frame[\"http2.header\"] ) {\n                            const h:tcpschema.IHTTPHeader = { name: header[\"http2.header.name\"], value: header[\"http2.header.value\"] };\n                            (frameData as tcpschema.IHeadersFrame).headers.push( h );\n\n                            if ( header[\"http2.header.name\"] === \":authority\" ) {\n                                if ( !connection.probable_url ) {\n                                    connection.probable_url = header[\"http2.header.value\"];\n                                }\n                                else {\n                                    if ( connection.probable_url !== header[\"http2.header.value\"] ) {\n                                        console.error(\"Trying to guess URL for connection, but getting conflicting values\", header[\"http2.header.value\"], connection );\n                                    } \n                                }\n                            } \n                        }\n\n                        if ( frame[\"http2.flags_tree\"] && frame[\"http2.flags_tree\"][\"http2.flags.end_stream\"] ) {\n                            (frameData as tcpschema.IHeadersFrame).stream_end = (frame[\"http2.flags_tree\"][\"http2.flags.end_stream\"] === \"1\") ? true : false;\n                        }\n\n                        // console.log(\"HTTP Headers frame discovered\", (frameData as tcpschema.IHeadersFrame).headers);\n\n                        break;  \n\n                    case tcpschema.HTTP2FrameTypeName.data: \n                        (frameData as tcpschema.IDataFrame).byte_length = frameLength;\n\n                        if ( frame[\"http2.flags_tree\"] && frame[\"http2.flags_tree\"][\"http2.flags.end_stream\"] ) {\n                            (frameData as tcpschema.IDataFrame).stream_end = (frame[\"http2.flags_tree\"][\"http2.flags.end_stream\"] === \"1\") ? true : false;\n                        }\n                        break;\n\n                    default:\n                        break;\n                }\n\n                // frameCreated and frameParsed are basically the same, just use Sent here\n                const frameSent:tcpschema.IEventH2FrameCreated = {\n                    stream_id: ( frame[\"http2.type\"] !== \"magic\" ? parseInt( frame[\"http2.streamid\"], 10 ) : -1),\n                    payload_length: frameLength,\n                    header_length: headerLength,\n\n                    frame: frameData,\n                }\n\n                DEBUG_frameSizeTracker.push( frameLength + headerLength );\n        \n                connection.DEBUG_HTTPtotalSize += headerLength + frameLength;\n\n                qlogEvent.push( frameSent );\n        \n                connection.qlog.events.push ( qlogEvent );\n            }\n\n            // console.log(\"HTTP2 FRAMESIZES\", DEBUG_frameSizeTracker, DEBUG_frameSizeTracker.reduce( (prev, cur) => prev + cur, 0), frames);\n        }\n    }\n}\n","import QlogConnectionGroup from '@/data/ConnectionGroup';\nimport { IQlogEventParser, IQlogRawEvent } from '@/data/QlogEventParser';\nimport * as qlog from '@quictools/qlog-schema';\nimport Vue from 'vue';\n\n// a single trace\nexport default class QlogConnection {\n\n\n    public parent:QlogConnectionGroup;\n    public title:string;\n    public description:string;\n\n    public eventFieldNames:Array<string> = new Array<string>();\n    public commonFields:qlog.ICommonFields = {};\n    public configuration:qlog.IConfiguration = { time_offset: \"0\", time_units: \"ms\", original_uris: [] };\n\n    public vantagePoint!:qlog.IVantagePoint;\n\n    public wasAutoGenerated:boolean = false;\n\n    private events:Array<IQlogRawEvent>;\n\n    private lookupTable:Map<string, Map<string, Array<IQlogRawEvent>>>;\n\n    // The EventParser is needed because qlog events aren't always of the same shape\n    // They are also defined as flat arrays, with their member names defined separately (in event_fields)\n    // As such, it is not immediately clear which of the indices in the flat array leads to which property (e.g., the timestamp is -usually- at 0, but could be anywhere)\n    // So, the eventParser classes deal with this: figure out dynamically which index means what. We can then lookup the index by doing parser.load(event).propertyName\n    private eventParser!:IQlogEventParser;\n\n    public constructor(parent:QlogConnectionGroup) {\n        this.parent = parent;\n        this.title = \"\";\n        this.description = \"\";\n        this.events = new Array<IQlogRawEvent>();\n\n        this.vantagePoint = {\n            type: qlog.VantagePointType.unknown,\n            flow: qlog.VantagePointType.unknown,\n        };\n\n        (this.events as any)._isVue = true;\n\n        this.parent.addConnection( this );\n\n        this.lookupTable = new Map<string, Map<string, any>>();\n        (this.lookupTable as any)._isVue = true;\n    }\n\n    // performs a DEEP clone of this connection\n    // NOTE: this is SLOW and should only be used sparingly (mainly added for the sequence diagram)\n    public clone():QlogConnection {\n        // TODO: maybe find a better way to do this than just JSON.stringify?\n        // online they recommend lodash's deepClone\n        const output:QlogConnection = new QlogConnection( this.parent );\n\n        output.title = this.title;\n        output.description = this.description;\n        output.eventFieldNames = this.eventFieldNames.slice();\n        output.commonFields = JSON.parse( JSON.stringify(this.commonFields || []) );\n        output.configuration = JSON.parse( JSON.stringify(this.configuration || {}) );\n        output.vantagePoint = JSON.parse( JSON.stringify(this.vantagePoint || {}) );\n        const events = JSON.parse( JSON.stringify(this.events || []) );\n        (events as any)._isVue = true;\n        output.events = events;\n\n        output.eventParser = this.eventParser; // TODO: properly clone this one as well! should work for now, since it's supposed to be static\n\n        return output;\n    }\n\n    public setEventParser( parser:IQlogEventParser ){\n        // we need to bypass Vue's reactivity here\n        // this Connection class is made reactive in ConnectionStore, including the this.eventParser property and its internals\n        // however, if we use parseEvent(), this will update the internal .currentEvent property of this.eventParser\n        // That update reactively triggers an update...\n        // SO: if we would do {{ connection.parseEvent(evt).name }} inside the template (which is like... the main use case here)\n        // then we get an infinite loop of reactivity (parseEvent() triggers update, update is rendered, template calls parseEvent() again, etc.)\n\n        // Addittionally, we also don't want the full qlog file to be reactive: just the top-level stuff like the iQlog and the traces\n        // the individual events SHOULD NOT be reactive:\n        // 1) because they probably won't change\n        // 2) because they can be huge and it would get very slow with the way Vue does observability (adding an __ob__ Observer class to EACH object and overriding getters/setters for everything)\n\n        // We looked at many ways of doing this, most of which are discussed in the following issue:\n        // https://github.com/vuejs/vue/issues/2637\n        // In the end, the only thing that really worked for this specific setup is the ._isVue method\n        // We use this both for eventParser and events and for the current setup, it seems to prevent both the infinite loop and event objects being marked as Observable\n        // Obviously this is an ugly hack, but since Vue doesn't include a way to do this natively, I really don't see a better way...\n\n        (parser as any)._isVue = true; // prevent the parser from being Vue Reactive\n        this.eventParser = parser;\n        this.eventParser.init( this );\n    }\n\n    // NOTE: only use this directly when connection.parseEvent() is too slow due to Vue's ReactiveGetter on it\n    // see SequenceDiagramD3Renderer.calculateConnections for an example of that\n    public getEventParser(){\n        return this.eventParser;\n    }\n\n    public parseEvent( evt:IQlogRawEvent ){\n        return this.eventParser.load( evt );\n    }\n\n    public setEvents(events:Array<Array<any>>):void {\n        (events as any)._isVue = true; // prevent the individual events from being Vue Reactive, see above\n        this.events = events;\n    }\n    public getEvents():Array<Array<any>> { return this.events; }\n\n    public getVantagePointPerspective() {\n        if ( this.vantagePoint.type === qlog.VantagePointType.server || \n             this.vantagePoint.type === qlog.VantagePointType.client ) {\n                return this.vantagePoint.type;\n        }\n        else{\n            // either network or unknown\n            // for both, we look towards the .flow for guidance\n            // according to the spec, there shouldn't be a flow for \"unknown\", but let's be robust shall we\n            return this.vantagePoint.flow ? this.vantagePoint.flow : qlog.VantagePointType.unknown;\n        }\n    }\n\n    public setupLookupTable() {\n        if ( this.lookupTable.size !== 0 ){\n            return;\n        }\n\n        for ( const evt of this.events ){\n            const category  = this.parseEvent(evt).category;\n            const eventType = this.parseEvent(evt).name;\n\n            if ( !this.lookupTable.has(category) ) {\n                this.lookupTable.set( category, new Map<string, Array<IQlogRawEvent>>() );\n            }\n\n            const categoryDictionary = this.lookupTable.get(category);\n            if ( !categoryDictionary!.has(eventType) ) {\n                categoryDictionary!.set( eventType, new Array<IQlogRawEvent>() );\n            }\n\n            categoryDictionary!.get(eventType)!.push( evt );\n        }\n    }\n\n    public getLookupTable(){\n        this.setupLookupTable();\n        \n        return this.lookupTable;\n    }\n\n    public lookup(category: qlog.EventCategory | string, eventType: qlog.EventType | string):Array<IQlogRawEvent> {\n        if ( this.lookupTable.has(category) && this.lookupTable.get(category)!.has(eventType) ){\n            return this.lookupTable.get(category)!.get(eventType)!;\n        }\n        else {\n            return [];\n        }\n    }\n\n    public getLongName(){\n        let connectionName = \"\";\n        if ( this.vantagePoint ){\n            if (this.vantagePoint.name){\n                connectionName += this.vantagePoint.name + \" : \";\n            }\n            if (this.vantagePoint.type){\n                connectionName += this.vantagePoint.type;\n            }\n            else {\n                connectionName += \"UNKNOWN\";\n            }\n\n            connectionName += (this.vantagePoint && this.vantagePoint.flow) ? \" (flow = \" + this.vantagePoint.flow + \") : \" : \" : \";\n        }\n        if ( this.title ) {\n            connectionName += this.title;\n        }\n        if (this.description) {\n            connectionName +=  \" : \" + this.description;\n        }\n\n        return connectionName;\n    }\n}\n","import QlogConnectionGroup from '@/data/ConnectionGroup';\n\nimport * as qlog01 from '@quictools/qlog-schema';\nimport QlogConnection from '@/data/Connection';\nimport { IQlogEventParser, IQlogRawEvent, TimeTrackingMethod } from '@/data/QlogEventParser';\nimport { EventFieldsParser } from './QlogLoader';\n\n// V2 because we wanted a cleaner separation for draft02 from all the \"old style\" stuff in the QlogLoader class\n// eventually, this needs to be refactored so that the V2 class is the main, and then have a QlogLoaderLegacy or something for the rest\nexport class QlogLoaderV2 {\n\n    public static fromJSON(json:any) : QlogConnectionGroup | undefined {\n\n        if ( json && json.qlog_version ){\n            const version = json.qlog_version;\n\n            if ( version === \"draft-02-RC1\" || version === \"draft-02\" ){\n                return QlogLoaderV2.fromDraft02(json);\n            }\n            else {\n                console.error(\"QlogLoaderV2: Unknown qlog version! Only draft-02 and draft-02-RC1 are supported!\", version, json);\n                \n                return undefined;\n            }\n        }\n        else {\n            console.error(\"QlogLoaderV2: qlog files MUST have a qlog_version field in their top-level object!\", json);\n\n            return undefined;\n        }\n    }\n\n    protected static fromDraft02(json:any) : QlogConnectionGroup {\n\n        const fileContents:qlog01.IQLog = json as qlog01.IQLog;\n\n        console.log(\"QlogLoaderV2:fromDraft02 : \", fileContents, fileContents.traces);\n\n        const group = new QlogConnectionGroup();\n        group.version = fileContents.qlog_version;\n        group.format = (fileContents as any).qlog_format;\n        group.title = fileContents.title || \"\";\n        group.description = fileContents.description || \"\";\n\n        for ( let jsonconnection of fileContents.traces ){\n\n            const qlogconnections:Array<QlogConnection> = new Array<QlogConnection>();\n\n            if ( (jsonconnection as qlog01.ITraceError).error_description !== undefined ) {\n                jsonconnection = jsonconnection as qlog01.ITraceError;\n\n                const conn = new QlogConnection(group);\n                conn.title = \"ERROR\";\n                conn.description = jsonconnection.uri + \" : \" + jsonconnection.error_description;\n                continue;\n            }\n\n            jsonconnection = jsonconnection as qlog01.ITrace;\n\n            // from draft-02 onward, we allow both event_fields (csv-alike setup) and \"normal\" JSON formats\n            let usesEventFields:boolean = false;\n\n            if ( jsonconnection.event_fields !== undefined && jsonconnection.event_fields.length > 0  ) {\n                usesEventFields = true;\n            }\n\n            // a single trace can contain multiple component \"traces\" if group_id is used and we need to split them out first\n            let needsSplit:boolean = false;\n\n            let groupIDKey:string|number = \"group_id\";\n\n            if ( usesEventFields ){\n                groupIDKey = jsonconnection.event_fields.indexOf(\"group_id\");\n\n                if ( groupIDKey >= 0 ) { \n                    needsSplit = true;\n                }\n            }\n            else {\n                // if needs split, ALL event need a group_id in this mode\n                if ( jsonconnection.events && jsonconnection.events.length > 0 && jsonconnection.events[0][groupIDKey as any] !== undefined ) {\n                    needsSplit = true;\n                }\n            }\n\n            if ( needsSplit ){\n\n                const groupLUT:Map<string, QlogConnection> = new Map<string, QlogConnection>();\n\n                for ( const event of jsonconnection.events ) {\n\n                    // allow an empy last element to get around trailing comma restrictions in JSON\n                    if ( event.length === 0 || Object.keys(event).length === 0 ) {\n                        continue;\n                    }\n\n                    let groupID = event[ groupIDKey as any ]; // lookup in JS works both if string or number, magic!\n\n                    if ( typeof groupID !== \"string\" ) {\n                        groupID = JSON.stringify(groupID);\n                    }\n\n                    let conn = groupLUT.get(groupID as string);\n\n                    if ( !conn ){\n                        conn = new QlogConnection(group);\n                        conn.title = \"Group \" + groupID + \" : \";\n                        groupLUT.set( groupID as string, conn );\n\n                        qlogconnections.push( conn );\n                    }\n\n                    conn.getEvents().push( event );\n                }\n            }\n            // just one component trace, easy mode\n            else {\n                const conn = new QlogConnection(group);\n                qlogconnections.push( conn );\n                conn.setEvents( jsonconnection.events as any );\n\n                // allow an empy last element to get around trailing comma restrictions in JSON\n                const lastEvent = jsonconnection.events[ jsonconnection.events.length - 1 ];\n                if ( lastEvent.length === 0 || Object.keys(lastEvent).length === 0 ) {\n                    conn.getEvents().splice( jsonconnection.events.length - 1, 1 );\n                }\n            }\n\n\n\n            // component traces share most properties of the overlapping parent trace (e.g., vantage point etc.)\n            for ( const connection of qlogconnections ){\n\n                connection.title += jsonconnection.title ? jsonconnection.title : \"\";\n                connection.description += jsonconnection.description ? jsonconnection.description : \"\";\n                \n                connection.vantagePoint = jsonconnection.vantage_point || {} as qlog01.IVantagePoint;\n\n                if ( !connection.vantagePoint.type ){\n                    connection.vantagePoint.type = qlog01.VantagePointType.unknown;\n                    connection.vantagePoint.flow = qlog01.VantagePointType.unknown;\n                    connection.vantagePoint.name = \"No VantagePoint set\";\n                }\n\n                if ( usesEventFields ) {\n                    connection.eventFieldNames = jsonconnection.event_fields;\n                    connection.setEventParser( new EventFieldsParser() );\n                }\n                else {\n                    connection.setEventParser( new DirectEventParser() );\n                }\n\n                connection.commonFields = jsonconnection.common_fields!;\n                connection.configuration = jsonconnection.configuration || {};\n\n                // TODO: remove! Slows down normal traces!\n                let misOrdered = false;\n                let minimumTime = -1;\n                for ( const evt of connection.getEvents() ){\n                    const parsedEvt = connection.parseEvent(evt);\n                    \n                    if ( parsedEvt.absoluteTime >= minimumTime ){\n                        minimumTime = parsedEvt.absoluteTime;\n                    }\n                    else {\n                        misOrdered = true;\n                        console.error(\"QlogLoaderV2:draft02 : timestamps were not in the correct order!\", parsedEvt.absoluteTime, \" < \", minimumTime, parsedEvt);\n                        break;\n                    }\n                }\n\n                if ( misOrdered ){\n                    connection.getEvents().sort( (a, b) => { return connection.parseEvent(a).absoluteTime - connection.parseEvent(b).absoluteTime });\n                    console.error(\"QlogLoaderV2:draft02 : manually sorted trace on timestamps!\", connection.getEvents());\n\n                    // because startTime etc. could have changes because of the re-ordering\n                    if ( connection.eventFieldNames !== undefined && connection.eventFieldNames.length > 0 ) {\n                        connection.setEventParser( new EventFieldsParser() );\n                    }\n                    else {\n                        connection.setEventParser( new DirectEventParser() );\n                    }\n\n                    alert(\"Loaded trace was not absolutely ordered on event timestamps. We performed a sort() in qvis, but this slows things down and isn't guaranteed to be stable if the timestamps aren't unique! The qlog spec requires absolutely ordered timestamps. See the console for more details.\");\n                }\n            }\n        }\n\n        return group;\n    }\n\n\n}\n\n// tslint:disable max-classes-per-file\nexport class DirectEventParser implements IQlogEventParser {\n\n    // in draft-02, we switched from having qlog events as arrays of just values (coupled with \"column names\" in event_fields)\n    // to using normal JSON objects as events\n    // so [500, \"transport\", \"packet_sent\", { ... } ]\n    // became { time: 500, name: \"transport:packet_sent\", \"data\": {}}\n    // for the old-style, we use the EventFieldsParser class\n    // for the new-style, this DirectEventParser is used instead\n\n    private timeTrackingMethod = TimeTrackingMethod.ABSOLUTE_TIME;\n    \n    private addTime:number = 0;\n    private subtractTime:number = 0;\n    private timeMultiplier:number = 1;\n    private _timeOffset:number = 0;\n\n    private categoryCommon:string = \"unknown\";\n    private nameCommon:string = \"unknown\";\n\n\n    private currentEvent:IQlogRawEvent|undefined|any;\n\n    public get relativeTime():number {\n        if ( this.currentEvent === undefined || this.currentEvent.time === undefined ) {\n            return 0;\n        }\n\n        // TODO: now we do this calculation whenever we access the .time property\n        // probably faster to do this in a loop for each event in init(), but this doesn't fit well with the streaming use case...\n        // can probably do the parseFloat up-front though?\n        // return parseFloat((this.currentEvent as IQlogRawEvent)[this.timeIndex]) * this.timeMultiplier - this.subtractTime + this._timeOffset;\n        return parseFloat(this.currentEvent!.time) * this.timeMultiplier - this.subtractTime + this._timeOffset;\n    }\n\n    public get absoluteTime():number {\n        if ( this.currentEvent === undefined || this.currentEvent.time === undefined ) {\n            return 0;\n        }\n\n        return parseFloat(this.currentEvent!.time) * this.timeMultiplier + this.addTime + this._timeOffset;\n    }\n\n    public getAbsoluteStartTime():number {\n        // when relative time, this is reference_time, which is stored in this.addTime\n        // when absolute time, this is the time of the first event, which is stored in this.subtractTime\n        if ( this.timeTrackingMethod === TimeTrackingMethod.RELATIVE_TIME ){\n            return this.addTime;\n        }\n        else if ( this.timeTrackingMethod === TimeTrackingMethod.ABSOLUTE_TIME ){\n            return this.subtractTime;\n        }\n        else {\n            console.error(\"QlogLoader: No proper startTime present in qlog file. This tool doesn't support delta_time yet!\");\n\n            return 0;\n        }\n    }\n\n    public get timeOffset():number {\n        return this._timeOffset;\n    }\n\n    // we either have .name = \"category:name\" and need to split\n    // OR we just have .category directly\n    public get category():string {\n        if ( this.currentEvent && this.currentEvent.category ) {\n            return this.currentEvent.category;\n        }\n        else if ( this.currentEvent && this.currentEvent.name ) {\n            return this.currentEvent.name.split(\":\")[0]; // TODO: OPTIMIZE SOMEHOW?!?\n        }\n        else {\n            return this.categoryCommon;\n        }\n    }\n\n    // this is a bit confusing...\n    // in draft-01, we used the term \"type\" to describe the event type\n    // but in qvis, we used the term \"name\"\n    // now, in draft-02, there is actually a \"name\" field, used to describe the concatenation of category and type (i.e., name = \"category:type\")\n    // so here, we try to deal with that ambiguity, given that qvis expects just the type when asking for event.name, instead of the concatenation\n    public get name():string {\n        if ( this.currentEvent === undefined || this.currentEvent.name === undefined ) {\n            return this.nameCommon;\n        }\n\n        // .name SHOULD be \"category:name\", but it CAN also just be \"name\" so...\n        // ideally, it would be .type, but we've steered away from that out of fear that 'type' would be a reserved keyword in some language\n        const  split = this.currentEvent.name.split(\":\"); // TODO: OPTIMIZE SOMEHOW?!?\n\n        if ( split.length > 1 ) {\n            return split[1];\n        }\n        else {\n            return split[0];\n        }\n    }\n\n    public set name(val:string) {\n        if ( this.currentEvent === undefined || this.currentEvent.name === undefined ) {\n            return;\n        }\n\n        // e.g., \"transport:packet_sent\" becomed \"transport:packet_received\" if curName === \"packet_sent\"\n        const curName = this.name;\n        this.currentEvent.name = this.currentEvent.name.replace( curName, val );\n    }\n\n    public get data():any|undefined {\n        if ( this.currentEvent === undefined || this.currentEvent.data === undefined ) {\n            return;\n        }\n\n        return this.currentEvent.data;\n    }\n\n    public timeToMilliseconds(time: number | string): number {\n        return parseFloat(time as any) * this.timeMultiplier;\n    }\n\n    public getTimeTrackingMethod():TimeTrackingMethod {\n        return this.timeTrackingMethod;\n    }\n\n    public init( trace:QlogConnection ) {\n        this.currentEvent = undefined;\n\n        if ( trace.commonFields ){\n            if ( trace.commonFields.category ) {\n                this.categoryCommon = trace.commonFields.category;\n            }\n            if ( trace.commonFields.name ) {\n                this.nameCommon = trace.commonFields.name;\n            }\n\n            if ( trace.commonFields.time_format ) {\n                if ( trace.commonFields.time_format === \"relative\" ) {\n                    this.timeTrackingMethod = TimeTrackingMethod.RELATIVE_TIME;\n                }\n                else if ( trace.commonFields.time_format === \"delta\" ) {\n                    this.timeTrackingMethod = TimeTrackingMethod.DELTA_TIME;\n                }\n                else {\n                    this.timeTrackingMethod = TimeTrackingMethod.ABSOLUTE_TIME;\n                }\n            }\n            else {\n                // if choosing relative timestamps, they really SHOULD set time_format\n                // though in draft-01 this wasn't required, so cut people some slack\n                if ( trace.commonFields.reference_time !== undefined ) {\n                    this.timeTrackingMethod = TimeTrackingMethod.RELATIVE_TIME;\n\n                    // tslint:disable-next-line:max-line-length\n                    console.warn(\"QlogLoaderV2:Parse: the trace sets reference_time but doesn't set time_format! This is needed starting in draft-02, please change your qlogs! We pretend here that time_format was set to \\\"relative\\\".\", trace.commonFields);\n                }\n                else {\n                    this.timeTrackingMethod = TimeTrackingMethod.ABSOLUTE_TIME;\n                }\n            }\n        }\n\n        // events are normal JSON objects, typically having 3 properties: time, name, data\n\n        if ( trace.configuration && trace.configuration.time_units && trace.configuration.time_units === \"us\" ){\n            this.timeMultiplier = 0.001; // timestamps are in microseconds, we want to view everything in milliseconds\n        }\n\n        // We have two main time representations: relative or absolute\n        // We want to convert between the two to give outside users their choice of both\n        // to get ABSOLUTE time:\n        // if relative timestamps : need to do reference_time + time\n        // if absolute timestamps : need to do 0 + time\n        // to get RELATIVE time:\n        // if relative: need to return time - 0\n        // if absolute: need to return time - events[0].time\n\n        // so: we need two variables: addTime and subtractTime\n\n\n        if ( this.timeTrackingMethod === TimeTrackingMethod.ABSOLUTE_TIME ){\n            this.addTime = 0;\n            this.subtractTime = parseFloat( (trace.getEvents()[0] as any)!.time );\n        }\n        else if ( this.timeTrackingMethod === TimeTrackingMethod.RELATIVE_TIME ) {\n            if ( trace.commonFields && trace.commonFields.reference_time !== undefined ){\n                this.addTime = this.parseReferenceTime( trace.commonFields.reference_time, this.timeMultiplier );\n                this.subtractTime = 0;\n            }\n            else {\n                console.error(\"QlogLoaderV2: Using time_format === \\\"relative\\\" but no reference_time found in common_fields. Assuming 0.\", trace.commonFields);\n                this.addTime = 0;\n                this.subtractTime = 0;\n            }\n        }\n        else if ( this.timeTrackingMethod === TimeTrackingMethod.DELTA_TIME ) {\n            // DELTA_TIME is a weird one: timestamps are encoded relatively to the -previous- one\n            // since we don't always want to loop over events in-order, we support this using a pre-processing step here\n            // we basically construct the ABSOLUTE timestamps for all the events and then pretend we had absolute all along\n            // this only works if we have the events set here though...\n            this.timeTrackingMethod = TimeTrackingMethod.ABSOLUTE_TIME;\n\n            const allEvents = trace.getEvents()\n            if ( !allEvents || allEvents.length === 0 ) {\n                console.error(\"QlogLoaderV2: DELTA_TIME requires all events to be set before setEventParser is called... was not the case here!\");\n            }\n            else {\n                // allow both a start time in commonFields.reference_time AND as the first event element\n                if ( trace.commonFields && trace.commonFields.reference_time !== undefined ){\n                    this.addTime = 0;\n                    this.subtractTime = this.parseReferenceTime( trace.commonFields.reference_time, this.timeMultiplier );\n                    (allEvents[0] as any).time = parseFloat( (allEvents[0] as any).time ) + this.subtractTime; // so we can start from event 1 below\n                    // note: it's not just = this.subtractTime: the ref_time could be set when the process starts and stay the same for many connections that start later \n                    // put differently: first timestamp isn't always 0\n                }\n                else {\n                    this.addTime = 0;\n                    this.subtractTime = parseFloat( (allEvents[0] as any).time );\n                }\n            }\n\n            // transform the timestamps into absolute timestamps starting from the initial time found above\n            // e.g., initial time is 1500, then we have 3, 5, 7\n            // then the total timestamps should be 1500, 1503, 1508, 1515\n            let previousTime = this.subtractTime;\n            for ( let i = 1; i < allEvents.length; ++i  ) { // start at 1, because the first event can be special, see above\n                // console.log(\"Starting at \", allEvents[i][ this.timeIndex ], \"+\", previousTime, \" gives \", parseFloat(allEvents[i][ this.timeIndex ]) + previousTime);\n                (allEvents[i] as any).time = parseFloat((allEvents[i] as any).time) + previousTime;\n                previousTime = (allEvents[i] as any).time;\n            }\n        }\n        else {\n            console.error(\"QlogLoaderV2: No time_format present in qlog file. Pick one of either absolute, relative or delta in common_fields\", trace.commonFields);\n        }\n\n        if ( trace.configuration && trace.configuration.time_offset ){\n            this._timeOffset = parseFloat( trace.configuration.time_offset ) * this.timeMultiplier;\n        }\n\n        this.addTime        *= this.timeMultiplier;\n        this.subtractTime   *= this.timeMultiplier;\n    }\n\n    public setReferenceTime( time_ms:number ) : void {\n        this.addTime = time_ms;\n        // incoming time MUST BE IN MILLISECONDS for this to work!\n        // as such, the next line isn't needed (and was removed because it led to bugs)\n        // this.addTime *= this.timeMultiplier;\n    }\n\n    public load( evt:IQlogRawEvent ) : IQlogEventParser {\n        this.currentEvent = evt;\n\n        return this;\n    }\n\n    protected parseReferenceTime(refTimeIn:string, multiplier:number) : number {\n        // normally, we expect reference time to be in milliseconds or microseconds since the unix epoch\n        // in this case, parseFloat() gives us the value we need and we later adjust it to milliseconds\n        // however, we also want to support time strings like \"2020-08-16T20:53:56.582164977+00:00\"\n        // for this, we can use Date.parse and hope things go right.\n\n        if ( typeof refTimeIn === \"string\" && \n             (  \n                refTimeIn.indexOf(\":\") >= 0 ||\n                refTimeIn.indexOf(\"-\") >= 0 \n             ) ) {\n                // we assume we have a timestring, let's try\n                console.warn(\"QlogLoader:parseReferenceTime: We think reference_time is not in 'milliseconds since epoch' as a number, but rather as a time string. That is not really supported, though we'll try to parse it here!\", refTimeIn);\n                \n                if ( multiplier === 1 ) { // Date.parse is always in ms accuracy\n                    return Date.parse( refTimeIn );\n                } else {\n                    return Date.parse( refTimeIn ) * 1000; // only other option is us, so need to do ms * 1000 to get that (small loss of accuracy here)\n                }\n        }\n\n        return parseFloat( refTimeIn );\n    }\n}\n","import QlogConnectionGroup from '@/data/ConnectionGroup';\n\n\nimport * as qlog01 from '@quictools/qlog-schema';\nimport * as qlogPreSpec from '@quictools/qlog-schema/draft-16/QLog';\nimport { QUtil } from '@quictools/qlog-schema/util';\nimport QlogConnection from '@/data/Connection';\nimport { IQlogEventParser, IQlogRawEvent, TimeTrackingMethod } from '@/data/QlogEventParser';\n\nimport { QlogLoaderV2 } from \"./QlogLoaderV2\";\n\nexport class QlogLoader {\n\n    public static fromJSON(json:any) : QlogConnectionGroup | undefined {\n\n        if ( json && json.qlog_version ){\n            const version = json.qlog_version;\n            if ( version === \"0.1\" ){\n                return QlogLoader.fromPreSpec(json);\n            }\n            else if ( version === \"draft-00\" ){\n                return QlogLoader.fromDraft00(json);\n            }\n            else if ( version === \"draft-01\" ){\n                return QlogLoader.fromDraft01(json);\n            }\n            else if ( version === \"draft-02-wip\" ){\n                return QlogLoader.fromDraft02(json);\n            }\n            else if ( version === \"draft-02-RC1\" || version === \"draft-02\" ) {\n                return QlogLoaderV2.fromJSON( json );\n            }\n            else {\n                console.error(\"QlogLoader: Unknown qlog version! Only draft-00, draft-01 and draft-02-wip are supported!\", version, json);\n                \n                return undefined;\n            }\n        }\n        else {\n            console.error(\"QlogLoader: qlog files MUST have a qlog_version field in their top-level object!\", json);\n\n            return undefined;\n        }\n\n    }\n\n    protected static fromDraft02(json:any) : QlogConnectionGroup {\n\n        const fileContents:qlog01.IQLog = json as qlog01.IQLog;\n\n        console.log(\"QlogLoader:fromDraft02-wip : \", fileContents, fileContents.traces);\n\n        const group = new QlogConnectionGroup();\n        group.version = fileContents.qlog_version;\n        group.title = fileContents.title || \"\";\n        group.description = fileContents.description || \"\";\n\n        for ( let jsonconnection of fileContents.traces ){\n\n            // a single trace can contain multiple component \"traces\" if group_id is used and we need to split them out first\n            const qlogconnections:Array<QlogConnection> = new Array<QlogConnection>();\n\n            if ( (jsonconnection as qlog01.ITraceError).error_description !== undefined ) {\n                jsonconnection = jsonconnection as qlog01.ITraceError;\n\n                const conn = new QlogConnection(group);\n                conn.title = \"ERROR\";\n                conn.description = jsonconnection.uri + \" : \" + jsonconnection.error_description;\n                continue;\n            }\n\n            jsonconnection = jsonconnection as qlog01.ITrace;\n\n            const groupIDIndex:number = jsonconnection.event_fields.indexOf(\"group_id\");\n            if ( jsonconnection.event_fields && groupIDIndex >= 0 ) {\n                const groupLUT:Map<string, QlogConnection> = new Map<string, QlogConnection>();\n\n                for ( const event of jsonconnection.events ) {\n\n                    // allow an empy last element to get around trailing comma restrictions in JSON\n                    if ( event.length === 0 || Object.keys(event).length === 0 ) {\n                        continue;\n                    }\n\n                    let groupID = event[ groupIDIndex ];\n                    if ( typeof groupID !== \"string\" ) {\n                        groupID = JSON.stringify(groupID);\n                    }\n\n                    let conn = groupLUT.get(groupID as string);\n                    if ( !conn ){\n                        conn = new QlogConnection(group);\n                        conn.title = \"Group \" + groupID + \" : \";\n                        groupLUT.set( groupID as string, conn );\n\n                        qlogconnections.push( conn );\n                    }\n\n                    conn.getEvents().push( event );\n                }\n            }\n            else {\n                // just one component trace, easy mode\n                const conn = new QlogConnection(group);\n                qlogconnections.push( conn );\n                conn.setEvents( jsonconnection.events as any );\n\n\n                // allow an empy last element to get around trailing comma restrictions in JSON\n                const lastEvent = jsonconnection.events[ jsonconnection.events.length - 1 ];\n                if ( lastEvent.length === 0 || Object.keys(lastEvent).length === 0 ) {\n                    conn.getEvents().splice( jsonconnection.events.length - 1, 1 );\n                }\n            }\n\n            // component traces share most properties of the overlapping parent trace (e.g., vantage point etc.)\n            for ( const connection of qlogconnections ){\n\n                connection.title += jsonconnection.title ? jsonconnection.title : \"\";\n                connection.description += jsonconnection.description ? jsonconnection.description : \"\";\n                \n                connection.vantagePoint = jsonconnection.vantage_point || {} as qlog01.IVantagePoint;\n\n                if ( !connection.vantagePoint.type ){\n                    connection.vantagePoint.type = qlog01.VantagePointType.unknown;\n                    connection.vantagePoint.flow = qlog01.VantagePointType.unknown;\n                    connection.vantagePoint.name = \"No VantagePoint set\";\n                }\n\n                connection.eventFieldNames = jsonconnection.event_fields;\n                connection.commonFields = jsonconnection.common_fields!;\n                connection.configuration = jsonconnection.configuration || {};\n\n                connection.setEventParser( new EventFieldsParser() );\n\n                // TODO: remove! Slows down normal traces!\n                let misOrdered = false;\n                let minimumTime = -1;\n                for ( const evt of connection.getEvents() ){\n                    const parsedEvt = connection.parseEvent(evt);\n                    \n                    if ( parsedEvt.absoluteTime >= minimumTime ){\n                        minimumTime = parsedEvt.absoluteTime;\n                    }\n                    else {\n                        misOrdered = true;\n                        console.error(\"QlogLoader:draft02 : timestamps were not in the correct order!\", parsedEvt.absoluteTime, \" < \", minimumTime, parsedEvt);\n                        break;\n                    }\n                }\n\n                if ( misOrdered ){\n                    connection.getEvents().sort( (a, b) => { return connection.parseEvent(a).absoluteTime - connection.parseEvent(b).absoluteTime });\n                    console.error(\"QlogLoader:draft02 : manually sorted trace on timestamps!\", connection.getEvents());\n                    connection.setEventParser( new EventFieldsParser() ); // because startTime etc. could have changes because of the re-ordering\n\n                    alert(\"Loaded trace was not absolutely ordered on event timestamps. We performed a sort() in qvis, but this slows things down and isn't guaranteed to be stable if the timestamps aren't unique! The qlog spec requires absolutely ordered timestamps. See the console for more details.\");\n                }\n            }\n        }\n\n        return group;\n    }\n\n    protected static fromDraft01(json:any) : QlogConnectionGroup {\n\n        const fileContents:qlog01.IQLog = json as qlog01.IQLog;\n\n        console.log(\"QlogLoader:fromDraft01 : \", fileContents, fileContents.traces);\n\n        const group = new QlogConnectionGroup();\n        group.version = fileContents.qlog_version;\n        group.title = fileContents.title || \"\";\n        group.description = fileContents.description || \"\";\n\n        for ( let jsonconnection of fileContents.traces ){\n\n            // a single trace can contain multiple component \"traces\" if group_id is used and we need to split them out first\n            const qlogconnections:Array<QlogConnection> = new Array<QlogConnection>();\n\n            if ( (jsonconnection as qlog01.ITraceError).error_description !== undefined ) {\n                jsonconnection = jsonconnection as qlog01.ITraceError;\n\n                const conn = new QlogConnection(group);\n                conn.title = \"ERROR\";\n                conn.description = jsonconnection.uri + \" : \" + jsonconnection.error_description;\n                continue;\n            }\n\n            jsonconnection = jsonconnection as qlog01.ITrace;\n\n            const groupIDIndex:number = jsonconnection.event_fields.indexOf(\"group_id\");\n            if ( jsonconnection.event_fields && groupIDIndex >= 0 ) {\n                const groupLUT:Map<string, QlogConnection> = new Map<string, QlogConnection>();\n\n                for ( const event of jsonconnection.events ) {\n\n                    // allow an empy last element to get around trailing comma restrictions in JSON\n                    if ( event.length === 0 || Object.keys(event).length === 0 ) {\n                        continue;\n                    }\n\n                    let groupID = event[ groupIDIndex ];\n                    if ( typeof groupID !== \"string\" ) {\n                        groupID = JSON.stringify(groupID);\n                    }\n\n                    let conn = groupLUT.get(groupID as string);\n                    if ( !conn ){\n                        conn = new QlogConnection(group);\n                        conn.title = \"Group \" + groupID + \" : \";\n                        groupLUT.set( groupID as string, conn );\n\n                        qlogconnections.push( conn );\n                    }\n\n                    conn.getEvents().push( event );\n                }\n            }\n            else {\n                // just one component trace, easy mode\n                const conn = new QlogConnection(group);\n                qlogconnections.push( conn );\n                conn.setEvents( jsonconnection.events as any );\n\n\n                // allow an empy last element to get around trailing comma restrictions in JSON\n                const lastEvent = jsonconnection.events[ jsonconnection.events.length - 1 ];\n                if ( lastEvent.length === 0 || Object.keys(lastEvent).length === 0 ) {\n                    conn.getEvents().splice( jsonconnection.events.length - 1, 1 );\n                }\n            }\n\n            // component traces share most properties of the overlapping parent trace (e.g., vantage point etc.)\n            for ( const connection of qlogconnections ){\n\n                connection.title += jsonconnection.title ? jsonconnection.title : \"\";\n                connection.description += jsonconnection.description ? jsonconnection.description : \"\";\n                \n                connection.vantagePoint = jsonconnection.vantage_point || {} as qlog01.IVantagePoint;\n\n                if ( !connection.vantagePoint.type ){\n                    connection.vantagePoint.type = qlog01.VantagePointType.unknown;\n                    connection.vantagePoint.flow = qlog01.VantagePointType.unknown;\n                    connection.vantagePoint.name = \"No VantagePoint set\";\n                }\n\n                connection.eventFieldNames = jsonconnection.event_fields;\n                connection.commonFields = jsonconnection.common_fields!;\n                connection.configuration = jsonconnection.configuration || {};\n\n                connection.setEventParser( new EventFieldsParser() );\n\n\n                let needsUpgrade = false;\n                for ( const evt of connection.getEvents() ){\n                    const parsedEvt = connection.parseEvent(evt);\n                    const data = parsedEvt.data;\n                    \n                    if ( data && data.type ){\n                        needsUpgrade = true;\n                        data.packet_type = data.type.toLowerCase(); // older version of draft-01 had .type instead of .packet_type // FIXME: remove!\n                        data.packet_type = data.packet_type.replace(\"rtt\",\"RTT\");\n                    }\n                    else if ( data && data.packet_type ){\n                        data.type = data.packet_type.toLowerCase(); // older version of draft-01 had .type instead of .packet_type // FIXME: remove!\n                        data.packet_type = data.type.replace(\"rtt\",\"RTT\");\n                    }\n                }\n\n                // we had a version in between draft-00 and draft-01 that was also using the \"draft-01\" version...\n                // it looks a lot like draft-01, but still requires some changes\n                // we use some heuristics to see if it's the in-between version (semi-01) or not\n                if ( !needsUpgrade ) {\n                    for ( const evt of connection.getEvents() ){\n                        const parsedEvt = connection.parseEvent(evt);\n\n                        if ( parsedEvt.name === \"metric_update\" || // old name for metrics_updated, indicates semi-01\n                             parsedEvt.name === \"connection_new\" || \n                             parsedEvt.name === \"connection_close\" || \n                             parsedEvt.name === \"alpn_update\" ||\n                             parsedEvt.name === \"version_update\" ||\n                             parsedEvt.name === \"connection_id_update\" ){\n                            needsUpgrade = true;\n                            break;\n                        }\n                        else if ( parsedEvt.name === \"parameters_set\" ){ // there was no parameters_set in semi-01\n                            needsUpgrade = false;\n                            break;\n                        }\n                        else if ( parsedEvt.data.id !== undefined ) { // in -01, each id field is push_id or stream_id\n                            needsUpgrade = true;\n                            break;\n                        }\n                        else if ( parsedEvt.data.frames !== undefined ) {\n                            for ( const frame of parsedEvt.data.frames ){\n                                if ( frame.id ){ // in -01, each id field is push_id or stream_id\n                                    needsUpgrade = true;\n                                    break;\n                                }\n                            }\n                            if ( needsUpgrade ){\n                                break;\n                            }\n                        }\n                        else if ( parsedEvt.data.packet_type === \"onertt\" ) {\n                            needsUpgrade = true;\n                            break;\n                        }\n                        else if ( parsedEvt.data.packet_type === \"zerortt\" ) {\n                            needsUpgrade = true;\n                            break;\n                        }\n                    }\n                }\n\n                if ( needsUpgrade ){\n                    QlogLoader.fixPreviousInto01( connection );\n                }\n\n                 // TODO: remove! Slows down normal traces!\n                let misOrdered = false;\n                let minimumTime = -1;\n                for ( const evt of connection.getEvents() ){\n                    const parsedEvt = connection.parseEvent(evt);\n                     \n                    if ( parsedEvt.absoluteTime >= minimumTime ){\n                        minimumTime = parsedEvt.absoluteTime;\n                    }\n                    else {\n                        misOrdered = true;\n                        console.error(\"QlogLoader:draft01 : timestamps were not in the correct order!\", parsedEvt.absoluteTime, \" < \", minimumTime, parsedEvt);\n                        break;\n                    }\n                 }\n \n                if ( misOrdered ){\n                    connection.getEvents().sort( (a, b) => { return connection.parseEvent(a).absoluteTime - connection.parseEvent(b).absoluteTime });\n                    console.error(\"QlogLoader:draft01 : manually sorted trace on timestamps!\", connection.getEvents());\n                    connection.setEventParser( new EventFieldsParser() ); // because startTime etc. could have changes because of the re-ordering\n \n                    alert(\"Loaded trace was not absolutely ordered on event timestamps. We performed a sort() in qvis, but this slows things down and isn't guaranteed to be stable if the timestamps aren't unique! The qlog spec requires absolutely ordered timestamps. See the console for more details.\");\n                 }\n            }\n        }\n\n        return group;\n    }\n\n    protected static fixPreviousInto01( connection:QlogConnection ){\n        console.log(\"QlogLoader:fixPreviousInto01 : \", connection);\n\n        for ( const evt of connection.getEvents() ){\n            const parsedEvt = connection.parseEvent(evt);\n\n            if ( parsedEvt.name === \"connection_new\" ) {\n                parsedEvt.name = qlog01.ConnectivityEventType.connection_started;\n            }\n            else if ( parsedEvt.name === \"connection_id_update\" ) {\n                parsedEvt.name = qlog01.ConnectivityEventType.connection_id_updated;\n            }\n            else if ( parsedEvt.name === \"key_update\" ) {\n                parsedEvt.name = qlog01.SecurityEventType.key_updated;\n            }\n            else if ( parsedEvt.name === \"key_retire\" ) {\n                parsedEvt.name = qlog01.SecurityEventType.key_retired;\n            }\n            else if ( parsedEvt.name === \"stream_state_update\" ) {\n                parsedEvt.name = qlog01.TransportEventType.stream_state_updated;\n            }\n            else if ( parsedEvt.name === \"cc_state_update\" ) {\n                parsedEvt.name = qlog01.RecoveryEventType.congestion_state_updated;\n            }\n            else if ( parsedEvt.name === \"loss_alarm_set\" ) {\n                parsedEvt.name = qlog01.RecoveryEventType.loss_timer_set;\n            }\n            else if ( parsedEvt.name === \"loss_alarm_fired\" ) {\n                parsedEvt.name = qlog01.RecoveryEventType.loss_timer_triggered;\n            }\n            else if ( parsedEvt.name === \"connection_close\" ) {\n                parsedEvt.name = qlog01.ConnectivityEventType.connection_state_updated;\n                parsedEvt.data.new = qlog01.ConnectionState.closed;\n                if ( parsedEvt.data.src_id ){\n                    parsedEvt.data.src_id = \"removed when converting to draft-01\";\n                }\n            }\n            else if ( parsedEvt.name === \"cipher_update\" ){\n                parsedEvt.name = qlog01.TransportEventType.parameters_set;\n                parsedEvt.data.tls_cipher = parsedEvt.data.new || \"was set\";\n                if ( parsedEvt.data.new ) {\n                    parsedEvt.data.new = \"removed when converting to draft-01\";\n                }\n            } \n            else if ( parsedEvt.name === \"version_update\" ){\n                parsedEvt.name = qlog01.TransportEventType.parameters_set;\n                parsedEvt.data.quic_version = parsedEvt.data.new || \"was set\";\n                if ( parsedEvt.data.new ) {\n                    parsedEvt.data.new = \"removed when converting to draft-01\";\n                }\n            } \n            else if ( parsedEvt.name === \"alpn_update\" ){\n                parsedEvt.name = qlog01.TransportEventType.parameters_set;\n                parsedEvt.data.alpn = parsedEvt.data.new || \"was set\";\n                if ( parsedEvt.data.new ) {\n                    parsedEvt.data.new = \"removed when converting to draft-01\";\n                }\n            }\n            // semi-01\n            else if ( parsedEvt.name === \"metric_update\" ){ // old name for metrics_updated, indicates semi-01\n                parsedEvt.name = qlog01.RecoveryEventType.metrics_updated;\n            }\n            else if ( parsedEvt.name === \"datagram_sent\" ){\n                parsedEvt.name = qlog01.TransportEventType.datagrams_sent;\n            }\n            else if ( parsedEvt.name === \"datagram_received\" ){\n                parsedEvt.name = qlog01.TransportEventType.datagrams_received;\n            }\n            else if ( parsedEvt.name === \"spin_bit_update\" ){\n                parsedEvt.name = qlog01.ConnectivityEventType.spin_bit_updated;\n            }\n            else if ( parsedEvt.data.frames !== undefined ){\n                for ( const frame of parsedEvt.data.frames ){\n                    if ( frame.id !== undefined ){\n                        if ( frame.frame_type.indexOf(\"push\") >= 0  ){\n                            frame.push_id = frame.id;\n                        }\n                        else {\n                            frame.stream_id = frame.id;\n                        }\n                    }\n                    if ( frame.fields !== undefined ){\n                        frame.headers = frame.fields;\n                    }\n                }\n            }\n            else if ( parsedEvt.name === \"transport_parameters_update\" ){\n                parsedEvt.name = qlog01.TransportEventType.parameters_set;\n\n                for ( const param of parsedEvt.data.parameters ) {\n                    parsedEvt.data[ param.name ] = param.value;\n                }\n\n                parsedEvt.data.parameters = [];\n            }\n            \n            if ( parsedEvt.data.packet_type === \"onertt\" ) {\n                parsedEvt.data.packet_type = qlog01.PacketType.onertt;\n            }\n            else if ( parsedEvt.data.packet_type === \"zerortt\" ) {\n                parsedEvt.data.packet_type = qlog01.PacketType.zerortt;\n            }\n        }\n    }\n\n    protected static fromDraft00(json:any) : QlogConnectionGroup {\n\n        const fileContents:any = json; // we don't have TypeScript schema definitions for qlog00\n\n        console.log(\"QlogLoader:fromDraft00 : \", fileContents, fileContents.traces);\n\n        // TODO: rename QlogConnectionGroup because it's confusing with the group_id (they are NOT the same concepts!)\n        const group = new QlogConnectionGroup();\n        group.version = fileContents.qlog_version;\n        group.title = fileContents.title || \"\";\n        group.description = fileContents.description || \"\";\n\n        for ( const jsonconnection of fileContents.traces ){\n\n            // a single trace can contain multiple component \"traces\" if group_id is used and we need to split them out first\n            const qlogconnections:Array<QlogConnection> = new Array<QlogConnection>();\n\n            const groupIDIndex:number = jsonconnection.event_fields.indexOf(\"group_id\");\n            if ( jsonconnection.event_fields && groupIDIndex >= 0 ) {\n                const groupLUT:Map<string, QlogConnection> = new Map<string, QlogConnection>();\n\n                for ( const event of jsonconnection.events ) {\n                    // allow an empy last element to get around trailing comma restrictions in JSON\n                    if ( event.length === 0 || Object.keys(event).length === 0 ) {\n                        continue;\n                    }\n\n                    let groupID = event[ groupIDIndex ];\n                    if ( typeof groupID !== \"string\" ) {\n                        groupID = JSON.stringify(groupID);\n                    }\n\n                    let conn = groupLUT.get(groupID);\n                    if ( !conn ){\n                        conn = new QlogConnection(group);\n                        conn.title = \"Group \" + groupID + \" : \";\n                        groupLUT.set( groupID, conn );\n\n                        qlogconnections.push( conn );\n                    }\n\n                    conn.getEvents().push( event );\n                }\n            }\n            else {\n                // just one component trace, easy mode\n                const conn = new QlogConnection(group);\n                qlogconnections.push( conn );\n                conn.setEvents( jsonconnection.events as any );\n\n                // allow an empy last element to get around trailing comma restrictions in JSON\n                const lastEvent = jsonconnection.events[ jsonconnection.events.length - 1 ];\n                if ( lastEvent.length === 0 || Object.keys(lastEvent).length === 0 ) {\n                    conn.getEvents().splice( jsonconnection.events.length - 1, 1 );\n                }\n            }\n\n            // component traces share most properties of the overlapping parent trace (e.g., vantage point etc.)\n            for ( const connection of qlogconnections ){\n\n                connection.title += jsonconnection.title ? jsonconnection.title : \"\";\n                connection.description += jsonconnection.description ? jsonconnection.description : \"\";\n\n                connection.vantagePoint = {} as qlog01.IVantagePoint;\n                if ( jsonconnection.vantage_point ){\n                    connection.vantagePoint.name = jsonconnection.vantage_point.name || \"\";\n\n                    if ( jsonconnection.vantage_point.type === \"SERVER\" || jsonconnection.vantage_point.type === \"server\" ){\n                        connection.vantagePoint.type = qlog01.VantagePointType.server;\n                    }\n                    else if ( jsonconnection.vantage_point.type === \"CLIENT\" || jsonconnection.vantage_point.type === \"client\" ){\n                        connection.vantagePoint.type = qlog01.VantagePointType.client;\n                    }\n                    else if ( jsonconnection.vantage_point.type === \"NETWORK\" || jsonconnection.vantage_point.type === \"network\" ){\n                        connection.vantagePoint.type = qlog01.VantagePointType.network;\n                        connection.vantagePoint.flow = qlog01.VantagePointType.client;\n                    }\n                }\n\n                if ( !connection.vantagePoint.type ){\n                    connection.vantagePoint.type = qlog01.VantagePointType.unknown;\n                    connection.vantagePoint.flow = qlog01.VantagePointType.unknown;\n                    connection.vantagePoint.name = \"No VantagePoint set\";\n                }\n\n                connection.eventFieldNames = jsonconnection.event_fields;\n                connection.commonFields = jsonconnection.common_fields;\n                connection.configuration = jsonconnection.configuration || {};\n\n                connection.setEventParser( new EventFieldsParser() );\n\n                for ( const evt of connection.getEvents() ){\n                    const data = connection.parseEvent(evt).data;\n                    if ( data.frames ) {\n                        for ( const frame of data.frames ){\n                            if ( frame.frame_type ){\n                                frame.frame_type = frame.frame_type.toLowerCase();\n                            }\n                        }\n                    }\n                    \n                    if ( data.packet_type ){\n                        data.packet_type = data.packet_type.toLowerCase();\n                        data.packet_type = data.packet_type.replace(\"rtt\",\"RTT\");\n                        data.type = data.packet_type; // older version of draft-01 had .type instead of .packet_type // FIXME: remove!\n                    }\n\n                    // if ( data.header && data.header.packet_number !== undefined ){\n                    //     // some draft-00 traces use simple ints instead of strings for packet numbers. This breaks things.\n                    //     data.header.packet_number = \"\" + data.header.packet_number;\n                    // }\n                }\n\n                QlogLoader.fixPreviousInto01( connection );\n            }\n        }\n\n        return group;\n    }\n\n    protected static fromPreSpec(json:any) : QlogConnectionGroup {\n\n        const fileContents:qlogPreSpec.IQLog = json as qlogPreSpec.IQLog;\n\n        console.log(\"QlogLoader:fromPreSpec : \", fileContents, fileContents.connections);\n\n        // QLog00 toplevel structure contains a list of connections\n        // most files currently just contain a single connection, but the idea is to allow bundling connections on a single file\n        // for example 1 log for the server and 1 for the client and 1 for the network, all contained in 1 file\n        // This is why we call it a ConnectionGroup here, instead of QlogFile or something\n        const group = new QlogConnectionGroup();\n        group.version = fileContents.qlog_version;\n        group.description = fileContents.description || \"\";\n\n        for ( const jsonconnection of fileContents.connections ){\n\n            const connection = new QlogConnection(group);\n\n            // metadata can be just a string, so use that\n            // OR it can be a full object, in which case we want just the description here\n            let description = \"no description\";\n            if ( jsonconnection.metadata ){\n                if ( typeof jsonconnection.metadata === \"string\" ){\n                    description = jsonconnection.metadata;\n                }\n                else if ( jsonconnection.metadata.description ){ // can be empty object {}\n                    description = jsonconnection.metadata.description;\n                }\n            }\n\n            if ( jsonconnection.vantagepoint ){\n                connection.vantagePoint = {} as qlog01.IVantagePoint;\n                if ( jsonconnection.vantagepoint === \"SERVER\" || (jsonconnection.vantagepoint as any) === \"server\" ){\n                    connection.vantagePoint.type = qlog01.VantagePointType.server;\n                }\n                else if ( jsonconnection.vantagepoint === \"CLIENT\" || (jsonconnection.vantagepoint as any) === \"client\" ){\n                    connection.vantagePoint.type = qlog01.VantagePointType.client;\n                }\n                else if ( jsonconnection.vantagepoint === \"NETWORK\" || (jsonconnection.vantagepoint as any) === \"network\" ){\n                    connection.vantagePoint.type = qlog01.VantagePointType.network;\n                    connection.vantagePoint.flow = qlog01.VantagePointType.client;\n                }\n            }\n\n            connection.title = description;\n            connection.description = description;\n\n            connection.eventFieldNames = jsonconnection.fields;\n            connection.setEvents( jsonconnection.events as any );\n\n            connection.setEventParser( new PreSpecEventParser() );\n        }\n\n        return group;\n    }\n}\n\n\n// tslint:disable max-classes-per-file\nexport class EventFieldsParser implements IQlogEventParser {\n\n    private timeTrackingMethod = TimeTrackingMethod.ABSOLUTE_TIME;\n    \n    private addTime:number = 0;\n    private subtractTime:number = 0;\n    private timeMultiplier:number = 1;\n    private _timeOffset:number = 0;\n\n    private timeIndex:number = 0;\n    private categoryIndex:number = 1;\n    private nameIndex:number = 2;\n    private dataIndex:number = 3;\n\n    private categoryCommon:string = \"unknown\";\n    private nameCommon:string = \"unknown\";\n\n\n    private currentEvent:IQlogRawEvent|undefined;\n\n    public get relativeTime():number {\n        if ( this.timeIndex === -1 ) {\n            return 0;\n        }\n\n        // TODO: now we do this calculation whenever we access the .time property\n        // probably faster to do this in a loop for each event in init(), but this doesn't fit well with the streaming use case...\n        // can probably do the parseFloat up-front though?\n        // return parseFloat((this.currentEvent as IQlogRawEvent)[this.timeIndex]) * this.timeMultiplier - this.subtractTime + this._timeOffset;\n        return parseFloat((this.currentEvent as IQlogRawEvent)[this.timeIndex]) * this.timeMultiplier - this.subtractTime + this._timeOffset;\n    }\n\n    public get absoluteTime():number {\n        if ( this.timeIndex === -1 ) {\n            return 0;\n        }\n\n        return parseFloat((this.currentEvent as IQlogRawEvent)[this.timeIndex]) * this.timeMultiplier + this.addTime + this._timeOffset;\n    }\n\n    public getAbsoluteStartTime():number {\n        // when relative time, this is reference_time, which is stored in this.addTime\n        // when absolute time, this is the time of the first event, which is stored in this.subtractTime\n        if ( this.timeTrackingMethod === TimeTrackingMethod.RELATIVE_TIME ){\n            return this.addTime;\n        }\n        else if ( this.timeTrackingMethod === TimeTrackingMethod.ABSOLUTE_TIME ){\n            return this.subtractTime;\n        }\n        else {\n            console.error(\"QlogLoader: No proper startTime present in qlog file. This tool doesn't support delta_time yet!\");\n\n            return 0;\n        }\n    }\n\n    public get timeOffset():number {\n        return this._timeOffset;\n    }\n    public get category():string {\n        if ( this.categoryIndex === -1 ) {\n            return this.categoryCommon;\n        }\n\n        return (this.currentEvent as IQlogRawEvent)[this.categoryIndex].toLowerCase();\n    }\n    public get name():string {\n        if ( this.nameIndex === -1 ) {\n            return this.nameCommon;\n        }\n\n        return (this.currentEvent as IQlogRawEvent)[this.nameIndex].toLowerCase();\n    }\n    public set name(val:string) {\n        if ( this.nameIndex === -1 ) {\n            return;\n        }\n\n        (this.currentEvent as IQlogRawEvent)[this.nameIndex] = val;\n    }\n    public get data():any|undefined {\n        if ( this.dataIndex === -1 ) {\n            return {};\n        }\n\n        return (this.currentEvent as IQlogRawEvent)[this.dataIndex];\n    }\n\n    public timeToMilliseconds(time: number | string): number {\n        return parseFloat(time as any) * this.timeMultiplier;\n    }\n\n    public getTimeTrackingMethod():TimeTrackingMethod {\n        return this.timeTrackingMethod;\n    }\n\n    public init( trace:QlogConnection ) {\n        this.currentEvent = undefined;\n\n        if (trace.commonFields ){\n            if ( trace.commonFields.category || trace.commonFields.CATEGORY ) {\n                this.categoryCommon = trace.commonFields.category || trace.commonFields.CATEGORY;\n                this.categoryCommon = this.categoryCommon.toLowerCase();\n            }\n            if ( trace.commonFields.event || trace.commonFields.EVENT_TYPE ) {\n                this.nameCommon = trace.commonFields.event || trace.commonFields.EVENT_TYPE;\n                this.nameCommon = this.nameCommon.toLowerCase();\n            }\n        }\n\n        // events are a flat array of values\n        // the \"column names\" are in a separate list: eventFieldNames\n        // to know which index of the flat array maps to which type of value, we need to match indices to field types first\n        let eventFieldNames = trace.eventFieldNames.slice(); // copy because to tolowercase\n        eventFieldNames = eventFieldNames.map( (val) => val.toLowerCase() ); // 00 is uppercase, 01 lowercase\n\n        this.categoryIndex  = eventFieldNames.indexOf( \"category\" ); // FIXME: get this string from the qlog definitions somewhere\n        this.nameIndex      = eventFieldNames.indexOf( \"event_type\" );\n        if ( this.nameIndex === -1 ) {\n            this.nameIndex      = eventFieldNames.indexOf( \"event\" ); // 00 is event_type, 01 is event\n        }\n        this.dataIndex      = eventFieldNames.indexOf( \"data\" );\n\n\n        if ( trace.configuration && trace.configuration.time_units && trace.configuration.time_units === \"us\" ){\n            this.timeMultiplier = 0.001; // timestamps are in microseconds, we want to view everything in milliseconds\n        }\n\n        // We have two main time representations: relative or absolute\n        // We want to convert between the two to give outside users their choice of both\n        // to get ABSOLUTE time:\n        // if relative timestamps : need to do reference_time + time\n        // if absolute timestamps : need to do 0 + time\n        // to get RELATIVE time:\n        // if relative: need to return time - 0\n        // if absolute: need to return time - events[0].time\n\n        // so: we need two variables: addTime and subtractTime\n\n        this.timeIndex = eventFieldNames.indexOf(\"time\"); // typically 0\n        if ( this.timeIndex === -1 ){\n            this.timeIndex = eventFieldNames.indexOf(\"relative_time\"); // typically 0\n\n            if ( this.timeIndex === -1 ){\n                this.timeIndex = eventFieldNames.indexOf(\"delta_time\"); // typically 0 \n\n                if ( this.timeIndex === -1 ) {\n                    console.error(\"QlogLoader: No proper timestamp present in qlog file. Pick one of either time, relative_time or delta_time\", trace.eventFieldNames);\n                }\n                else {\n\n                    // DELTA_TIME is a weird one: timestamps are encoded relatively to the -previous- one\n                    // since we don't always want to loop over events in-order, we support this using a pre-processing step here\n                    // we basically construct the ABSOLUTE timestamps for all the events and then pretend we had absolute all along\n                    // this only works if we have the events set here though...\n                    this.timeTrackingMethod = TimeTrackingMethod.ABSOLUTE_TIME;\n\n                    const allEvents = trace.getEvents()\n                    if ( !allEvents || allEvents.length === 0 ) {\n                        console.error(\"QlogLoader: DELTA_TIME requires all events to be set before setEventParser is called... was not the case here!\");\n                    }\n                    else {\n                        // allow both a start time in commonFields.reference_time AND as the first event element\n                        if ( trace.commonFields && trace.commonFields.reference_time !== undefined ){\n                            this.addTime = 0;\n                            this.subtractTime = this.parseReferenceTime( trace.commonFields.reference_time, this.timeMultiplier );\n                            allEvents[0][this.timeIndex] += this.subtractTime; // so we can start from event 1 below\n                            // note: it's not just = this.subtractTime: the ref_time could be set when the process starts and stay the same for many connections that start later \n                            // put differently: first timestamp isn't always 0\n                        }\n                        else {\n                            this.addTime = 0;\n                            this.subtractTime = parseFloat( allEvents[0][this.timeIndex] );\n                        }\n                    }\n\n                    // transform the timestamps into absolute timestamps starting from the initial time found above\n                    // e.g., initial time is 1500, then we have 3, 5, 7\n                    // then the total timestamps should be 1500, 1503, 1508, 1515\n                    let previousTime = this.subtractTime;\n                    for ( let i = 1; i < allEvents.length; ++i  ) { // start at 1, because the first event can be special, see above\n                        // console.log(\"Starting at \", allEvents[i][ this.timeIndex ], \"+\", previousTime, \" gives \", parseFloat(allEvents[i][ this.timeIndex ]) + previousTime);\n                        allEvents[i][ this.timeIndex ] = parseFloat(allEvents[i][ this.timeIndex ]) + previousTime;\n                        previousTime = allEvents[i][ this.timeIndex ];\n                    }\n                }\n            }\n            else {\n                // Timestamps are in RELATIVE time\n                this.timeTrackingMethod = TimeTrackingMethod.RELATIVE_TIME;\n\n                if ( trace.commonFields && trace.commonFields.reference_time !== undefined ){\n                    this.addTime = this.parseReferenceTime( trace.commonFields.reference_time, this.timeMultiplier );\n                    this.subtractTime = 0;\n                }\n                else {\n                    console.error(\"QlogLoader: Using relative_time but no reference_time found in common_fields. Assuming 0.\", trace.eventFieldNames, trace.commonFields);\n                    this.addTime = 0;\n                    this.subtractTime = 0;\n                }\n            }\n        }\n        else{\n            // Timestamps are in ABSOLUTE time\n            this.timeTrackingMethod = TimeTrackingMethod.ABSOLUTE_TIME;\n            this.addTime = 0;\n            this.subtractTime = parseFloat( trace.getEvents()[0][this.timeIndex] );\n        }\n\n        if ( trace.configuration && trace.configuration.time_offset ){\n            this._timeOffset = parseFloat( trace.configuration.time_offset ) * this.timeMultiplier;\n        }\n\n        this.addTime        *= this.timeMultiplier;\n        this.subtractTime   *= this.timeMultiplier;\n    }\n\n    public setReferenceTime( time_ms:number ) : void {\n        this.addTime = time_ms;\n        // incoming time MUST BE IN MILLISECONDS for this to work!\n        // as such, the next line isn't needed (and was removed because it led to bugs)\n        // this.addTime *= this.timeMultiplier;\n    }\n\n    public load( evt:IQlogRawEvent ) : IQlogEventParser {\n        this.currentEvent = evt;\n\n        return this;\n    }\n\n    protected parseReferenceTime(refTimeIn:string, multiplier:number) : number {\n        // normally, we expect reference time to be in milliseconds or microseconds since the unix epoch\n        // in this case, parseFloat() gives us the value we need and we later adjust it to milliseconds\n        // however, we also want to support time strings like \"2020-08-16T20:53:56.582164977+00:00\"\n        // for this, we can use Date.parse and hope things go right.\n\n        if ( typeof refTimeIn === \"string\" && \n             (  \n                refTimeIn.indexOf(\":\") >= 0 ||\n                refTimeIn.indexOf(\"-\") >= 0 \n             ) ) {\n                // we assume we have a timestring, let's try\n                console.warn(\"QlogLoader:parseReferenceTime: We think reference_time is not in 'milliseconds since epoch' as a number, but rather as a time string. That is not really supported, though we'll try to parse it here!\", refTimeIn);\n                \n                if ( multiplier === 1 ) { // Date.parse is always in ms accuracy\n                    return Date.parse( refTimeIn );\n                } else {\n                    return Date.parse( refTimeIn ) * 1000; // only other option is us, so need to do ms * 1000 to get that (small loss of accuracy here)\n                }\n        }\n\n        return parseFloat( refTimeIn );\n    }\n}\n\n// tslint:disable max-classes-per-file\nexport class PreSpecEventParser implements IQlogEventParser {\n\n    private currentEvent:IQlogRawEvent|undefined;\n\n    public get relativeTime():number {\n        return parseFloat( (this.currentEvent as IQlogRawEvent)[0] );\n    }\n\n    public get absoluteTime():number {\n        return this.relativeTime;\n    }\n\n    public getAbsoluteStartTime():number {\n        return 0;\n    }\n\n    public get category():string {\n        return (this.currentEvent as IQlogRawEvent)[1];\n    }\n    public get name():string {\n        return (this.currentEvent as IQlogRawEvent)[2];\n    }\n    public set name(val:string) {\n        (this.currentEvent as IQlogRawEvent)[2] = val;\n    }\n    public get trigger():string {\n        return (this.currentEvent as IQlogRawEvent)[3];\n    }\n    public get data():any|undefined {\n        return (this.currentEvent as IQlogRawEvent)[4];\n    }\n\n    public get timeOffset():number {\n        return 0;\n    }\n\n    public init( trace:QlogConnection ) {\n        this.currentEvent = undefined;\n    }\n\n    public timeToMilliseconds(time: number | string): number {\n        return parseFloat(time as any);\n    }\n\n    public getTimeTrackingMethod():TimeTrackingMethod {\n        return TimeTrackingMethod.RELATIVE_TIME;\n    }\n\n    public setReferenceTime(time:number) {\n        // nothing to set I'm afraid... this type of trace isn't properly supported anyway\n    }\n\n    public load( evt:IQlogRawEvent ) : IQlogEventParser {\n        this.currentEvent = evt;\n\n        return this;\n    }\n}\n","import oboe from \"oboe\"; \n\ninterface DeduplicationContext {\n    JSONroot:any,\n    currentDepth:number,\n}\n\nexport default class StreamingJSONParser {\n\n    // this expects to get a valid qlog-formatted string and parses it to JSON format\n    // we don't directly use JSON.parse since the qlog string might not be valid JSON in and of itself (e.g., missing closing brackets)\n    public static parseQlogText( text:string, streamOnlyAsFallback:boolean = true ):any {\n\n        // by default, first tries to use JSON.parse (because it's more performant)\n        // Falls back to a streaming parser in case JSON.parse produces errors (e.g., file wasn't closed correctly)\n\n        if ( streamOnlyAsFallback ) {\n            try { \n                return JSON.parse( text );\n            }\n            catch (e) {\n                console.error(\"StreamingJSONParser:parse : JSON.parse returned an error, trying again with oboe.js fallback parser! Error was: : \", e);\n\n                return StreamingJSONParser.parseQlogText( text, false );\n            }\n        }\n        else {\n\n            let finalOutput:any = undefined;\n            let cleanExit = false;\n\n            // if there are event entries after the closing of the file (e.g., the closing brackets are written by thread 1, then thread 2 writes more events)\n            // the oboe parser will start generating a new root, which is not exactly the one we want (the old one is typically better)\n            // As long as we're parsing normally, the original root shouldn't change\n            // so we track that one and then, if there are errors, compare it with the latest one and pick the most likely candidate\n            let initialRoot:any = undefined;\n\n            const oboeStream = oboe()\n                // .node({\n                //     'node:*': ( node:any, path:any ) => {\n                //         return node; // successful parse just gives us the value, which we can return, is gathered correctly by oboe\n                //     },\n                // })\n\n                .on('node:*', (node:any, path:Array<any>, ancestors:any) => {\n\n                    if ( !initialRoot ) {\n                        initialRoot = oboeStream.root();\n                    }\n\n                    // console.log(\"Node parsed\", oboeStream.root());\n\n                    return node;\n                })\n                .done( (output:any) => {\n                    finalOutput = output;\n                    cleanExit = true;\n                })\n                .fail( (errorReport:any ) => {\n                    // any fails will get here, and we can ignore them for the final output\n                    console.error( \"StreamingJSONParser: There were errors in your qlog/JSON file. It was parsed with the fallback parser up until the point of the error.\", errorReport, oboeStream.root() );\n                \n                    let initialLength = 0;\n                    let currentLength = 0;\n\n                    const currentRoot = oboeStream.root();\n\n                    if ( initialRoot && initialRoot.traces && initialRoot.traces.length && initialRoot.traces.length > 0 && initialRoot.traces[0].events && initialRoot.traces[0].events.length > 0 ) {\n                        initialLength = initialRoot.traces[0].events.length;\n                    }\n\n                    if ( currentRoot && currentRoot.traces && currentRoot.traces.length && currentRoot.traces.length > 0 && currentRoot.traces[0].events && currentRoot.traces[0].events.length > 0 ) {\n                        currentLength = currentRoot.traces[0].events.length;\n                    }\n\n                    if ( currentLength >= initialLength ) {\n                        finalOutput = currentRoot;\n                    }\n                    else {\n                        finalOutput = initialRoot;\n                    }\n\n                });\n\n            oboeStream.emit('data', text);\n\n            // so, it depends on what's wrong with the input file what we get\n            // if the JSON simply isn't properly closed, the done() callback never fires (neither does fail())\n            // fail() mainly seems to fire when we have an error in the middle of the file instead of at the end\n            //  -> parsing then also only goes so far and stops there \n            // this means we get here after the emit() call and have to figure out if it worked or not. \n            // we use oboeStream.root() to get the parsed JSON up to this point (because finalOutput is probably not set)\n\n            if ( cleanExit ) {\n                // assume all is up to snuff, just return the output\n                return finalOutput;\n            }\n            else {\n\n                if ( !finalOutput ) {\n                    finalOutput = oboeStream.root();\n                }\n\n                // oboe parses field-by-field, so if the JSON is cut off after some fields but not enough to form a full qlog event, it still fails...\n                // (in other words: we have valid JSON, but not valid qlog)\n                // so, need to make sure our events are of proper shape (each event_field is present)\n                // this is probably not enough to deal with all problems, but should be ok for most\n\n                if ( finalOutput.traces ) {\n                    for ( const trace of finalOutput.traces ) {\n                        if ( trace.event_fields ) {\n                            const eventFieldsLength = trace.event_fields.length;\n\n                            if ( trace.events ) {\n                                const eventCount = trace.events.length;\n\n                                for ( let i = eventCount - 1; i >= 0; --i ){\n                                    if ( trace.events[i].length !== eventFieldsLength ) {\n                                        const removed = trace.events.pop();\n                                        console.error(\"StreamingJSONParser: incomplete event found, ignored in output.\", removed);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n\n                return finalOutput;\n            }\n        }\n    }\n\n    // this expects raw JSON of any format and de-duplicates its key entries\n    // main use-case is for loading wireshark/tshark JSON packet captures, since those often contain duplicate keys\n    public static parseJSONWithDeduplication( text:string ) {\n\n        const context:DeduplicationContext = {\n            JSONroot:undefined,\n            currentDepth:0,\n        };\n\n        const oboeStream = oboe()\n            .on('node:*', (node:any, path:Array<any>, ancestors:any) => {\n\n                return StreamingJSONParser.onFieldParsed( context, node, path );\n            })\n            .done( (output:any) => {\n                console.log( \"Result from deduped parser (which we will discard) :\", output );\n            })\n            .fail( (errorReport:any ) => {\n                // any fails will get here, and we can ignore them for the final output\n                console.log( \"Oboe failed, ignoring\", errorReport  );\n            });\n\n        oboeStream.emit('data', text);\n\n        return context.JSONroot;\n    }\n\n    // this is some of the worst code I've ever written,\n    // took me two days of nightmare filled debugging on many different input files\n    // this can probably be cleaned up considerably, but I was just so happy to finally find something that works that I didn't have the heart for it.\n    // This is custom de-duplication logic highly tied to how oboe.js callbacks provide data about fields that are parsed\n    // I wrote this because nowhere on the internet I can seem to find a general-purpose de-duplication algorithm (though some JSON parsing websites do seem to include it...)\n    // It was needed because tshark's --no-duplicate-keys option has a bug that sometimes drops data from the output (some of the duplicate key's data is replaced with earlier data)\n    protected static onFieldParsed( context:DeduplicationContext, value:any, path :Array<any>) {\n        // const currentDepth = context.currentDepth;\n        \n        if ( !context.JSONroot ) {\n            console.log(\"StreamingJSONparser:onFieldParsed : deciding on root for JSON\", value, path, context.JSONroot );\n            \n            // the real root hasn't been set yet because we don't know if it's an object or an array \n            if ( path[0] === 0 ) {\n                context.JSONroot = [];\n            }\n            else {\n                context.JSONroot = {};\n            }\n        }\n            \n        // oboe unrolls after parsing a complete object (e.g., first gives us 5, 5, then 4, 3, then 5, 5 again \n        // so keep track of the previous depth and only start adding new arrays if we are at that depth or lower \n        const previousDepth = context.currentDepth;\n        context.currentDepth = path.length;\n        \n        if ( context.currentDepth < previousDepth ) {\n            return; // nothing to add, simply cascading back up, only needed to set previousDepth to know that \n        }\n        \n        \n        // 2 phases: first move towards the current root, then start adding logic \n        // -2 because depth is the length, so -1 is the last element. We want the one before that \n        const currentRootIndex = previousDepth - 2;\n        // if ( currentDepth === previousDepth )\n        // \tcurrentRootIndex -= 1; // need to move one back because new one is still adding \n        \n        // console.log(\"Looking for root at index\", currentRootIndex, path, JSON.stringify(JSONroot));\n        \n        let root = context.JSONroot;\n        \n        for ( let i = 0; i <= currentRootIndex; ++i ) {\n            const currentKey = path[i];\n            \n            const nextPathElementIsArrayIndex = (typeof path[ i + 1 ] === \"number\");\n            \n            // console.log(\"current key\", currentKey, JSON.stringify(root) );\n            \n            // dichotomy:\n            // we both have arrays inside the json we want to keep, and duplicate keys that we want to make into arrays ourselves\n            // the first type we want to keep the array as a root, the second we want to advanced beyond the array... \n            \n            if ( Array.isArray(root[currentKey]) ) {\n                \n                if ( !nextPathElementIsArrayIndex ) {\n                    root = root[currentKey][ root[currentKey].length - 1 ];\n                }\n                else {\n                    root = root[currentKey];\n                }\n            }\n            else {\n                root = root[currentKey];\n            }\n        }\n        \n        // console.log(\"Current root found is\", currentRootIndex, path, JSON.stringify(root) );\n        \n        const pathStartIndex = Math.max(0, currentRootIndex + 1);\n        \n        if ( pathStartIndex >= path.length ) {\n            console.error(\"StreamingJSONParser: Path isn't long enough to encompass new entry, shouldn't happen!\", pathStartIndex, path);\n\n            return;\n        }\n        \n        for ( let i = pathStartIndex; i < path.length; ++i ) {\n        \n            const isFinalElement = i === path.length - 1;\n            const currentKey = path[i];\n            \n            const nextPathElementIsArrayIndex = !isFinalElement && (typeof path[ i + 1 ] === \"number\");\n            \n            \n            // console.log(\"-\".repeat(i) + \"Adding as final element?\", isFinalElement, JSON.stringify(root));\n            \n            if ( Array.isArray(root[currentKey]) ){ // we've seen it before and it's already an array, so we need to append to the array (3 or more items of the same type)\n                \n                if ( isFinalElement ) {\n                    root[currentKey].push( value );\n                }\n                else {\n                    if ( nextPathElementIsArrayIndex ) {\n                        root[currentKey].push( [] );\n                    }\n                    else {\n                        root[currentKey].push( {} );\n                    }\n                }\n\n                root = root[currentKey][ root[currentKey].length - 1 ];\n                \n                // console.log(\"-\".repeat(i) + \"Current key was array, pushed now:\", currentKey, JSON.stringify(JSONroot) );\n            }\n            else if ( !root.hasOwnProperty(currentKey) ) { // first time we see this thing\n                \n                if ( !isFinalElement ) {\n                    if (nextPathElementIsArrayIndex ) {\n                        root[currentKey] = [];\n                    }\n                    else {\n                        root[currentKey] = {};\n                    }\n                }\n                else {\n                    root[currentKey] = value;\n                }\n                \n                root = root[currentKey];\n            \n                // console.log(\"-\".repeat(i) + \"Current key was unknown object, added now:\", currentKey, JSON.stringify(JSONroot));\n            }\n            else { // second time we see this thing: need to create an array for it \n                \n                // console.log(\"-\".repeat(i) + \"Current key has to be added to a new array\", currentKey, root);\n                \n                const curValue = root[currentKey];\n                root[currentKey] = [];\n                root[currentKey].push( curValue );\n                \n                if ( isFinalElement ) {\n                    root[currentKey].push( value );\n                }\n                else {\n                    root[currentKey].push( {} );\n                }\n                \n                root = root[currentKey][ root[currentKey].length - 1 ];\n            }\n        }\n        \n        // && value because sometimes the value is null/undefined in the JSON and that is a valid value, believe it or not \n        if ( !root && value ) {\n            console.error(\"StreamingJSONParser: WEIRD STUFF\", root, path, context.JSONroot);\n        }\n        \n        return value;\n\n    }\n}\n","import {VuexModule, Module, Mutation, Action} from 'vuex-module-decorators';\nimport { Module as Modx } from 'vuex';\nimport axios, {AxiosResponse} from \"axios\";\nimport QlogConnectionGroup from \"@/data/ConnectionGroup\";\nimport QlogConnection from '@/data/Connection';\nimport { QlogLoader, PreSpecEventParser } from '@/data/QlogLoader';\nimport { IQlogRawEvent } from '@/data/QlogEventParser';\nimport Vue from 'vue';\nimport TCPToQlog from '@/components/filemanager/pcapconverter/tcptoqlog';\nimport StreamingJSONParser from '@/components/filemanager/utils/StreamingJSONParser';\n\n@Module({name: 'connections'})\nexport default class ConnectionStore extends VuexModule {\n\n    // WARNING : do not use an _ to prefix a variable, this doesn't play well with Vue(x) internals!\n    protected grouplist:Array<QlogConnectionGroup> = new Array<QlogConnectionGroup>();\n    protected outstandingRequests:number = 0;\n\n    public constructor(moduler: Modx<ThisType<{}>, any>){\n        super(moduler); \n    }\n\n    get groups(): Array<QlogConnectionGroup> {\n        return this.grouplist;\n    }\n\n    get outstandingRequestCount(): number {\n        return this.outstandingRequests;\n    }\n\n    @Mutation\n    public adjustOutstandingRequestCount(amount:number) {\n        this.outstandingRequests += amount;\n    }\n\n    @Mutation\n    public addGroup(group:QlogConnectionGroup) {\n        console.log(\"ConnectionStore Mutation for adding group\", group);\n        this.grouplist.push(group);\n    }\n\n    @Mutation\n    public deleteGroup(group:QlogConnectionGroup) {\n        const index = this.grouplist.indexOf(group);\n\n        if ( index !== -1 ) {\n            this.grouplist.splice(index, 1);\n        }\n    }\n\n    @Action\n    // TODO: move this away from here to its own location\n    // We need to prepare ways to load QLOG files of various qlog versions and then map them to our internal structs\n    // A way to do this is having converters, e.g., Draft17Loader, Draft18Loader etc. that get the fileContents \n    // and that then transform them to our internal classes\n    // Downside: we need internal classes for everything...\n    // However: if we just always use the latest versions or a single specified version from the @quictools/qlog-schema package,\n    // we can just use that internally and convert the rest to that and update when needed\n    // Potentially bigger problem: checking if json adheres to the TypeScript spec... \n    // this could be done with something like https://github.com/typestack/class-transformer\n    // but then we would need to add additional annotations to the Schema classes... urgh\n    public async addGroupFromQlogFile( { fileContentsJSON, fileInfo } : { fileContentsJSON:any, fileInfo:any } ){\n        \n        const group:QlogConnectionGroup | undefined = QlogLoader.fromJSON( fileContentsJSON );\n\n        if ( group !== undefined ){\n            group.filename = fileInfo.filename;\n            group.URL = fileInfo.URL;\n            group.URLshort = fileInfo.URLshort;\n            this.context.commit( \"addGroup\", group );\n        }\n        else{\n            console.error(\"ConnectionStore:addGroupFromQlogFile : Qlog file could not be parsed!\", fileContentsJSON, fileInfo);\n\n            Vue.notify({\n                group: \"default\",\n                title: \"ERROR parsing qlog file \" + fileInfo.filename,\n                type: \"error\",\n                duration: 6000,\n                text: \"File was successfully loaded but could not be parsed.<br/>Make sure you have a well-formed qlog file.<br/>View the devtools JavaScript console for more information.\",\n            });\n        }\n    }\n\n    @Action({commit: 'addGroup'})\n    public async DEBUG_LoadRandomFile(filename:string) {\n        const testGroup = new QlogConnectionGroup();\n        testGroup.description = filename;\n\n        const connectionCount = Math.round(Math.random() * 5) + 1;\n        for ( let i = 0; i < connectionCount; ++i ){\n            const connectionTest = new QlogConnection(testGroup);\n            connectionTest.title = \"Connection \" + i;\n\n            const events:Array<Array<any>> = new Array<Array<any>>();\n\n            const eventCount = Math.ceil(Math.random() * 3);\n            for ( let j = 0; j < eventCount; ++j ){\n                events.push( [j, \"testcat\", \"Connection #\" + i + \" - Event #\" + j, \"dummytrigger\" , { dummy: true }] );\n            }\n\n            connectionTest.setEventParser( new PreSpecEventParser() );\n            connectionTest.setEvents( events );\n        }\n\n        return testGroup;\n    }\n\n    @Action\n    public async loadFilesFromServer(queryParameters:any){\n\n        console.log(\"ConnectionStore:LoadFilesFromServer \", queryParameters);\n\n        if ( Object.keys(queryParameters).length === 0 ){\n            // empty parameter, nothing to be fetched\n            console.log(\"ConnectionSTore:LoadFilesFromServer : no URL query parameters present, doing nothing. \", queryParameters);\n\n            return;\n        }\n\n        let urlToLoad = \"\";\n        let fullURL = undefined;\n\n        if (queryParameters.file){\n            urlToLoad = queryParameters.file;\n            fullURL = queryParameters.file;\n        }\n        else if ( queryParameters.list ){\n            urlToLoad = queryParameters.list;\n        }\n        else if ( queryParameters.file1 ){\n            urlToLoad = queryParameters.file1 + \" etc.\";\n        }\n\n        if ( urlToLoad === \"\" ){\n            console.log(\"ConnectionSTore:LoadFilesFromServer : no file-loading URL query parameters present, doing nothing. \", queryParameters);\n            \n            return;\n        }\n\n        Vue.notify({\n            group: \"default\",\n            title: \"Loading file(s) via URL\",\n            text: \"Loading files via URL \" + urlToLoad + \".<br/>The backend server downloads the files, possibly transforms them into qlog, then sends them back. This can take a while.\",\n        });\n\n\n        // We want to deal with normal plaintext .qlog files, implicitly gzip or brotli encoded .qlog files (server sets Content-Encoding header, browser should decompress before it hits JS) \n        //      and explicitly encoded files (.qlog.br and .qlog.brotli and .qlog.gzip and .qlog.zip and .qlog.gz)\n        // We also don't want to have to go to our backend server for every file if we don't have to (this is only needed if the server hosting .qlog does not set proper CORS headers)\n\n        // flowchart:\n        // 1. If it's a .qlog, try to download it from the server directly (works if CORS is setup correctly)\n        //      - if plaintext: just works\n        //      - if implicitly encoded with correct Content-Encoding header: works\n        //      - if explicitly encoded with correct Content-Encoding header: works\n        //      - if implicitly or explicitly encoded without Content-Encoding header: download works, but conversion to JSON fails, falling back to the backend server \n        // 2. If it gives an error (we don't know if it's CORS or not since the browser doesn't expose that), retry again via the backend server\n        //      - server will fetch .qlog files, and process .json and .pcap/.keys files etc. via pcap2qlog\n        //      - if it's a .qlog.br or .qlog.gz or .qlog.zip file, server will simply serve it with correct Content Encoding, triggering the browser's decompression\n        //          - note: if it's an implicitly compressed file, the server will decompress it and send it full-sized over the wire atm... FIXME: should be fixed server-side, but we use wget for downloading, so need to dig deeper there\n\n        let apireturns:any = null;\n        let fileContents:any = null;\n\n        try {\n            this.context.commit(\"adjustOutstandingRequestCount\", 1 );\n\n            // 1. try direct download first\n            if ( urlToLoad.indexOf(\".qlog\") >= 0 ) {\n                apireturns = await fetch( urlToLoad );\n                if ( apireturns.ok ) { // 200-299 status\n                    const txt = await apireturns.text();\n                    console.log(\"ConnectionStore:loadFilesFromServer: successfully loaded file directly: \", urlToLoad, apireturns, txt);\n                    fileContents = StreamingJSONParser.parseQlogText(txt);\n                }\n                else {\n                    console.warn(\"ConnectionStore:loadFilesFromServer : tried to load .qlog from remote server directly but got probable CORS error. Trying again via backend server.\", queryParameters, apireturns);\n                }\n            }\n        }\n        catch (e) {\n            this.context.commit('adjustOutstandingRequestCount', -1);\n            apireturns = null;\n\n            console.warn(\"ConnectionStore:loadFilesFromServer : tried to load .qlog from remote server directly but got probable CORS error. Trying again via backend server.\", queryParameters, e);\n        }\n\n        try{\n            // 2. if it wasn't a .qlog file or we got a (probable) CORS error\n            if ( apireturns === null ) {\n                let url = '/loadfiles';\n                 // only for local debugging where we run the servers on different ports\n                if ( window.location.toString().indexOf(\"localhost:8080\") >= 0 ){\n                    url = \"https://localhost/loadfiles\";\n                }\n                else if (window.location.toString().indexOf(\":8080\") >= 0 ){\n                    // local testing, but with online service\n                    url = \"https://qvis.edm.uhasselt.be/loadfiles\";\n                }\n\n                // url = \"https://192.168.220.132:8089/loadfiles\"; \n    \n                this.context.commit(\"adjustOutstandingRequestCount\", 1 );\n    \n                // for documentation on the expected form of these parameters,\n                // see https://github.com/quiclog/qvis-server/blob/master/src/controllers/FileFetchController.ts\n                apireturns = await axios.get(url, { params: queryParameters });\n    \n                this.context.commit(\"adjustOutstandingRequestCount\", -1);\n\n                if ( apireturns !== null ) {\n\n                    if ( apireturns.qlog_version ) {\n                        // directly downloaded qlog file\n                        fileContents = StreamingJSONParser.parseQlogText(apireturns);\n                    }\n                    else if ( !apireturns.error && !apireturns.data.error && (apireturns.data.qlog || apireturns.data) ){\n                        let qlogRoot = apireturns.data; // proxied directly downloaded qlog file (.data is from the response object)\n\n                        if ( apireturns.data.qlog ) {\n                            qlogRoot = apireturns.data.qlog; // pcap2qlog output has 1 more level of indirection \n                        }\n\n                        if ( typeof qlogRoot === \"object\" ) {\n                            fileContents = qlogRoot; // returned json has multiple fields, the actual qlog is inside the .qlog field\n                        }\n                        else {\n                            fileContents = StreamingJSONParser.parseQlogText(qlogRoot);\n                        }\n\n                        if ( fileContents.traces && fileContents.traces.length > 0 && fileContents.traces[0].error_description ) {\n                            throw Error(\"Trace had an error: \" + JSON.stringify(fileContents));\n                        }\n                    }\n                }\n            }\n\n            // 3. we actually got some content, can add it to the store! \n            if ( fileContents !==  null && fileContents.qlog_version !== undefined ) {\n                        \n                let urlToLoadShort = urlToLoad;\n                if ( urlToLoadShort.length > 50 ){\n                    urlToLoadShort = urlToLoadShort.substr(0, 25) + \"...\" + urlToLoadShort.substr( urlToLoadShort.length - 26, urlToLoadShort.length);\n                }\n\n                const filename = \"Loaded via URL (\" + urlToLoadShort + \")\";\n\n                const fileInfo:any = { filename: filename };\n                if ( fullURL ) {\n                    fileInfo.URL = fullURL;\n\n                    if ( fullURL.length > 50 ) {\n                        fileInfo.URLshort = fullURL.substr(0, 25) + \"...\" + fullURL.substr( fullURL.lastIndexOf(\"/\"), fullURL.length );\n                    }\n                    else {\n                        fileInfo.URLshort = fullURL;\n                    }\n                }\n\n                this.context.dispatch('addGroupFromQlogFile', {fileContentsJSON: fileContents, fileInfo: fileInfo });\n\n                Vue.notify({\n                    group: \"default\",\n                    title: \"Loaded files via URL\",\n                    type: \"success\",\n                    text: \"The loaded files are now available for visualization \" + urlToLoad + \".<br/>Use the menu above to switch views.\",\n                });\n            }\n            else{\n                console.error(\"ConnectionStore:LoadFilesFromServer : ERROR : trace not added to qvis! : \", queryParameters, apireturns);\n\n                Vue.notify({\n                    group: \"default\",\n                    title: \"ERROR loading URL \" + urlToLoad,\n                    type: \"error\",\n                    duration: 6000,\n                    text: \"File(s) could not be loaded from \" + urlToLoad + \".<br/>View the devtools JavaScript console for more information.\",\n                });\n            }\n        }\n        catch (e) {\n            this.context.commit('adjustOutstandingRequestCount', -1);\n\n            console.error(\"ConnectionStore:LoadFilesFromServer : ERROR : trace not added to qvis! : \", e, queryParameters);\n\n            Vue.notify({\n                group: \"default\",\n                title: \"ERROR loading URL \" + urlToLoad,\n                type: \"error\",\n                duration: 6000,\n                text: \"File(s) could not be loaded from \" + urlToLoad + \".<br/>View the devtools JavaScript console for more information.\",\n            });\n        }\n    }\n\n    // we put this here because we want to load Demo files outside of the FileManager as well (so we don't always have to switch when testing)\n    @Action\n    public loadExamplesForDemo() {\n        // this.loadQlogDirectlyFromURL( { url : \"standalone_data/draft-01/5stream_from_chrome.qlog\", filename: \"DEMO_5streams.qlog\"} );\n        // this.loadQlogDirectlyFromURL( { url : \"standalone_data/draft-01/10paralllel_aioquic.qlog\", filename: \"DEMO_10stream_aioquic.qlog\"} );\n        // this.loadQlogDirectlyFromURL( { url : \"standalone_data/draft-01/10paralllel_litespeed.qlog\", filename: \"DEMO_10stream_multiplexing.qlog (14.6MB)\"} );\n\n        this.loadQlogDirectlyFromURL( { url : \"standalone_data/draft-01/new_cid.qlog\", filename: \"DEMO_new_cid.qlog (<1MB)\"} );\n        this.loadQlogDirectlyFromURL( { url : \"standalone_data/draft-01/spin_bit.qlog\", filename: \"DEMO_spin_bit.qlog (<1MB)\"} );\n        this.loadQlogDirectlyFromURL( { url : \"standalone_data/draft-01/parallel_10_50KB_f5.qlog\", filename: \"DEMO_10_parallel_streams.qlog (<1MB)\"} );\n        this.loadQlogDirectlyFromURL( { url : \"standalone_data/draft-01/doublevantage_100ms.qlog\", filename: \"DEMO_double_vantagepoint.qlog (3.1MB)\"} );\n        this.loadQlogDirectlyFromURL( { url : \"standalone_data/draft-00/quictrace_example_github.qlog\", filename: \"DEMO_quictrace_example.qlog (3.7MB)\"} );\n\n        // this.loadQlogDirectlyFromURL( { url : \"standalone_data/tcp/cdninstagram-com_rachelbrosnahan.json\", filename: \"DEMO_instagram_rachelbrosnahan (4MB)\"} );\n        // this.loadQlogDirectlyFromURL( { url : \"standalone_data/tcp/wikipedia_Playstation.json\", filename: \"DEMO_wikipedia_playstation (4MB)\"} );\n        // this.loadQlogDirectlyFromURL( { url : \"standalone_data/tcp/instagram-com_uhasselt.json\", filename: \"DEMO_instagram_uhasselt (31MB)\"} );\n        // this.loadQlogDirectlyFromURL( { url : \"standalone_data/tcp/output3.json\", filename: \"DEMO_paddingtest (4MB)\"} );\n        \n        \n    }\n\n    @Action\n    public loadQlogDirectlyFromURL( { url, filename } : { url:any, filename:string } ) {\n\n        Vue.notify({\n            group: \"default\",\n            title: \"Loading qlog file directly\",\n            text: \"Loading qlog file \\\"\" + filename + \"\\\" from URL \" + url + \". Large files can take a while to load.\",\n        });\n\n        this.context.commit(\"adjustOutstandingRequestCount\", 1 );\n\n        axios.get( url, {responseType: \"text\", transformResponse: undefined} ) // transformResponse needed because responseType 'text' doesn't prevent them from parsing JSON...\n        .then( (res:AxiosResponse<any> ) => {\n\n            this.context.commit(\"adjustOutstandingRequestCount\", -1 );\n\n            const fileContentsRaw:any = res.data;\n\n            let fileContents:any = StreamingJSONParser.parseQlogText( fileContentsRaw );\n\n            if ( fileContents && !fileContents.error && !fileContents.error_description && fileContents.qlog_version ){\n                this.context.dispatch('addGroupFromQlogFile', {fileContentsJSON: fileContents, fileInfo: { filename:filename }});\n\n                Vue.notify({\n                    group: \"default\",\n                    title: \"Loaded \" + filename,\n                    type: \"success\",\n                    text: \"This file is now available for visualization, use the menu above to switch views.\",\n                });\n            }\n            else if ( fileContents.length > 0 && fileContents[0]._source ){\n                // pcap .json loaded\n\n                // was already parsed, but potentially the file had duplicate keys that we missed with normal JSON.parse\n                // this is because wireshark's default JSON output has duplicate keys and even tshark output with --no-duplicate-keys has bugs\n                // so we have to deal with this manually here\n                fileContents = StreamingJSONParser.parseJSONWithDeduplication( fileContentsRaw );\n\n                const convertedContents = TCPToQlog.convert( fileContents );\n                this.context.dispatch('addGroupFromQlogFile', {fileContentsJSON: convertedContents, fileInfo: {filename: filename}});\n\n                Vue.notify({\n                    group: \"default\",\n                    title: \"Loaded \" + filename,\n                    type: \"success\",\n                    text: \"This file is now available for visualization, use the menu above to switch views.\",\n                });\n\n            }\n            else{\n                console.error(\"FileManagerContainer:loadDirectlyFromURL: error downloading file : \", url, res);\n                \n                Vue.notify({\n                    group: \"default\",\n                    title: \"ERROR loading \" + filename,\n                    type: \"error\",\n                    duration: 6000,\n                    text: \"This file could not be loaded from \" + url + \".<br/>View the devtools JavaScript console for more information.\",\n                });\n            }\n        })  \n        // .catch( (e) => {\n        //     this.context.commit(\"adjustOutstandingRequestCount\", -1 );\n            \n        //     Vue.notify({\n        //         group: \"default\",\n        //         title: \"ERROR loading \" + filename,\n        //         type: \"error\",\n        //         duration: 6000,\n        //         text: \"This file could not be loaded from \" + url + \".<br/>View the devtools JavaScript console for more information. \" + e,\n        //     });\n        // })\n    }\n}\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { getModule } from \"vuex-module-decorators\";\nimport { Component, Vue } from \"vue-property-decorator\";\nimport HelloWorld from \"@/components/HelloWorld.vue\";\n\nimport ConnectionStore from \"@/store/ConnectionStore\";\nimport ConnectionGroup from \"@/data/ConnectionGroup\";\n\n@Component\nexport default class App extends Vue {\n\n    protected store:ConnectionStore = getModule(ConnectionStore, this.$store);\n\n    protected created(){ \n        // this.store.loadFilesFromServer( this.$route.query );\n    }\n\n    protected mounted(){\n        this.store.loadFilesFromServer( this.$route.query );\n    }\n}\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/ts-loader/index.js??ref--12-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/ts-loader/index.js??ref--12-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=57a41039&\"\nimport script from \"./App.vue?vue&type=script&lang=ts&\"\nexport * from \"./App.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',{attrs:{\"id\":\"MainMenu\",\"fluid\":\"\"}},[_c('b-row',[_c('b-col',{staticClass:\"align-middle\",attrs:{\"cols\":\"1\",\"md\":\"auto\"}},[_c('h3',{staticStyle:{\"width\":\"290px\"}},[_vm._v(\"qvis\")])]),_c('b-col',[_c('b-nav',{attrs:{\"tabs\":\"\",\"align\":\"center\"}},[_c('b-nav-item',{staticClass:\"files-link\",attrs:{\"to\":\"/files\",\"active\":this.$route.fullPath.indexOf('/files') >= 0 || _vm.$route.fullPath === ''}},[_vm._v(\"\\n                    Manage files\\n                \")]),_c('b-nav-item',{staticClass:\"sequence-link\",attrs:{\"to\":\"/sequence\",\"active\":_vm.$route.fullPath.indexOf('/sequence') >= 0}},[_vm._v(\"\\n                    Sequence\\n                \")]),_c('b-nav-item',{staticClass:\"congestion-link\",attrs:{\"to\":\"/congestion\",\"active\":_vm.$route.fullPath.indexOf('/congestion') >= 0}},[_vm._v(\"\\n                    Congestion\\n                \")]),_c('b-nav-item',{staticClass:\"multiplexing-link\",attrs:{\"to\":\"/multiplexing\",\"active\":_vm.$route.fullPath.indexOf('/multiplexing') >= 0}},[_vm._v(\"\\n                    Multiplexing\\n                \")]),_c('b-nav-item',{staticClass:\"packetization-link\",attrs:{\"to\":\"/packetization\",\"active\":_vm.$route.fullPath.indexOf('/packetization') >= 0}},[_vm._v(\"\\n                    Packetization\\n                \")]),_c('b-nav-item',{staticClass:\"stats-link\",attrs:{\"to\":\"/stats\",\"active\":_vm.$route.fullPath.indexOf('/stats') >= 0}},[_vm._v(\"\\n                    qlog stats\\n                \")])],1)],1),_c('b-col',{attrs:{\"cols\":\"1\",\"md\":\"auto\"}},[_c('b-button',{staticStyle:{\"margin-right\":\"5px\"},attrs:{\"variant\":\"success\",\"href\":\"https://github.com/quiclog/qvis/issues/new?template=feature_request.md&title=Feature+request\",\"target\":\"_blank\"}},[_vm._v(\"Request feature\")]),_c('b-button',{attrs:{\"variant\":\"danger\",\"href\":\"https://github.com/quiclog/qvis/issues/new?template=bug-report-in-live-version.md&title=Bug+in+live+version\",\"target\":\"_blank\"}},[_vm._v(\"Report issue\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { getModule } from \"vuex-module-decorators\";\nimport { Component, Vue } from \"vue-property-decorator\";\nimport HelloWorld from \"@/components/HelloWorld.vue\";\n\nimport ConnectionStore from \"@/store/ConnectionStore\";\nimport ConnectionGroup from \"@/data/ConnectionGroup\";\n\n@Component({})\nexport default class VUEDebug extends Vue {\n    public mounted(){\n        console.log( this.$route );\n    }\n}\n\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MainMenu.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MainMenu.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./MainMenu.vue?vue&type=template&id=7d6c59e9&scoped=true&\"\nimport script from \"./MainMenu.vue?vue&type=script&lang=ts&\"\nexport * from \"./MainMenu.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./MainMenu.vue?vue&type=style&index=0&id=7d6c59e9&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7d6c59e9\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"home\"},[_c('HelloWorld',{attrs:{\"msg\":\"This is the VUE debugger to test reactive data coupling\"}}),_c('b-button',{on:{\"click\":function($event){return _vm.AddRandomConnection()}}},[_vm._v(\"Add new random ConnectionGroup\")]),_vm._v(\" | \\n    \"),_c('b-button',{on:{\"click\":function($event){return _vm.DeleteFirstConnection()}}},[_vm._v(\"Delete First\")]),_vm._v(\" | \\n    \"),_c('b-button',{on:{\"click\":function($event){return _vm.ChangeConnectionName()}}},[_vm._v(\"Change Connection Name\")]),_vm._v(\" | \\n    \"),_c('b-button',{on:{\"click\":function($event){return _vm.ChangeEventName()}}},[_vm._v(\"Change Event Name\")]),_vm._v(\" | \\n    \"),_c('b-button',{on:{\"click\":function($event){return _vm.RemoveEvent()}}},[_vm._v(\"RemoveEvent\")]),_vm._l((_vm.groups),function(connectionGroup){return _c('div',{key:connectionGroup.description},[_vm._v(\"\\n        \"+_vm._s(connectionGroup.description)+\"\\n    \")])}),_vm._l((_vm.connections),function(connection,index){return _c('div',{key:index},_vm._l((connection.getEvents()),function(event,index){return _c('div',{key:index},[_vm._v(\"\\n            - Event: ROBIN : \"+_vm._s(connection.title)+\" : \"+_vm._s(connection.parseEvent(event).name)+\"\\n        \")])}),0)})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"hello\"},[_c('h1',[_vm._v(_vm._s(_vm.msg))])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\nimport { Component, Prop, Vue } from \"vue-property-decorator\";\n\n@Component\nexport default class HelloWorld extends Vue {\n    @Prop() private msg!: string;\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelloWorld.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelloWorld.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./HelloWorld.vue?vue&type=template&id=5364c468&\"\nimport script from \"./HelloWorld.vue?vue&type=script&lang=ts&\"\nexport * from \"./HelloWorld.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { getModule } from \"vuex-module-decorators\";\nimport { Component, Vue } from \"vue-property-decorator\";\nimport HelloWorld from \"@/components/HelloWorld.vue\";\n\nimport ConnectionStore from \"@/store/ConnectionStore\";\nimport ConnectionGroup from \"@/data/ConnectionGroup\";\n\n@Component({\n    components: {\n        HelloWorld,\n    },\n})\nexport default class VUEDebug extends Vue {\n\n    protected store:ConnectionStore = getModule(ConnectionStore, this.$store);\n\n    get groups() {\n        return this.store.groups;\n    }\n\n    get connections() {\n        if ( this.store.groups.length > 0 ) {\n            return this.store.groups[ this.store.groups.length - 1 ].getConnections();\n        }\n        else {\n            return undefined;\n        }\n    }\n\n    protected created(){\n        // TODO: only here for debug reasons obviously\n        if ( this.store.groups.length <= 1 ){\n            this.AddRandomConnection();\n            this.AddRandomConnection();\n            this.AddRandomConnection();\n        }\n    }\n\n    protected AddRandomConnection() {\n        const filename:string = \"RandomConnectionGroup \" + Math.round(Math.random() * 100);\n        this.store.DEBUG_LoadRandomFile( filename ).then((cgroup:ConnectionGroup) => {\n            console.log(\"ConnectionGroup added. This is called AFTER the mutation has been committed to the store!\", cgroup);\n        });\n    }\n\n    protected DeleteFirstConnection() {\n        this.store.deleteGroup( this.groups[0] );\n    }\n\n    protected ChangeEventName() { \n        this.connections![0].getEvents()[0][2] = \"Event was changed\";\n        console.log(\"Event name was changed, but SHOULD NOT reflect in UI since events are no longer reactive!\", this.connections![0]);\n    }\n\n    protected ChangeConnectionName() { \n        this.connections![0].title = \"Connection name was changed\";\n        console.log(\"Connection name was changed\", this.connections![0]);\n    }\n\n    protected RemoveEvent() {\n        const events = this.connections![0].getEvents();\n        events.splice( events.length - 1, 1 );\n    }\n} \n","import * as qlogschema from '@quictools/qlog-schema';\n\nexport enum PacketType {\n    initial = \"ENCRYPTION_INITIAL\",\n    handshake = \"ENCRYPTION_HANDSHAKE\",\n    zerortt = \"ENCRYPTION_ZERO_RTT\",\n    onertt = \"ENCRYPTION_FORWARD_SECURE\",\n}\n\nexport interface Netlog {\n    constants: any,\n    events: Array<Event>,\n}\n\nexport interface Constants {\n    logEventTypes: any,\n    logSourceType: any,\n    logEventPhase: any,\n    timeTickOffset: number,\n}\n\nexport interface Event {\n    params: any,\n    phase: number,\n    source: EventSource,\n    time: string,\n    type: number,\n}\n\nexport interface EventSource {\n    id: number,\n    start_time: string,\n    type: number,\n}\n\nexport interface QUIC_SESSION {\n    cert_verify_flags?: number,\n    connection_id?: string,\n    host: string,\n    network_isolation_key?: string,\n    port?: number,\n    privacy_mode?: string,\n    require_confirmation?: boolean,\n    versions?: string,\n}\n\nexport interface QUIC_SESSION_PACKET_SENT {\n    encryption_level: PacketType,\n    packet_number: number,\n    sent_time_us: number,\n    size: number,\n    transmission_type: string\n}\n\nexport interface QUIC_SESSION_COALESCED_PACKET_SENT {\n    info: string\n}\n\nexport interface QUIC_SESSION_COALESCED_PACKET {\n    total_length: string,\n    padding_size: string,\n    packets: string,\n}\n\nexport interface QUIC_SESSION_TRANSPORT_PARAMETERS {\n    quic_transport_parameters: string\n}\n\nexport interface QUIC_SESSION_PADDING_FRAME {\n    num_padding_bytes: number\n}\n\nexport interface QUIC_SESSION_CRYPTO_FRAME {\n    bytes?: string,\n    data_length: number,\n    encryption_level: string,\n    offset: number\n}\n\nexport interface QUIC_SESSION_ACK_FRAME {\n    delta_time_largest_observed_us: number,\n    largest_observed: number,\n    smallest_observed: number, // see also: https://bugs.chromium.org/p/chromium/issues/detail?id=1112925\n    missing_packets: Array<number>,\n    received_packet_times: Array<any>\n}\n\nexport interface QUIC_SESSION_RST_STREAM_FRAME {\n    offset: number,\n    quic_rst_stream_error: number,\n    stream_id: number\n}\n\nexport interface QUIC_SESSION_STOP_SENDING_FRAME {\n    application_error_code: number,\n    stream_id: number\n}\n\nexport interface QUIC_SESSION_STREAM_FRAME {\n    fin: boolean,\n    length: number,\n    offset: number,\n    stream_id: number\n}\n\nexport interface QUIC_SESSION_WINDOW_UPDATE_FRAME {\n    byte_offset: number,\n    stream_id: number\n}\n\nexport interface QUIC_SESSION_CRYPTO_HANDSHAKE_MESSAGE {\n    quic_crypto_handshake_message: string,\n}\n\nexport interface QUIC_SESSION_CONNECTION_CLOSE_FRAME_SENT {\n    details: string,\n    quic_error: number\n}\n\nexport interface QUIC_SESSION_PACKET_RECEIVED {\n    peer_address: string,\n    self_address: string,\n    size: number\n}\n\nexport interface QUIC_SESSION_PACKET_LOST {\n    detection_time_us: number,\n    packet_number: number,\n    transmission_type: string,\n}\n\nexport enum LONG_HEADER_TYPE {\n    initial = \"INITIAL\",\n    handshake = \"HANDSHAKE\",\n    zerortt = \"ZERO_RTT_PROTECTED\",\n    version_negotiation = \"VERSION_NEGOTIATION\",\n    retry = \"RETRY\",\n    invalid = \"INVALID_PACKET_TYPE\",\n}\n\nexport interface QUIC_SESSION_UNAUTHENTICATED_PACKET_HEADER_RECEIVED {\n    connection_id: string,\n    header_format: string,\n    long_header_type?: LONG_HEADER_TYPE,\n    packet_number: number\n}\n\nexport interface QUIC_SESSION_DROPPED_UNDECRYPTABLE_PACKET {\n    encryption_level: string\n}\n\nexport interface QUIC_SESSION_CLOSED {\n    details: string,\n    from_peer: boolean,\n    quic_error: number\n}\n\nexport interface HTTP3_STREAM_CREATED {\n    stream_id: number,\n}\n\nexport interface HTTP3_MAX_PUSH_ID {\n    push_id: number,\n}\n\nexport interface HTTP3_PRIORITY_UPDATE {\n    prioritized_element_id: number,\n    priority_field_value: string,\n    type: string\n}\n\nexport interface HTTP3_DATA_FRAME {\n    payload_length: number,\n    stream_id: number\n}\n\nexport interface HTTP3_UNKNOWN_FRAME {\n    frame_type: number,\n    payload_length: number,\n    stream_id: number\n}\n\nexport interface HTTP3_HEADERS {\n    headers: Map<string, string>,\n    stream_id: number,\n}\n\nexport interface HTTP3_SETTINGS {\n    SETTINGS_MAX_HEADER_LIST_SIZE: number,\n    SETTINGS_QPACK_BLOCKED_STREAMS: number,\n    SETTINGS_QPACK_MAX_TABLE_CAPACITY: number,\n}\n","\nimport StreamingJSONParser from '../utils/StreamingJSONParser';\nimport TCPToQLOG from \"../pcapconverter/tcptoqlog\";\nimport NetlogToQLOG from \"../netlogconverter/netlogtoqlog\";\nimport NewlineJSONToQlog from '../newlineconverter/newlinejsontoqlog';\n\nexport interface FileResult {\n    qlogJSON: any | undefined,\n    error: any | string | undefined\n}\n\nexport enum FileType {\n    qlog_normal, // a normal JSON-formatted qlog file\n    qlog_newline, // a newline-delimited JSON file (streaming qlog)\n\n    netlog, // internal JSON-based Chromium logging format\n    pcap_json,   // JSON obtained from processing a .pcap with tshark\n\n    // we support other file types as well in qvis, like pcap_binary and pcap_secrets, but those need to be pre-processed by the qvisserver backend first\n    // as such, we treat them as \"Unsupported\" here\n    // similarly, in turn we want to support brotli and zip encoded files later on, but not yet\n    // for those, we'd add types here and add another decoding step in :Load below\n\n    unclear, // it's a supported JSON file, but we're not sure what type yet\n    unsupported,\n}\n\nexport default class FileLoader {\n\n    public static async Load( rawContents:File|string, name:string ): Promise<FileResult> {\n        const loader = new FileLoader();\n\n        const output:FileResult = {\n            qlogJSON: undefined,\n            error: undefined,\n        };\n\n        // 2 main stages:\n        // - 1. determine the file type\n        //      1.1 either based on file extension\n        //      1.2 or on the first part of the file\n        // - 2. parse the file and transform to valid qlog JSON\n\n        // 1.\n        // Loading a file means we need to figure out what type of file it is first\n        // For some, this is easily done just by looking at the extension.\n        // For others, one extension can map to a variety of different interpretations of the contents (especially true for .json)\n        // for example, since qlog uses JSON formatting, we ideally should accept .json files as valid qlog as well. \n\n        // This would be easy if we would just treat all files as strings directly (e.g., load from URL)\n        // However, for efficiency, we sometimes want to work on the raw File stream instead (e.g., local upload)\n        // So, if we are uploading locally, we need to extract the first x-bytes first, then determine how to load the file, then determine how to process it\n\n        // 1.1 so first, try to figure it out purely on extension\n        let type:FileType = loader.GuesstimateFileTypeFromExtension( name );\n\n        // file type is unsupported\n        if ( type === FileType.unsupported ) {\n            throw Error(\"File extension unsupported: \" + name );\n        }\n\n        // 1.2 type is (probably) supported, but unclear at this time. We need to derive it from the first few bytes of the file.\n        else if ( type === FileType.unclear ) {\n\n            let firstFewCharacters = \"\";\n\n            // if it's a file stream, read just the first few bytes\n            if ( rawContents instanceof File ) {\n                firstFewCharacters = await loader.LoadFirstFewCharacters ( rawContents );\n            }\n            // it's a string already, just get the first few characters directly\n            else { \n                firstFewCharacters = rawContents.substring(0, 1024);\n            }\n\n            type = loader.GuesstimateFileTypeFromHeader(firstFewCharacters);\n\n            // e.g., it's a JSON file, but doesn't seem to contain valid netlog/qlog/pcap data\n            if ( type === FileType.unsupported ) {\n                throw Error(\"File format unsupported (for qlogs, make sure qlog_version and qlog_format are at the top of the file): \" + name + \" : \" + firstFewCharacters);\n            }\n        }\n\n        console.log(\"FileLoader:Load : we guess filetype for \", name, \"is\", FileType[type] );\n\n        // 2. at this point, we know the FileType, now we need to process the file's contents\n\n\n        let contents:string|ReadableStream<any> = \"\";\n\n        if ( rawContents instanceof File ) {\n            \n            if ( type === FileType.qlog_newline ) {\n                // for newline delimited qlogs, we have a special streaming parser that can read from a File directly, so prefer that\n                contents = new Response(rawContents).body!;\n            }\n            else {\n                contents = await loader.LoadFileAsText( rawContents );\n            }\n        }\n        // it's a string already\n        else {\n            if ( type === FileType.qlog_newline ) {\n                // we only have a streaming parser for this, so even if we have a string, we need to transform it to a stream\n                const blob = new Blob([rawContents]);\n                contents = new Response(blob).body!;\n            }\n            else {\n                contents = rawContents;\n            }\n        }\n\n        let contentsJSON:any = undefined;\n\n        if ( type === FileType.qlog_normal ) {\n            contentsJSON = StreamingJSONParser.parseQlogText( contents as string );\n        }\n        else if ( type === FileType.pcap_json ) {\n            const rawJSON = StreamingJSONParser.parseJSONWithDeduplication( contents as string );\n\n            contentsJSON = TCPToQLOG.convert( rawJSON );\n        } \n        else if ( type === FileType.netlog ) {\n            const rawJSON = JSON.parse( contents as string );\n            \n            contentsJSON = NetlogToQLOG.convert( rawJSON );\n        }\n        else if ( type === FileType.qlog_newline ) {\n            if ( !(contents instanceof ReadableStream) ) {\n                console.error(\"FileLoader:Load : problem loading newline-delimited JSON file: contents wasn't a ReadableStream!\", contents);\n\n                throw Error(\"Could not load NDJSON file from stream : \" + name );\n            }\n\n            contentsJSON = await NewlineJSONToQlog.convert( contents );\n        }\n\n        output.qlogJSON = contentsJSON;\n\n        return output;\n    }\n\n    protected GuesstimateFileTypeFromExtension( filename:string ) : FileType {\n\n        // note: the .br, .brotli, .gz, .gzip and .zip files are expected to be unzipped/decompressed already at this time\n        // however, since they still contain these additions in the extensions, we need to deal with them here\n        // we -could- use indexOf instead of .endsWith, but what then with weird people doing things like .qlog.json or .netlog.json etc. \n        // better to be explicit here\n\n        // this works as an allowlist. Everything not listed here is Unsupported by default\n        const typeMap:Map<string, FileType> = new Map<string, FileType>([\n            // we don't really want to promote the use of these two extensions, so also don't support their compressed versions directly at this time\n            [\".qlognd\",         FileType.qlog_newline],\n            [\".pcap.json\",      FileType.pcap_json], // make sure this is before .json to enforce largest-suffix-first logic\n\n            [\".netlog\",         FileType.netlog],\n            [\".netlog.br\",      FileType.netlog],\n            [\".netlog.brotli\",  FileType.netlog],\n            [\".netlog.gz\",      FileType.netlog],\n            [\".netlog.gzip\",    FileType.netlog],\n            [\".netlog.zip\",     FileType.netlog],\n\n            // qlog and especially JSON are ambiguous and require additional logic to interpret\n            [\".qlog\",           FileType.unclear],\n            [\".qlog.br\",        FileType.unclear],\n            [\".qlog.brotli\",    FileType.unclear],\n            [\".qlog.gz\",        FileType.unclear],\n            [\".qlog.gzip\",      FileType.unclear],\n            [\".qlog.zip\",       FileType.unclear],\n\n            [\".json\",           FileType.unclear],\n            [\".json.br\",        FileType.unclear],\n            [\".json.brotli\",    FileType.unclear],\n            [\".json.gz\",        FileType.unclear],\n            [\".json.gzip\",      FileType.unclear],\n            [\".json.zip\",       FileType.unclear],\n        ]);\n\n        // javascript does not have a Path module (because, y'know, why would it)\n        // so have to loop over all and figure out if the extension is in the filename manually\n\n        for ( const extension of typeMap.keys() ) {\n            if ( filename.endsWith(extension) ) {\n                return typeMap.get(extension)!;\n            }\n        }\n        \n        return FileType.unsupported;\n    }\n\n    protected GuesstimateFileTypeFromHeader( firstFewCharacters:string ) : FileType {\n        // depending on the file type, we expect to find different things in the file \"header\"\n\n        // .qlog file \n        if ( firstFewCharacters.indexOf(\"qlog_version\") >= 0 ) {\n            // two main options:\n            // either it's a normal JSON file, or a newline-delimited JSON file\n            if ( firstFewCharacters.indexOf(\"qlog_format\") >= 0 ) {\n                if ( firstFewCharacters.indexOf(\"NDJSON\") >= 0 ) {\n                    return FileType.qlog_newline;\n                }\n                else if ( firstFewCharacters.indexOf(\"JSON\") >= 0 ) {\n                    return FileType.qlog_normal;\n                }\n            }\n            else {\n                return FileType.qlog_normal; // default for \"qlog_format\" is \"JSON\"\n            }\n        }\n        // .netlog file\n        else if ( firstFewCharacters.indexOf(\"activeFieldTrialGroups\") >= 0 ){\n            return FileType.netlog;\n        }\n        // packet capture file from tshark\n        else if ( firstFewCharacters.indexOf(\"_source\") >= 0 && firstFewCharacters.indexOf(\"layers\") >= 0 ) {\n            return FileType.pcap_json;\n        }\n        // old style qlog files sometimes do not have qlog_version on top, be backwards compatible\n        else if ( firstFewCharacters.indexOf(\"traces\") >= 0         || firstFewCharacters.indexOf(\"event_fields\") >= 0 || \n                  firstFewCharacters.indexOf(\"vantage_point\") >= 0  || firstFewCharacters.indexOf(\"common_fields\") >= 0 ) {\n            return FileType.qlog_normal;\n        }\n\n        return FileType.unsupported;\n    }\n\n    // wrapper function mainly to provide a Promisified-interface\n    protected LoadFirstFewCharacters( file:File ) : Promise<string> {\n        \n        let resolver:any = undefined;\n        let rejecter:any = undefined;\n\n        const output = new Promise<string>( (resolve, reject) => {\n            resolver = resolve;\n            rejecter = reject;\n        });\n\n        const identifier = new FileReader();\n\n        const firstFewBytes = file.slice(0, 1024); // first 1000 bytes should contain qlog_version\n\n        identifier.onload = (evt) => { \n            const firstFewCharacters = (evt!.target as any).result;\n\n            resolver( firstFewCharacters );\n        };\n\n        identifier.onabort = (evt) => { \n            rejecter(\"File loading aborted: \" + file.name + \" : \" + JSON.stringify(evt) );\n        }\n\n        identifier.onerror = (evt) => { \n            rejecter(\"File loading error: \" + file.name + \" : \" + JSON.stringify(evt) );\n        }\n\n        identifier.readAsText(firstFewBytes);\n\n        return output;\n    }\n\n    // wrapper function mainly to provide a Promisified-interface\n    protected LoadFileAsText( file:File ) : Promise<string> {\n        \n        let resolver:any = undefined;\n        let rejecter:any = undefined;\n\n        const output = new Promise<string>( (resolve, reject) => {\n            resolver = resolve;\n            rejecter = reject;\n        });\n        \n        const reader = new FileReader();\n\n        reader.onload = (evt) => {\n            resolver( (evt!.target as any).result );\n        };\n\n        reader.onabort = (evt) => { \n            rejecter(\"File loading aborted: \" + file.name + \" : \" + JSON.stringify(evt) );\n        };\n\n        reader.onerror = (evt) => { \n            rejecter(\"File loading error: \" + file.name + \" : \" + JSON.stringify(evt) );\n        };\n\n        reader.readAsText(file);\n\n        return output;\n    }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./VUEDebug.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./VUEDebug.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./VUEDebug.vue?vue&type=template&id=7e185ae1&\"\nimport script from \"./VUEDebug.vue?vue&type=script&lang=ts&\"\nexport * from \"./VUEDebug.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('FileManagerContainer')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"home\"},[_c('h1',[_vm._v(\"Welcome to qvis v0.1, the QUIC and HTTP/3 visualization toolsuite!\")]),_c('p',[_vm._v(\"To be able to visualize something, you need to load some data. We have several options for that:\")]),_c('b-container',{staticClass:\"table-striped\",attrs:{\"id\":\"FileManagerContainer\",\"fluid\":\"\"}},[_c('b-row',{staticClass:\"fileOptionContainer\"},[_c('b-col',{attrs:{\"cols\":\"1\",\"md\":\"auto\"}},[_c('h3',[_vm._v(\"Option 1\")])]),_c('b-col',[_c('h3',[_vm._v(\"Load a file by URL\")]),_c('div',{staticStyle:{\"margin\":\"10px 0px\"}},[_c('form',[_c('b-row',[_c('b-col',[_c('b-form-input',{attrs:{\"id\":\"urlInput\",\"type\":\"text\",\"placeholder\":\"https://www.example.com/output.qlog\"},model:{value:(_vm.urlToLoad),callback:function ($$v) {_vm.urlToLoad=$$v},expression:\"urlToLoad\"}}),(_vm.urlIsPcap)?_c('p',{staticStyle:{\"margin-top\":\"10px\"}},[_vm._v(\"For .pcap files, you also need to specify a .keys file so it can be decrypted.\")]):_vm._e(),(_vm.urlIsPcap)?_c('b-form-input',{attrs:{\"id\":\"secretsInput\",\"type\":\"text\",\"placeholder\":\"https://www.example.com/secrets.keys\"},model:{value:(_vm.secretsToLoad),callback:function ($$v) {_vm.secretsToLoad=$$v},expression:\"secretsToLoad\"}}):_vm._e()],1),_c('b-col',{attrs:{\"cols\":\"1\",\"md\":\"auto\"}},[_c('b-button',{attrs:{\"disabled\":this.urlToLoad === '',\"variant\":\"primary\"},on:{\"click\":function($event){return _vm.loadURL()}}},[_vm._v(\"Fetch\")])],1)],1)],1)]),_c('div',[_c('p',{staticStyle:{\"margin-top\":\"5px\"}},[_vm._v(\"\\n                    You can load .qlog, .pcap (alongside separate .keys) and .pcapng (with embedded keys) files.\"),_c('br'),_vm._v(\"\\n                    You can also load a .json file that lists several other files to be fetched (for the format, see \"),_c('a',{attrs:{\"href\":\"https://github.com/quiclog/pcap2qlog#options\"}},[_vm._v(\"the pcap2qlog documentation\")]),_vm._v(\". Or try \"),_c('a',{attrs:{\"href\":\"https://quic-tracker.info.ucl.ac.be/traces/20190820/list/quant.eggert.org:4433?.json\"}},[_vm._v(\"an example\")]),_vm._v(\").\"),_c('br'),_c('br'),_vm._v(\"\\n                    If you're looking for inspiration, \"),_c('a',{attrs:{\"href\":\"https://quant.eggert.org/\",\"target\":\"_blank\"}},[_vm._v(\"quant\")]),_vm._v(\" has public qlogs, as does \"),_c('a',{attrs:{\"href\":\"https://quic.aiortc.org/logs\",\"target\":\"_blank\"}},[_vm._v(\"aioquic\")]),_vm._v(\".\"),_c('br'),_c('a',{attrs:{\"href\":\"https://quic-tracker.info.ucl.ac.be\"}},[_vm._v(\"QUIC Tracker\")]),_vm._v(\" provides .pcap files for all its tests and has a convenient integration with qvis from its UI. \"),_c('br'),_vm._v(\"\\n                    Many of the tests in the \"),_c('a',{attrs:{\"href\":\"https://interop.seemann.io/\"}},[_vm._v(\"QUIC Interop Runner\")]),_vm._v(\" also include .qlog and .pcap output.\\n                \")])])])],1),_c('b-row',{staticClass:\"fileOptionContainer\"},[_c('b-col',{attrs:{\"cols\":\"1\",\"md\":\"auto\"}},[_c('h3',[_vm._v(\"Option 2\")])]),_c('b-col',[_c('h3',[_vm._v(\"Upload a file\")]),_c('div',{staticStyle:{\"margin\":\"10px 0px\"}},[_c('form',[_c('b-row',[_c('b-col',[_c('b-form-file',{staticClass:\"text-nowrap text-truncate\",attrs:{\"id\":\"fileUpload\",\"multiple\":\"\",\"state\":Boolean(_vm.filesToUpload.length > 0),\"placeholder\":\"Choose files or drop them here...\",\"drop-placeholder\":\"Drop files here...\",\"accept\":\".qlog,.json,.netlog\"},model:{value:(_vm.filesToUpload),callback:function ($$v) {_vm.filesToUpload=$$v},expression:\"filesToUpload\"}}),(_vm.uploadIsPcap)?_c('p',{staticStyle:{\"margin-top\":\"10px\"}},[_vm._v(\"For .pcap files, you also need to upload a .keys file so it can be decrypted. We currently do not yet support decrypted pcaps or pcapng files with embedded keys.\")]):_vm._e(),(_vm.uploadIsPcap)?_c('b-form-file',{attrs:{\"id\":\"secretsUpload\",\"state\":Boolean(_vm.secretsToUpload),\"placeholder\":\"Choose a .keys file or drop it here...\",\"drop-placeholder\":\"Drop .keys file here...\",\"accept\":\".keys\"},model:{value:(_vm.secretsToUpload),callback:function ($$v) {_vm.secretsToUpload=$$v},expression:\"secretsToUpload\"}}):_vm._e()],1),_c('b-col',{attrs:{\"cols\":\"1\",\"md\":\"auto\"}},[_c('b-button',{attrs:{\"disabled\":_vm.filesToUpload.length === 0,\"variant\":\"primary\"},on:{\"click\":function($event){return _vm.uploadFile()}}},[_vm._v(\"Import\")])],1)],1)],1)]),_c('div',[_c('p',[_vm._v(\"\\n                    Upload currently supports .qlog, .json, and \"),_c('a',{attrs:{\"href\":\"https://www.chromium.org/for-testers/providing-network-details\"}},[_vm._v(\".netlog\")]),_vm._v(\" files. No data is transfered to the server.\"),_c('br'),_vm._v(\"\\n                    Eventually we will also support .pcap, .pcapng and .qtr files.\"),_c('br'),_c('span',{staticStyle:{\"font-size\":\"12px\"}},[_vm._v(\"\\n                        Note: Chrome netlog must be explicitly given the .netlog extension before uploading to qvis.\\n                    \")])])])])],1),_c('b-row',{staticClass:\"fileOptionContainer\"},[_c('b-col',{attrs:{\"cols\":\"1\",\"md\":\"auto\"}},[_c('h3',[_vm._v(\"Option 3\")])]),_c('b-col',[_c('h3',[_vm._v(\"Load some premade demo files\")]),_c('div',{staticStyle:{\"margin\":\"10px 0px\"}},[_c('form',[_c('b-button',{attrs:{\"variant\":\"primary\"},on:{\"click\":function($event){return _vm.loadExamples()}}},[_vm._v(\"Load example .qlog files\")])],1)]),_c('div',[_c('p',[_vm._v(\"\\n                    This will load a few example files that you can visualize to get an idea of what's possible.\"),_c('br')])])])],1),_c('b-row',{staticClass:\"fileOptionContainer\"},[_c('b-col',{attrs:{\"cols\":\"1\",\"md\":\"auto\"}},[_c('h3',[_vm._v(\"Option 4\")])]),_c('b-col',[_c('h3',[_vm._v(\"Load a massive demo file\")]),_c('div',{staticStyle:{\"margin\":\"10px 0px\"}},[_c('form',[_c('b-button',{attrs:{\"variant\":\"primary\"},on:{\"click\":function($event){return _vm.loadMassiveExample()}}},[_vm._v(\"Load 31MB .qlog file\")])],1)]),_c('div',[_c('p',[_vm._v(\"\\n                    This will load a single qlog file representing a 100MB download. Use this to see how well qvis visualizations perform on larger traces.\"),_c('br')])])])],1),_c('b-row',{staticClass:\"fileOptionContainer\"},[_c('b-col',{attrs:{\"cols\":\"1\",\"md\":\"auto\"}},[_c('h3',[_vm._v(\"Option 5\")])]),_c('b-col',[_c('h3',[_vm._v(\"Load a file by URL parameter\")]),_c('div',{staticStyle:{\"margin\":\"10px 0px\"}},[_c('p',[_vm._v(\"\\n                    You can pass files you want to load via URL parameters to the qvis page.\"),_c('br'),_vm._v(\"\\n                    This method supports the same formats as Option 1.\"),_c('br'),_c('br'),_vm._v(\"\\n\\n                    Format 1: \"),_c('a',{attrs:{\"href\":\"https://qvis.edm.uhasselt.be/#?list=x.json\"}},[_vm._v(\"?list=x.json\")]),_c('br'),_vm._v(\"\\n                    Format 2: \"),_c('a',{attrs:{\"href\":\"https://qvis.edm.uhasselt.be/#?file=x.qlog\"}},[_vm._v(\"?file=x.qlog\")]),_c('br'),_vm._v(\"\\n                    Format 3: \"),_c('a',{attrs:{\"href\":\"https://qvis.edm.uhasselt.be/#?file=x.pcap&secrets=x.keys\"}},[_vm._v(\"?file=x.pcap&secrets=x.keys\")]),_c('br'),_vm._v(\"\\n                    Format 4: \"),_c('a',{attrs:{\"href\":\"https://qvis.edm.uhasselt.be/#?file1=x.qlog&file2=y.qlog&file3=z.qlog\"}},[_vm._v(\"?file1=x.qlog&file2=y.qlog&file3=z.qlog\")]),_c('br'),_vm._v(\"\\n                    Format 5: \"),_c('a',{attrs:{\"href\":\"https://qvis.edm.uhasselt.be/#?file1=x.qlog&secrets1=x.keys&file2=y.qlog&secrets2=y.keys\"}},[_vm._v(\"?file1=x.qlog&secrets1=x.keys&file2=y.qlog&secrets2=y.keys\")]),_c('br')])])])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import * as qlogschema from '@quictools/qlog-schema';\nimport * as netlogschema from './netlog';\n\n/* Netlog example:\n{\n    \"constants\": {\n        \"logEventTypes\": {\n            \"QUIC_SESSION\": 234,\n            \"QUIC_SESSION_ACK_FRAME_SENT\": 249,\n            ...\n        },\n        \"logSourceType\": {\n            \"QUIC_SESSION\": 11,\n            ...\n        },\n        ...\n    },\n    \"events\": [\n        {\n            \"params\": {\n                \"cert_verify_flags\": 0,\n                \"connection_id\": \"712d0120daf2c0be\",\n                \"host\": \"accounts.google.com\",\n                \"network_isolation_key\": \"null null\",\n                \"port\": 443,\n                \"privacy_mode\": \"disabled\",\n                \"require_confirmation\": false,\n                \"versions\": \"ff00001d\"\n            },\n            \"phase\": 1,\n            \"source\": {\n                \"id\": 16,\n                \"start_time\": \"300131887\",\n                \"type\": 11\n            },\n            \"time\": \"300131887\",\n            \"type\": 234\n        },\n        ...,\n        {\n            \"params\": {\n                \"delta_time_largest_observed_us\": 9688,\n                \"largest_observed\": 11,\n                \"smallest_observed\": 0,\n                \"missing_packets\": [\n                    1,\n                    3,\n                    6,\n                    9\n                ],\n                \"received_packet_times\": []\n            },\n            \"phase\": 0,\n            \"source\": {\n                \"id\": 28,\n                \"start_time\": \"300131911\",\n                \"type\": 11\n            },\n            \"time\": \"300132616\",\n            \"type\": 249\n        },\n        ...\n    ]\n}\n */\n\n/** invertMap is used to invert mappings of netlog constants because netlog stores\n *  constants as <string, number> while events use <number> to represent constants.\n *  See netlog example above.\n * @param map \n */\nfunction invertMap(map: Map<string, number>): Map<number, string> {\n    const result: Map<number, string> = new Map<number, string>();\n\n    Object.entries(map).forEach((entry) => {\n        const value: number = entry[1] as number;\n        result.set(value, entry[0]);\n    });\n\n    return result;\n};\n\n/** calculateAckRanges is used to generate ACK ranges given the largestObserved and smallestObserved\n * packet number and an array of missing packets. See netlog example above.\n * \n * @param largestObserved \n * @param smallestObserved \n * @param missing_packets \n */\nfunction calculateAckRanges(largestObserved: number, smallestObserved: number, missing_packets: Array<number>): Array<[number, number]> {\n    const result: Array<[number, number]> = new Array<[number, number]>();\n\n    if ( missing_packets.length === 0 ) {\n         // no missing packets, everything between smallest and largest is acked\n        return [ [ smallestObserved, largestObserved ] ];\n    }\n    else {\n        missing_packets.sort((a, b) => a - b ); // sort ascending in-place (this *should not* be needed, but hey, let's make sure, shall we)\n    \n        // You might wonder: what if missing_packets' first entry is PN 0? \n        // Say you have an ACK frame that wishes to ACK packets 5-10, because 0-4 were lost\n        // then smallestObserved would be 5, missing_packets would be empty and largestObserved would be 10, so we wouldn't even get in this situation\n        // if we have an ACK frame of 0, 5-10 (so 1-4 are in missing_packets)\n        // we'd get [0,0] here, which is what we want\n        result.push([smallestObserved, missing_packets[0] - 1]); \n\n        let missingIndex:number = 0;\n\n        // example: largestObserved is 20, missing_packets is [6,7,8,11], smallestObserved is 3 -> should result in [3,5], [9,10] and [12,20] as a acked ranges\n        while ( missingIndex < missing_packets.length - 1 ) {\n            // as long as missing packets are consecutive, we keep continuing\n            // the moment there is a gap in the missing packets ( index + 1's value is not index's value + 1 ), we know we have an ack range\n            // in the example, this happens as soon as missingIndex is 2 (value 8), because the value at missingIndex 3 is 11\n            if ( missing_packets[ missingIndex + 1 ] !== missing_packets[ missingIndex ] + 1 ) {\n                const from = missing_packets[ missingIndex     ] + 1; // example: 9\n                const to   = missing_packets[ missingIndex + 1 ] - 1; // example: 10\n                result.push( [from, to] );\n            }   \n\n            missingIndex += 1;\n        }\n        \n        result.push( [missing_packets[missingIndex] + 1, largestObserved] ); // missingIndex is now at the end of the array, so that value + 1 to the largestObserved gives 12,20\n    \n        return result;\n    }\n}\n\nclass QUICConnection {\n    public title: string;\n    public session: netlogschema.QUIC_SESSION;\n    public sessionId: number;\n    public startTime: number;\n    public qlogEvents: Array<Array<qlogschema.EventField>>;\n\n    public txQUICFrames: Array<qlogschema.QuicFrame>;\n    public rxQUICFrames: Array<qlogschema.QuicFrame>;\n    public rxPacket: qlogschema.IEventPacket | undefined;\n\n    constructor(\n        session: netlogschema.QUIC_SESSION,\n        sessionId: number,\n        startTime: number,\n    ) {\n        this.title = `${session.host}-${session.connection_id}`;\n        this.session = session;\n        this.sessionId = sessionId;\n        this.startTime = startTime;\n        this.qlogEvents = new Array<Array<qlogschema.EventField>>();\n\n        // txQUICFrames is used to buffer frames that correspond with a sent packet.\n        // This is done because netlog first logs FRAME_SENT before it logs\n        // PACKET_SENT, the latter of which contains the packet number. As a result,\n        // we must keep track of current frames sent until we encounter a PACKET_SENT event\n        // to accurately assign frames to a specific packet\n        this.txQUICFrames = new Array<qlogschema.QuicFrame>();\n\n        // rxQUICFrames is used to buffer frames that correspond with a received packet.\n        // This is done because netlog first logs PACKET_HEADER_RECEIVED before it logs\n        // FRAME_RECEIVED, the former of which contains the packet number. As a result,\n        // we must keep track of current frames received after we encounter a \n        // PACKET_HEADER_RECEIVED event to accurately assign frames to a specific packet.\n        this.rxQUICFrames = new Array<qlogschema.QuicFrame>();\n        // This is to keep track of the last received packet. We need to keep track\n        // because we can only log a received packet to QLOG until we encounter the\n        // next received packet due to frame buffering nature.\n        this.rxPacket = undefined;\n    }\n\n    public pushFrame(event_type: string, frame: qlogschema.QuicFrame) {\n        if (event_type.indexOf('SENT') >= 0) {\n            this.txQUICFrames.push(frame as qlogschema.QuicFrame);\n        } else {\n            this.rxQUICFrames.push(frame as qlogschema.QuicFrame);\n        }\n    }\n\n    public pushH3Frame(\n        event_type: string,\n        frame: qlogschema.HTTP3EventData,\n        qlogEvent: Array<qlogschema.EventField>,\n    ) {\n        qlogEvent.push(qlogschema.EventCategory.http);\n\n        if (event_type.indexOf('SENT') >= 0) {\n            qlogEvent.push(qlogschema.HTTP3EventType.frame_created);\n        } else {\n            qlogEvent.push(qlogschema.HTTP3EventType.frame_parsed);\n        }\n\n        qlogEvent.push(frame);\n        this.qlogEvents.push(qlogEvent);\n    }\n}\n\n// tslint:disable max-classes-per-file\nexport default class NetlogToQlog {\n\n    public static convert(netlogJSON: netlogschema.Netlog): qlogschema.IQLog {\n        console.log(\"NetlogToQlog: converting file with \" + netlogJSON.events.length + \" events\");\n\n        // unit tests would be nice for this type of thing...\n        // console.error(\"Calculate ack ranges\", calculateAckRanges( 2115, 2050, [2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072,2073,2074,2075,2076,2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,2090,2091,2092,2093,2094,2095,2096,2097,2098,2099,2100,2101,2102,2103,2104,2105,2106,2107,2108,2109,2110,2111,2112,2113,2114] )); // should be [2050,2055],[2155,2155]\n        // console.error(\"Calculate ack ranges 2\", calculateAckRanges(20, 3, [6,7,8,11]) ); // should be [3,5],[9-10],[12-20]\n        // console.error(\"Calculate ack ranges 3\", calculateAckRanges(20, 11, [12]) ); // should be [11,11],[13-20]\n        // console.error(\"Calculate ack ranges 4\", calculateAckRanges(20, 20, []) ); // should be [20,20]\n        // console.error(\"Calculate ack ranges 5\", calculateAckRanges(20, 3, [5,7]) ); // should be [3,4],[6,6],[8,20]\n\n        const constants: netlogschema.Constants = netlogJSON.constants;\n        const events: Array<netlogschema.Event> = netlogJSON.events;\n\n        // TODO: Use this timeTickOffset for accurate absolute start time\n        const timeTickOffset: number = constants.timeTickOffset;\n\n        const event_types: Map<number, string> = invertMap(constants.logEventTypes);\n        const source_types: Map<number, string> = invertMap(constants.logSourceType);\n        const phases: Map<number, string> = invertMap(constants.logEventPhase);\n\n\n        const connectionMap: Map<number, QUICConnection> = new Map<number, QUICConnection>();\n\n        for (const event of events) {\n            // source of event\n            const source_type: string | undefined = source_types.get(event.source.type);\n            if (source_type === undefined) {\n                console.error(\"netlog2qlog:convert : unknown source type!\", event, source_type);\n                continue;\n            }\n\n            // Right now only support events part of a QUIC session\n            if (source_type !== 'QUIC_SESSION') {\n                // console.error(\"netlog2qlog:convert : unsupported source type!\", event, source_type);\n                continue;\n            }\n\n            // source id of event\n            const source_id: number = event.source.id;\n\n            // event_type of event\n            const event_type: string | undefined = event_types.get(event.type);\n            if (event_type === undefined) {\n                console.error(\"netlog2qlog:convert : unknown event type!\", event, event_type);\n                continue;\n            }\n\n            // phase of event\n            const phase: string | undefined = phases.get(event.phase);\n            if (phase === undefined) {\n                console.error(\"netlog2qlog:convert : unknown event phase!\", event, phase);\n                continue;\n            }\n\n            // event params\n            const params: any = event.params;\n\n            let connection: QUICConnection | undefined = undefined;\n\n            // Connection already exists\n            if (connectionMap.has(source_id)) {\n                connection = connectionMap.get(source_id);\n            }\n            // Connection doesn't exist \n            else {\n                \n                if ( event_type !== \"QUIC_SESSION\" ) {\n                    console.warn(\"netlogtoqlog:convert : new connection found, but first event was not QUIC_SESSION! Not sure this will work...\", event, event_type, source_type, connectionMap);\n                }\n                if ( phase !== \"PHASE_BEGIN\" ) {\n                    console.warn(\"netlogtoqlog:convert : connection starting in phase other than PHASE_BEGIN! Not sure this will work...\", event, event_type, phase);\n                }\n\n                // Create new connection\n                const session: netlogschema.QUIC_SESSION = params;\n                connection = new QUICConnection(session, source_id, +event.time)\n                connectionMap.set(source_id, connection);\n            }\n\n            if (connection === undefined) {\n                console.error(\"netlog2qlog:convert : could not match event to connection\", event, event_type, source_id);\n                continue;\n            }\n\n            // event time in ms\n            const time: number = +event.time - connection.startTime;\n\n            // Create a new qlog event with relative time\n            const qlogEvent: Array<qlogschema.EventField> = new Array<qlogschema.EventField>();\n            qlogEvent.push(time);\n\n            switch (event_type) {\n                case 'QUIC_SESSION': {\n                    const event_params: netlogschema.QUIC_SESSION = params;\n                    // const data: qlogschema.IEventConnectionStarted = {\n                    //     ip_version: string;\n                    //     src_ip: string;\n                    //     dst_ip: string;\n                    //     protocol?: string;\n                    //     src_port: number;\n                    //     dst_port: number;\n                    //     quic_version?: string;\n                    //     src_cid?: string;\n                    //     dst_cid?: string;\n                    // };\n                    continue;\n                }\n\n                case 'QUIC_SESSION_TRANSPORT_PARAMETERS_SENT': {\n                    const event_params: Array<string> = (params as netlogschema.QUIC_SESSION_TRANSPORT_PARAMETERS)\n                        .quic_transport_parameters\n                        .split(\" \")\n                        .slice(1);\n                    const data: any = { owner: 'local' };\n                    for (let i = 0; i < event_params.length; i += 2) {\n                        const key: string = event_params[i];\n                        const value: string = event_params[i + 1];\n                        data[key] = value;\n                    }\n\n                    qlogEvent.push(qlogschema.EventCategory.transport);\n                    qlogEvent.push(qlogschema.TransportEventType.parameters_set);\n                    qlogEvent.push(data as qlogschema.IEventTransportParametersSet);\n                    connection.qlogEvents.push(qlogEvent);\n                    break;\n                }\n\n                case 'QUIC_SESSION_CRYPTO_FRAME_SENT':\n                case 'QUIC_SESSION_CRYPTO_FRAME_RECEIVED': {\n                    const event_params: netlogschema.QUIC_SESSION_CRYPTO_FRAME = params;\n                    const frame: qlogschema.ICryptoFrame = {\n                        frame_type: qlogschema.QUICFrameTypeName.crypto,\n                        offset: event_params.offset.toString(),\n                        length: event_params.data_length.toString(),\n                    }\n                    connection.pushFrame(event_type, frame);\n                    break;\n                }\n\n                case 'QUIC_SESSION_PADDING_FRAME_SENT':\n                case 'QUIC_SESSION_PADDING_FRAME_RECEIVED': {\n                    const event_params: netlogschema.QUIC_SESSION_PADDING_FRAME = params;\n                    const frame: qlogschema.IPaddingFrame = {\n                        frame_type: qlogschema.QUICFrameTypeName.padding,\n                    }\n                    connection.pushFrame(event_type, frame);\n                    break;\n                }\n\n                case 'QUIC_SESSION_PING_FRAME_SENT':\n                case 'QUIC_SESSION_PING_FRAME_RECEIVED': {\n                    const frame: qlogschema.IPingFrame = {\n                        frame_type: qlogschema.QUICFrameTypeName.ping,\n                    }\n                    connection.pushFrame(event_type, frame);\n                    break;\n                }\n\n                case 'QUIC_SESSION_STREAM_FRAME_SENT':\n                case 'QUIC_SESSION_STREAM_FRAME_RECEIVED': {\n                    const event_params: netlogschema.QUIC_SESSION_STREAM_FRAME = params;\n                    const frame: qlogschema.IStreamFrame = {\n                        frame_type: qlogschema.QUICFrameTypeName.stream,\n                        stream_id: event_params.stream_id.toString(),\n                        offset: event_params.offset.toString(),\n                        length: event_params.length.toString(),\n                        fin: event_params.fin,\n                    }\n                    connection.pushFrame(event_type, frame);\n                    break;\n                }\n\n                case 'QUIC_SESSION_ACK_FRAME_SENT':\n                case 'QUIC_SESSION_ACK_FRAME_RECEIVED': {\n                    const event_params: netlogschema.QUIC_SESSION_ACK_FRAME = params;\n                    const acked_ranges: Array<[number, number]> = calculateAckRanges(\n                        event_params.largest_observed,\n                        event_params.smallest_observed,\n                        event_params.missing_packets,\n                    );\n                    // TODO: Use delta_time_largest_observed_us to calculate ack delay \n                    const frame: qlogschema.IAckFrame = {\n                        frame_type: qlogschema.QUICFrameTypeName.ack,\n                        acked_ranges: acked_ranges.map(([ack1, ack2]) => {\n                            return [ack1.toString(), ack2.toString()];\n                        }),\n                    }\n                    connection.pushFrame(event_type, frame);\n                    break;\n                }\n\n                case 'QUIC_SESSION_WINDOW_UPDATE_FRAME_SENT':\n                case 'QUIC_SESSION_WINDOW_UPDATE_FRAME_RECEIVED': {\n                    const event_params: netlogschema.QUIC_SESSION_WINDOW_UPDATE_FRAME = params;\n                    if (event_params.stream_id === -1) {\n                        const frame: qlogschema.IMaxDataFrame = {\n                            frame_type: qlogschema.QUICFrameTypeName.max_data,\n                            maximum: event_params.byte_offset.toString(),\n                        };\n                        connection.pushFrame(event_type, frame);\n                    } else {\n                        const frame: qlogschema.IMaxStreamDataFrame = {\n                            frame_type: qlogschema.QUICFrameTypeName.max_stream_data,\n                            stream_id: event_params.stream_id.toString(),\n                            maximum: event_params.byte_offset.toString(),\n                        };\n                        connection.pushFrame(event_type, frame);\n                    }\n                    break;\n                }\n\n                case 'QUIC_SESSION_RST_STREAM_FRAME_SENT':\n                case 'QUIC_SESSION_RST_STREAM_FRAME_RECEIVED': {\n                    const event_params: netlogschema.QUIC_SESSION_RST_STREAM_FRAME = params;\n                    const frame: qlogschema.IResetStreamFrame = {\n                        frame_type: qlogschema.QUICFrameTypeName.reset_stream,\n                        stream_id: event_params.stream_id.toString(),\n                        error_code: event_params.quic_rst_stream_error,\n                        final_size: event_params.offset.toString(),\n                    };\n                    connection.pushFrame(event_type, frame);\n                    break;\n                }\n\n                case 'QUIC_SESSION_STOP_SENDING_FRAME_SENT':\n                case 'QUIC_SESSION_STOP_SENDING_FRAME_RECEIVED': {\n                    const event_params: netlogschema.QUIC_SESSION_STOP_SENDING_FRAME = params;\n                    const frame: qlogschema.IStopSendingFrame = {\n                        frame_type: qlogschema.QUICFrameTypeName.stop_sending,\n                        stream_id: event_params.stream_id.toString(),\n                        error_code: event_params.application_error_code,\n                    };\n                    connection.pushFrame(event_type, frame);\n                    break;\n                }\n\n                case 'QUIC_SESSION_CRYPTO_HANDSHAKE_MESSAGE_SENT':\n                case 'QUIC_SESSION_CRYPTO_HANDSHAKE_MESSAGE_RECEIVED': {\n                    const event_params: netlogschema.QUIC_SESSION_CRYPTO_HANDSHAKE_MESSAGE = params;\n                    // Don't know what qlogschema frame to use here\n                    break;\n                }\n\n                case 'QUIC_SESSION_CONNECTION_CLOSE_FRAME_SENT': {\n                    const event_params: netlogschema.QUIC_SESSION_CONNECTION_CLOSE_FRAME_SENT = params;\n                    const frame: qlogschema.IConnectionCloseFrame = {\n                        frame_type: qlogschema.QUICFrameTypeName.connection_close,\n                        error_space: qlogschema.ErrorSpace.transport_error,\n                        error_code: event_params.quic_error,\n                        raw_error_code: event_params.quic_error,\n                        reason: event_params.details,\n                    };\n                    connection.txQUICFrames.push(frame);\n                    break;\n                }\n\n                case 'QUIC_SESSION_PACKET_SENT': {\n                    const event_params: netlogschema.QUIC_SESSION_PACKET_SENT = params;\n                    const packet_type: qlogschema.PacketType = ((): qlogschema.PacketType => {\n                        switch (event_params.encryption_level) {\n                            case netlogschema.PacketType.handshake:\n                                return qlogschema.PacketType.handshake;\n                            case netlogschema.PacketType.initial:\n                                return qlogschema.PacketType.initial;\n                            case netlogschema.PacketType.zerortt:\n                                return qlogschema.PacketType.zerortt;\n                            case netlogschema.PacketType.onertt:\n                                return qlogschema.PacketType.onertt;\n                            default:\n                                console.error(\"netlog2qlog:convert: unknown packet type sent\", event_params.encryption_level);\n\n                                return qlogschema.PacketType.unknown;\n                        }\n                    })();\n\n                    // Deep-copy txQUICFrames to put in qlogEvent.\n                    const frames: Array<qlogschema.QuicFrame> = new Array<qlogschema.QuicFrame>();\n                    connection.txQUICFrames.forEach((frame) => frames.push(Object.assign({}, frame)));\n\n                    qlogEvent.push(qlogschema.EventCategory.transport);\n                    qlogEvent.push(qlogschema.TransportEventType.packet_sent);\n                    qlogEvent.push({\n                        packet_type,\n                        header: {\n                            packet_number: event_params.packet_number.toString(),\n                            packet_size: event_params.size,\n                        },\n                        frames,\n                    } as qlogschema.IEventPacket);\n                    connection.qlogEvents.push(qlogEvent);\n\n                    // Reset txQUICFrames\n                    connection.txQUICFrames.length = 0;\n                    break;\n                }\n\n                case 'QUIC_SESSION_COALESCED_PACKET_SENT': {\n                    const event_params: netlogschema.QUIC_SESSION_COALESCED_PACKET_SENT = params;\n                    break;\n                }\n\n                case 'QUIC_SESSION_PACKET_RECEIVED': {\n                    const event_params: netlogschema.QUIC_SESSION_PACKET_RECEIVED = params;\n                    const packet: qlogschema.IEventPacket = {\n                        packet_type: qlogschema.PacketType.unknown, // placeholder\n                        header: {\n                            packet_number: '', // placeholder\n                            packet_size: event_params.size,\n                        },\n                        is_coalesced: false,\n                    }\n\n                    // Push placeholder qlogEvent into the trace\n                    qlogEvent.push(qlogschema.EventCategory.transport);\n                    qlogEvent.push(qlogschema.TransportEventType.packet_received);\n                    qlogEvent.push(packet);\n                    connection.qlogEvents.push(qlogEvent);\n\n                    // if rxPacket is not undefined, then we have frames buffered\n                    // to correlate with the last rxPacket. This is done because\n                    // netlog first logs HEADER_RECEIVED (which contains the packet \n                    // number) before logging any frames that correspond with the packet.\n                    // As a result, we must save rxPacket in memory and buffer frames we\n                    // encounter after the HEADER_RECEIVED event to correctly correlate\n                    // frames with packet.\n                    if (connection.rxPacket !== undefined) {\n                        // Deep-copy frames to put into qlogEvent\n                        const frames: Array<qlogschema.QuicFrame> = new Array<qlogschema.QuicFrame>();\n                        connection.rxQUICFrames.forEach((frame) => frames.push(Object.assign({}, frame)));\n\n                        connection.rxPacket.frames = frames;\n                    }\n\n                    // Set rxPacket to current packet and reset rxQUICFrames\n                    connection.rxPacket = packet;\n                    connection.rxQUICFrames.length = 0;\n\n                    break;\n                }\n\n                case 'QUIC_SESSION_UNAUTHENTICATED_PACKET_HEADER_RECEIVED': {\n                    const event_params: netlogschema.QUIC_SESSION_UNAUTHENTICATED_PACKET_HEADER_RECEIVED = params;\n                    const packet_type: qlogschema.PacketType = ((): qlogschema.PacketType => {\n                        switch (event_params.long_header_type) {\n                            case netlogschema.LONG_HEADER_TYPE.handshake:\n                                return qlogschema.PacketType.handshake;\n                            case netlogschema.LONG_HEADER_TYPE.initial:\n                                return qlogschema.PacketType.initial;\n                            case netlogschema.LONG_HEADER_TYPE.zerortt:\n                                return qlogschema.PacketType.zerortt;\n                            case netlogschema.LONG_HEADER_TYPE.retry:\n                                return qlogschema.PacketType.retry;\n                            case netlogschema.LONG_HEADER_TYPE.version_negotiation:\n                                return qlogschema.PacketType.version_negotiation;\n                            case netlogschema.LONG_HEADER_TYPE.invalid:\n                                return qlogschema.PacketType.unknown;\n                            default:\n                                return qlogschema.PacketType.onertt;\n                        }\n                    })();\n\n                    // In case we encounter packet_header_received before packet_received\n                    // Caveat: Will not have packet length\n                    if (connection.rxPacket === undefined) {\n                        connection.rxPacket = {\n                            packet_type,\n                            header: {\n                                packet_number: event_params.packet_number.toString(),\n                            },\n                            is_coalesced: false,\n                        };\n                    }\n\n                    connection.rxPacket.packet_type = packet_type;\n                    connection.rxPacket.header.packet_number = event_params.packet_number.toString();\n\n                    break;\n                }\n\n                case 'QUIC_SESSION_TRANSPORT_PARAMETERS_RECEIVED': {\n                    const event_params: Array<string> = (params as netlogschema.QUIC_SESSION_TRANSPORT_PARAMETERS).quic_transport_parameters.split(\" \").slice(1);\n                    const data: any = { owner: 'remote' };\n                    for (let i = 0; i < event_params.length; i += 2) {\n                        const key: string = event_params[i];\n                        const value: string = event_params[i + 1];\n                        data[key] = value;\n                    }\n\n                    qlogEvent.push(qlogschema.EventCategory.transport);\n                    qlogEvent.push(qlogschema.TransportEventType.parameters_set);\n                    qlogEvent.push(data as qlogschema.IEventTransportParametersSet);\n                    connection.qlogEvents.push(qlogEvent);\n                    break;\n                }\n\n                case 'QUIC_SESSION_HANDSHAKE_DONE_FRAME_RECEIVED': {\n                    // No params\n                    break;\n                }\n\n                case 'QUIC_SESSION_PACKET_LOST': {\n                    const event_params: netlogschema.QUIC_SESSION_PACKET_LOST = params;\n                    const packet_type: qlogschema.PacketType = (() => {\n                        switch (event_params.transmission_type) {\n                            default:\n                                return qlogschema.PacketType.unknown;\n                        }\n                    })();\n                    const packet: qlogschema.IEventPacketLost = {\n                        packet_type,\n                        packet_number: event_params.packet_number.toString(),\n                    }\n                    qlogEvent.push(qlogschema.EventCategory.recovery);\n                    qlogEvent.push(qlogschema.RecoveryEventType.packet_lost);\n                    qlogEvent.push(packet);\n                    connection.qlogEvents.push(qlogEvent);\n                    break;\n                }\n\n                case 'QUIC_SESSION_CLOSED': {\n                    const event_params: netlogschema.QUIC_SESSION_CLOSED = params;\n                    break;\n                }\n\n                case 'QUIC_SESSION_CLOSE_ON_ERROR': {\n                    break;\n                }\n\n                case 'QUIC_SESSION_BUFFERED_UNDECRYPTABLE_PACKET': {\n                    // const frame: qlogschema.IEventPacketBuffered = {\n                    //     packet_type: qlogschema.PacketType.onertt,\n                    // }\n                    // qlogEvent.push(qlogschema.EventCategory.transport);\n                    // qlogEvent.push(qlogschema.TransportEventType.packet_buffered);\n                    // qlogEvent.push(frame);\n                    // connection.qlogEvents.push(qlogEvent);\n                    break;\n                }\n\n                case 'QUIC_SESSION_DROPPED_UNDECRYPTABLE_PACKET': {\n                    const event_params: netlogschema.QUIC_SESSION_DROPPED_UNDECRYPTABLE_PACKET = params;\n                    const packet_type : qlogschema.PacketType = (() => {\n                        switch (event_params.encryption_level) {\n                            case \"ENCRYPTION_HANDSHAKE\":\n                                return qlogschema.PacketType.handshake;                        \n                            default:\n                                return qlogschema.PacketType.unknown;\n                        }\n                    })();\n                    const frame: qlogschema.IEventPacketDropped = {\n                        packet_type,\n                    }\n                    qlogEvent.push(qlogschema.EventCategory.transport);\n                    qlogEvent.push(qlogschema.TransportEventType.packet_dropped);\n                    qlogEvent.push(frame);\n                    connection.qlogEvents.push(qlogEvent);\n                    break;\n                }\n\n                case 'QUIC_CHROMIUM_CLIENT_STREAM_SEND_REQUEST_HEADERS':\n                case 'QUIC_CHROMIUM_CLIENT_STREAM_READ_RESPONSE_HEADERS': {\n                    break;\n                }\n\n                case 'QUIC_SESSION_ATTEMPTING_TO_PROCESS_UNDECRYPTABLE_PACKET': {\n                    break;\n                }\n\n                case 'QUIC_SESSION_PACKET_AUTHENTICATED': {\n                    break;\n                }\n\n                case 'QUIC_SESSION_VERSION_NEGOTIATED': {\n                    break;\n                }\n\n                case 'QUIC_SESSION_PACKET_AUTHENTICATED': {\n                    break;\n                }\n\n                case 'QUIC_SESSION_STREAM_FRAME_COALESCED': {\n                    break;\n                }\n\n                case 'QUIC_SESSION_CERTIFICATE_VERIFIED': {\n                    break;\n                }\n\n                case 'HTTP3_PEER_CONTROL_STREAM_CREATED':\n                case 'HTTP3_LOCAL_CONTROL_STREAM_CREATED': {\n                    const event_params: netlogschema.HTTP3_STREAM_CREATED = params;\n                    const owner: 'remote' | 'local' = ((): 'remote' | 'local' => {\n                        if (event_type.indexOf('PEER') >= 0) {\n                            return 'remote';\n                        } else {\n                            return 'local';\n                        }\n                    })();\n                    const frame: qlogschema.IEventH3StreamTypeSet = {\n                        stream_id: event_params.stream_id.toString(),\n                        owner,\n                        new: qlogschema.H3StreamType.control,\n                    }\n                    qlogEvent.push(qlogschema.EventCategory.http);\n                    qlogEvent.push(qlogschema.HTTP3EventType.stream_type_set);\n                    qlogEvent.push(frame);\n                    connection.qlogEvents.push(qlogEvent);\n                    break;\n                }\n\n                case 'HTTP3_PEER_QPACK_DECODER_STREAM_CREATED':\n                case 'HTTP3_LOCAL_QPACK_DECODER_STREAM_CREATED': {\n                    const event_params: netlogschema.HTTP3_STREAM_CREATED = params;\n                    const owner: 'remote' | 'local' = ((): 'remote' | 'local' => {\n                        if (event_type.indexOf('PEER') >= 0) {\n                            return 'remote';\n                        } else {\n                            return 'local';\n                        }\n                    })();\n                    const frame: qlogschema.IEventH3StreamTypeSet = {\n                        stream_id: event_params.stream_id.toString(),\n                        owner,\n                        new: qlogschema.H3StreamType.qpack_decode,\n                    }\n                    qlogEvent.push(qlogschema.EventCategory.http);\n                    qlogEvent.push(qlogschema.HTTP3EventType.stream_type_set);\n                    qlogEvent.push(frame);\n                    connection.qlogEvents.push(qlogEvent);\n                    break;\n                }\n\n                case 'HTTP3_PEER_QPACK_ENCODER_STREAM_CREATED':\n                case 'HTTP3_LOCAL_QPACK_ENCODER_STREAM_CREATED': {\n                    const event_params: netlogschema.HTTP3_STREAM_CREATED = params;\n                    const owner: 'remote' | 'local' = ((): 'remote' | 'local' => {\n                        if (event_type.indexOf('PEER') >= 0) {\n                            return 'remote';\n                        } else {\n                            return 'local';\n                        }\n                    })();\n                    const frame: qlogschema.IEventH3StreamTypeSet = {\n                        stream_id: event_params.stream_id.toString(),\n                        owner,\n                        new: qlogschema.H3StreamType.qpack_encode,\n                    }\n                    qlogEvent.push(qlogschema.EventCategory.http);\n                    qlogEvent.push(qlogschema.HTTP3EventType.stream_type_set);\n                    qlogEvent.push(frame);\n                    connection.qlogEvents.push(qlogEvent);\n\n                    break;\n                }\n\n                case 'HTTP3_SETTINGS_RECEIVED':\n                case 'HTTP3_SETTINGS_SENT': {\n                    const event_params: netlogschema.HTTP3_SETTINGS = params;\n                    const owner: 'remote' | 'local' = ((): 'remote' | 'local' => {\n                        if (event_type.indexOf('SENT') >= 0) {\n                            return 'local';\n                        } else {\n                            return 'remote';\n                        }\n                    })();\n                    const frame: qlogschema.IEventH3ParametersSet = {\n                        owner,\n                        max_header_list_size: event_params.SETTINGS_MAX_HEADER_LIST_SIZE,\n                        max_table_capacity: event_params.SETTINGS_QPACK_MAX_TABLE_CAPACITY,\n                        blocked_streams_count: event_params.SETTINGS_QPACK_BLOCKED_STREAMS,\n                    };\n                    qlogEvent.push(qlogschema.EventCategory.http);\n                    qlogEvent.push(qlogschema.HTTP3EventType.parameters_set);\n                    qlogEvent.push(frame);\n                    connection.qlogEvents.push(qlogEvent);\n                    break;\n                }\n\n                case 'HTTP3_MAX_PUSH_ID_RECEIVED':\n                case 'HTTP3_MAX_PUSH_ID_SENT': {\n                    const event_params: netlogschema.HTTP3_MAX_PUSH_ID = params;\n                    const frame: qlogschema.IMaxPushIDFrame = {\n                        frame_type: qlogschema.HTTP3FrameTypeName.max_push_id,\n                        push_id: event_params.push_id.toString(),\n                    };\n                    break;\n                }\n\n                case 'HTTP3_HEADERS_DECODED':\n                case 'HTTP3_HEADERS_SENT': {\n                    const event_params: netlogschema.HTTP3_HEADERS = params;\n                    const headers: Array<qlogschema.IHTTPHeader> = Object.entries(event_params.headers).map(([key, value]) => {\n                        return { name: key, value };\n                    });\n                    const frame: qlogschema.IEventH3FrameCreated = {\n                        stream_id: event_params.stream_id.toString(),\n                        frame: {\n                            frame_type: qlogschema.HTTP3FrameTypeName.headers,\n                            headers,\n                        },\n                    };\n                    connection.pushH3Frame(event_type, frame, qlogEvent)\n                    break;\n                }\n\n                case 'HTTP3_PRIORITY_UPDATE_RECEIVED':\n                case 'HTTP3_PRIORITY_UPDATE_SENT': {\n                    const event_params: netlogschema.HTTP3_PRIORITY_UPDATE = params;\n                    // Not supported yet\n                    break;\n                }\n\n                case 'HTTP3_DATA_SENT': {\n                    break;\n                }\n\n                case 'HTTP3_DATA_FRAME_RECEIVED': {\n                    const event_params: netlogschema.HTTP3_DATA_FRAME = params;\n                    const frame: qlogschema.IEventH3FrameParsed = {\n                        stream_id: event_params.stream_id.toString(),\n                        frame: {\n                            frame_type: qlogschema.HTTP3FrameTypeName.data,\n                        },\n                        byte_length: event_params.payload_length.toString(),\n                    };\n                    connection.pushH3Frame(event_type, frame, qlogEvent);\n                    break;\n                }\n\n                case 'HTTP3_UNKNOWN_FRAME_RECEIVED': {\n                    break;\n                }\n\n                case 'HTTP3_HEADERS_RECEIVED': {\n                    // Not in use\n                    break;\n                }\n\n                case 'CERT_VERIFIER_REQUEST': {\n                    qlogEvent.push(qlogschema.EventCategory.info);\n                    qlogEvent.push(qlogschema.GenericEventType.marker);\n\n                    if (phase === 'PHASE_BEGIN') {\n                        qlogEvent.push('CERT_VERIFIER_REQUEST BEGIN')\n                    } else {\n                        qlogEvent.push('CERT_VERIFIER_REQUEST END')\n                    }\n                    connection.qlogEvents.push(qlogEvent);\n                    break;\n                }\n\n                default: {\n                    // Netlog event types not yet covered\n                    console.warn(\"netlog2qlog:convert : unknown QUIC event, not supported yet!\", event, event_type);\n                    break;\n                }\n            }\n        }\n\n        const qlogs: Array<qlogschema.ITrace> = new Array<qlogschema.ITrace>();\n\n        connectionMap.forEach((conn: QUICConnection, key: number) => {\n            if (conn.qlogEvents.length > 0) {\n                qlogs.push({\n                    title: conn.title,\n                    vantage_point: { type: qlogschema.VantagePointType.client },\n                    event_fields: [\"relative_time\", \"category\", \"event\", \"data\"],\n                    common_fields: { protocol_type: \"QUIC_HTTP3\", reference_time: conn.startTime.toString() },\n                    events: conn.qlogEvents,\n                });\n            }\n            else {\n                console.warn(\"netlogtoqlog:convert : QUIC connection found but not events logged for this one for some reason... netlog sometimes has QUIC_SESSION_CLOSED events due to timeouts and those are not linked to the real original connection at this time, which is the likely source of this warning.\", conn);\n            }\n        });\n\n        const qlogFile: qlogschema.IQLog = {\n            qlog_version: \"draft-02-wip\",\n            traces: qlogs,\n        };\n\n        return qlogFile;\n    }\n}\n","import * as qlogschema from '@quictools/qlog-schema';\n\nexport default class NewlineJSONToQlog {\n\n    public static async convert( inputStream:ReadableStream ) : Promise<qlogschema.IQLog> {\n\n        console.log(\"NewlineJSONToQlog: converting newline delimited JSON file\");\n\n        // make proper qlogschema.IQLog again when we've updated the schema to match draft-02 proper\n        const qlogFile:any = { qlog_version: \"draft-02-RC1\", qlog_format: \"NDJSON\", traces: new Array<qlogschema.ITrace>() } as qlogschema.IQLog;\n        \n\n        const rawJSONentries = await NewlineJSONToQlog.parseNDJSON( inputStream );\n\n        if ( rawJSONentries.length === 0 ) {\n            console.error(\"NewlineJSONToQlog: no entries found in the loaded file...\");\n\n            return qlogFile;\n        }\n\n        // in NDJSON format, we should first have the file \"header\", a separate object containing the qlog metadata\n        // and then we should have a single entry per event after that. \n\n        const header = rawJSONentries.shift();\n\n        if ( header.qlog_version === undefined || header.qlog_format !== \"NDJSON\" || header.trace === undefined ) { \n            console.error(\"NewlineJSONToQlog: File did not start with the proper qlog header! Aborting...\", header);\n\n            return qlogFile;\n        }\n\n        // copy over everything, but we'll handle trace separately below\n        for ( const key of Object.keys(header) ) {\n            if ( key !== \"trace\" ) {\n                (qlogFile as any)[key] = header[key];\n            }\n        }\n\n        // NDJSON files have just a single trace by definition\n        const trace:qlogschema.ITrace = {\n            vantage_point: { \n                type: qlogschema.VantagePointType.unknown,\n            },\n            event_fields: [],\n            events: [],\n        };\n\n        // copy over everything\n        for ( const key of Object.keys(header.trace) ) {\n            (trace as any)[ key ] = header.trace[key];\n        }\n\n        trace.events = rawJSONentries; // the header was removed by calling shift() above, so these should be the raw events\n\n        \n        qlogFile.traces = [ trace ];\n\n        return qlogFile as qlogschema.IQLog;\n    } \n\n    protected static async parseNDJSON( inputStream:ReadableStream ) : Promise<Array<any>> {\n\n        let resolver:any = undefined;\n        let rejecter:any = undefined;\n\n        const output = new Promise<Array<any>>( (resolve, reject) => {\n            resolver = resolve;\n            rejecter = reject;\n        });\n\n        const entries:Array<any> = [];\n\n        // const jsonStream = ndjsonStream( inputStream );\n        const jsonStream = NewlineJSONToQlog.createNewlineTransformer( inputStream );\n\n        const streamReader = jsonStream.getReader(); \n        let read:any = undefined;\n\n        streamReader.read().then( read = ( result:any ) => {\n\n            // at the end of the stream, this function is called one last time \n            // with result.done set and an empty result.value\n            if ( result.done ) {\n                resolver( entries );\n\n                return;\n            }\n\n            // use destructuring instead of concat to merge the objects, \n            // see https://dev.to/uilicious/javascript-array-push-is-945x-faster-than-array-concat-1oki\n            entries.push( ...result.value );\n\n            // console.log(\"parseNDJSON: DEBUG : \", result.value.length, result.value );\n\n            streamReader.read().then( read );\n        } );\n\n        return output;\n    }\n\n    // this code was taken largely from the can-ndjson-stream project (https://www.npmjs.com/package/can-ndjson-stream)\n    // that project however surfaces each object individually, which incurs quite a large message passing overhead from the transforming stream\n    // to the reading stream.\n    // Our custom version here instead batches all read objects from a single chunk and propagates those up in 1 time, which is much faster for our use case.\n\n    // copyright notice for this function:\n    /*\n        The MIT License (MIT)\n\n        Copyright 2017 Justin Meyer (justinbmeyer@gmail.com), Fang Lu\n        (cc2lufang@gmail.com), Siyao Wu (wusiyao@umich.edu), Shang Jiang\n        (mrjiangshang@gmail.com)\n\n        Permission is hereby granted, free of charge, to any person obtaining a copy\n        of this software and associated documentation files (the \"Software\"), to deal\n        in the Software without restriction, including without limitation the rights\n        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n        copies of the Software, and to permit persons to whom the Software is\n        furnished to do so, subject to the following conditions:\n\n        The above copyright notice and this permission notice shall be included in all\n        copies or substantial portions of the Software.\n\n        THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n        SOFTWARE.\n    */\n    protected static createNewlineTransformer( inputStream:ReadableStream ):ReadableStream {\n\n        let is_reader:ReadableStreamReader|undefined = undefined;\n        let cancellationRequest:boolean = false;\n\n        let readLineCount = 0;\n\n        return new ReadableStream({\n            start: (controller) => {\n                const reader = inputStream.getReader();\n                is_reader = reader;\n\n                const decoder = new TextDecoder();\n                let data_buf = \"\";\n\n                reader.read().then(function processResult(result:any):any {\n\n                    // console.log(\"parseNDJSON:parse \", result);\n\n                    // at the end of the stream, this function is called one last time \n                    // with result.done set and an empty result.value\n                    if (result.done) {\n                        if (cancellationRequest) {\n                            // Immediately exit\n                            return;\n                        }\n\n                        // try to process the last part of the file if possible\n                        data_buf = data_buf.trim();\n                        if (data_buf.length !== 0) {\n                            ++readLineCount;\n\n                            try {\n                                const data_l = JSON.parse(data_buf);\n                                controller.enqueue( [data_l] ); // need to wrap in array, since that's what calling code expects\n                            } \n                            catch (e) {\n                                console.error(\"NewlineJSONToQlog: line #\" + readLineCount + \" was invalid JSON. Skipping and continuing.\", data_buf);\n                                // // TODO: what does this do practically? We probably want to (silently?) ignore errors?\n                                // controller.error(e);\n                                // return;\n                            }\n                        }\n\n                        controller.close();\n\n                        return;\n                    }\n\n                    const data = decoder.decode(result.value, {stream: true});\n                    data_buf += data;\n\n                    const lines = data_buf.split(\"\\n\");\n\n                    const output = []; // batch results together to reduce message passing overhead\n\n                    for ( let i = 0; i < lines.length - 1; ++i) {\n\n                        const l = lines[i].trim();\n                        \n                        if (l.length > 0) {\n                            ++readLineCount;\n\n                            try {\n                                const data_line = JSON.parse(l);\n                                // controller.enqueue(data_line) would immediately pass the single read object on, but we batch it instead on the next line\n                                output.push( data_line );\n                            } \n                            catch (e) {\n                                console.error(\"NewlineJSONToQlog: line #\" + readLineCount + \" was invalid JSON. Skipping and continuing.\", l);\n\n                                // // TODO: what does this do practically? We probably want to (silently?) ignore errors?\n                                // controller.error(e);\n                                // cancellationRequest = true;\n                                // reader.cancel();\n\n                                // return;\n                            }\n                        }\n                    }\n                    data_buf = lines[lines.length - 1];\n\n                    controller.enqueue( output );\n\n                    return reader.read().then(processResult);\n                });\n\n            },\n\n            cancel: (reason) => {\n                console.warn(\"NewlineJSONToQlog:parseNDJSON : Cancel registered due to \", reason);\n\n                cancellationRequest = true;\n\n                if ( is_reader !== undefined ) {\n                    is_reader.cancel();\n                }\n            },\n        },\n        // TODO: we tried to optimize a bit with this, but it doesn't seem to work (printing chunks above gives chunks of 65K, not 260K)\n        // didn't immediately find a good solution for this though, seems like chunk-sizing APIs aren't well supported yet in browsers\n        {\n            highWaterMark: 4, // read up to 1 chunk of the following size \n            size: (chunk) => { return 262144; },\n        });\n    }\n}\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { getModule } from \"vuex-module-decorators\";\nimport { Component, Vue } from \"vue-property-decorator\";\nimport ConnectionStore from \"@/store/ConnectionStore\";\n\nimport TCPToQLOG from \"./pcapconverter/tcptoqlog\";\nimport NetlogToQLOG from \"./netlogconverter/netlogtoqlog\";\nimport FileLoader, { FileResult } from \"./data/FileLoader\";\n\nimport StreamingJSONParser from \"./utils/StreamingJSONParser\";\n\n@Component({})\nexport default class FileManagerContainer extends Vue {\n\n    protected store:ConnectionStore = getModule(ConnectionStore, this.$store);\n\n    protected urlToLoad:string = \"\";\n    protected secretsToLoad:string = \"\";\n\n    protected filesToUpload:Array<File> = new Array<File>();\n    protected secretsToUpload:File|null = null;\n\n    public loadURL(){\n\n        if ( this.urlIsPcap && this.secretsToLoad === \"\" ){\n            Vue.notify({\n                group: \"default\",\n                title: \"Provide .keys file\",\n                type: \"error\",\n                duration: 6000,\n                text: \"You're linking to a .pcap without also providing a .keys file. This is currently not supported.\",\n            });\n\n            return;\n        }\n\n        const params:any = {};\n        if ( this.urlToLoad.endsWith(\".json\") ){\n            params.list = this.urlToLoad;\n        }\n        else {\n            params.file = this.urlToLoad;\n        };\n\n        if ( this.secretsToLoad !== \"\" ){\n            params.secrets = this.secretsToLoad;\n        }\n\n        this.store.loadFilesFromServer( params );\n    }\n\n    public uploadFile(){\n\n        if ( this.uploadIsPcap && this.secretsToUpload === null ){\n            Vue.notify({\n                group: \"default\",\n                title: \"Provide .keys file\",\n                type: \"error\",\n                duration: 6000,\n                text: \"You're uploading a .pcap without also providing a .keys file. This is currently not supported.\",\n            });\n\n            return;\n        }\n\n        for ( const file of this.filesToUpload ){\n\n            if ( file === null || (!file.name.endsWith(\".qlog\") && !file.name.endsWith(\".json\")) && !file.name.endsWith(\".netlog\") && !file.name.endsWith(\".qlognd\")) {\n                Vue.notify({\n                    group: \"default\",\n                    title: \"Provide .qlog file\",\n                    type: \"error\",\n                    duration: 6000,\n                    text: \"We currently only support uploading .qlog files. \" + file.name,\n                });\n            \n                return;\n            }\n        }\n\n        for ( const file of this.filesToUpload ){\n\n            const uploadFileName = file.name;\n            Vue.notify({\n                group: \"default\",\n                title: \"Loading uploaded file\",\n                text: \"Loading uploaded file \" + uploadFileName + \".<br/>The file is not sent to a server.\",\n            });\n\n            // const reader = new FileReader();\n\n            // reader.onload = (evt) => {\n            //     try{\n\n            //         if ( file.name.endsWith(\".qlog\") ) {\n            //             const contentsJSON = StreamingJSONParser.parseQlogText( (evt!.target as any).result );\n            //             this.store.addGroupFromQlogFile({fileContentsJSON: contentsJSON, fileInfo:{ filename: uploadFileName }});\n            //         }\n            //         else if ( file.name.endsWith(\".json\") ) {\n            //             const contentsJSON = StreamingJSONParser.parseJSONWithDeduplication( (evt!.target as any).result );\n\n            //             const qlogJSON = TCPToQLOG.convert( contentsJSON );\n            //             this.store.addGroupFromQlogFile({fileContentsJSON: qlogJSON, fileInfo:{ filename: uploadFileName }});\n            //         } \n            //         else if (file.name.endsWith(\".netlog\")) {\n            //             const contentsJSON = JSON.parse( (evt!.target as any).result );\n                        \n            //             const qlogJSON = NetlogToQLOG.convert( contentsJSON );\n            //             this.store.addGroupFromQlogFile({fileContentsJSON: qlogJSON, fileInfo:{ filename: uploadFileName }});\n            //         }\n            //         else if (file.name.endsWith(\".qlognd\")) {\n            //             // const contentsJSON = JSON.parse( (evt!.target as any).result );\n                        \n            //             // const qlogJSON = NetlogToQLOG.convert( contentsJSON );\n            //             // this.store.addGroupFromQlogFile({fileContentsJSON: qlogJSON, fileInfo:{ filename: uploadFileName }});\n            //             let countedEvents = 0;\n            //             let events:any = [];\n                        \n\n            //             // const fileContents = new Response( (evt!.target as any).result );\n\n            //             // ndjsonStream( fileContents ).then ( (jsonStream:any) => {\n\n            //             // console.log( file );\n            //             // console.log( Object.keys(file) );\n\n            //             // ref: https://stackoverflow.com/questions/14438187/javascript-filereader-parsing-long-file-in-chunks\n            //             // let blob = new Blob([(evt!.target as any).result]);\n            //             // let resp = new Response(blob).body;\n            //             let resp = new Response(file).body;\n\n\n            //             let countTheStuff:any = () => {\n            //                 countedEvents++;\n            //             };\n\n            //             let jsonStream = ndjsonStream( resp );\n            //             console.log(\"NDSTREAM \", jsonStream);\n\n            //             // ndstream.then ( (jsonStream:any) => {\n            //                 const streamReader = jsonStream.getReader(); \n            //                 let read:any = undefined;\n\n            //                 streamReader.read().then( read = ( result:any ) => {\n            //                     if ( result.done ) {\n            //                         let endTime = performance.now();\n            //                         console.log(\"NDJSON ALL DONE!\", endTime - startTime, countedEvents, events.length);\n            //                         return;\n            //                     }\n\n            //                     countTheStuff();\n            //                     console.log( result.value.length, result.value );\n\n            //                     streamReader.read().then( read );\n            //                 } );\n            //             // });\n\n            //             // const input = Readable.from( [(evt!.target as any).result] );\n\n            //             // robin: need to switch to something that uses JS streams isntead of NodeJS streams because this ecosystem sucks\n            //             // this seems to have potential: https://canjs.com/doc/can-ndjson-stream.html\n\n            //             // let self = this;\n\n            //             // input.on(\"end\", function() {\n            //             //     self.store.addGroupFromQlogFile({fileContentsJSON: {}, fileInfo:{ filename: uploadFileName }});\n\n            //             //     console.log(\"Total events read: \", countedEvents, events.length );\n            //             // });\n                        \n            //             // input.on(\"error\", function(e:any) { \n            //             //     console.error(\"qlogFullToQlogND:validate : error during reading filecontents!\", e);\n            //             //     // resolver();\n            //             // });\n                        \n            //             // input.pipe(ndjson.parse())\n            //             // .on('data', function(obj:any) {\n            //             //     ++countedEvents;\n            //             //     // console.log( \"COUNTED\", countedEvents, obj );\n\n            //             //     events.push( obj );\n            //             // })\n\n            //         }\n            //         else { \n            //             throw new Error(\"unsupported file format : \" + uploadFileName);\n            //         }\n\n            //         Vue.notify({\n            //             group: \"default\",\n            //             title: \"Uploaded file\",\n            //             type: \"success\",\n            //             text: \"The uploaded file is now available for visualization \" + uploadFileName + \".<br/>Use the menu above to switch views.\",\n            //         });\n            //     }\n            //     catch (e){\n                    \n            //         console.error(\"FileManagerContainer:uploadFile : \", e);\n            //         Vue.notify({\n            //             group: \"default\",\n            //             title: \"Error uploading file\",\n            //             type: \"error\",\n            //             duration: 6000,\n            //             text: \"Something went wrong. \" + uploadFileName + \". For more information, view the devtools console.\",\n            //         });\n            //     }\n            // };\n\n            // let identifier = new FileReader();\n\n            // let firstFewBytes = file.slice(0, 1024); // first 1000 bytes should contain qlog_version\n\n            // identifier.onload = (evt) => { \n            //     let firstFewCharacters = (evt!.target as any).result;\n\n            //     console.log(\"FIRST FEW CHARACTERS ARE: \", firstFewCharacters, firstFewCharacters.indexOf(\"qlog_version\") >= 0 ); \n\n            //     reader.readAsText(file);\n            // };\n\n            // identifier.readAsText(firstFewBytes);\n\n            FileLoader.Load( file, file.name ).then( (result:FileResult) => {\n                \n                this.store.addGroupFromQlogFile({fileContentsJSON: result.qlogJSON, fileInfo:{ filename: uploadFileName }});\n\n                Vue.notify({\n                    group: \"default\",\n                    title: \"Uploaded file\",\n                    type: \"success\",\n                    text: \"The uploaded file is now available for visualization \" + uploadFileName + \".<br/>Use the menu above to switch views.\",\n                });\n            })\n            .catch( (reason:any) => {\n                console.error(\"FileManagerContainer:uploadFile : \", reason);\n\n                Vue.notify({\n                    group: \"default\",\n                    title: \"Error uploading file\",\n                    type: \"error\",\n                    duration: 6000,\n                    text: \"Something went wrong. \" + uploadFileName + \". For more information, view the devtools console.\",\n                });\n            });\n        }\n\n\n        // // https://serversideup.net/uploading-files-vuejs-axios/\n        // const formData = new FormData();\n        // formData.append(\"file\", this.fileToUpload!);\n        // formData.append(\"secrets\", this.secretsToUpload!);\n\n        // console.log( formData);\n        \n        // axios.post( '/loadfiles',\n        //     formData,\n        //     {\n        //         headers: {\n        //             'Content-Type': 'multipart/form-data'\n        //         }\n        //     }\n        // ).then(function(){\n        // console.log('SUCCESS!!');\n        // })\n        // .catch(function(){\n        // console.log('FAILURE!!');\n        // });\n\n    }\n\n    public loadExamples(){\n        let alreadyLoaded = false;\n        for (const  group of this.store.groups ){\n            if ( group.filename.indexOf(\"DEMO\") === 0 ){\n                alreadyLoaded = true;\n                break;\n            }\n        }\n\n        if ( alreadyLoaded ){\n\n            Vue.notify({\n                group: \"default\",\n                title: \"Example files already loaded\",\n                type: \"warn\",\n                text: \"Example files were already loaded, check for files with the 'DEMO_' prefix.\",\n            });\n\n            return;\n        }\n\n        this.store.loadExamplesForDemo();\n    }\n\n    public loadMassiveExample(){\n        let alreadyLoaded = false;\n        for (const  group of this.store.groups ){\n            if ( group.filename.indexOf(\"MASSIVE_DEMO_mvfst_large\") >= 0 ){\n                alreadyLoaded = true;\n                break;\n            }\n        }\n\n        if ( alreadyLoaded ){\n\n            Vue.notify({\n                group: \"default\",\n                title: \"Example file already loaded\",\n                type: \"warn\",\n                text: \"Example file was already loaded, it is called 'MASSIVE_DEMO_mvfst_large'.\",\n            });\n\n            return;\n        }\n\n        this.store.loadQlogDirectlyFromURL( { url : \"standalone_data/draft-00/mvfst_large.qlog\", filename: \"MASSIVE_DEMO_mvfst_large.qlog (31MB)\"} );\n    }\n\n    protected get urlIsPcap(){\n        return this.urlToLoad.indexOf(\".pcap\") >= 0 && this.urlToLoad.indexOf(\".pcapng\") < 0;\n    }\n\n    protected get uploadIsPcap(){\n        return false; // this.fileToUpload !== null && this.fileToUpload.name.indexOf(\".pcap\") >= 0;\n    }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileManagerContainer.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileManagerContainer.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./FileManagerContainer.vue?vue&type=template&id=fdd4971e&scoped=true&\"\nimport script from \"./FileManagerContainer.vue?vue&type=script&lang=ts&\"\nexport * from \"./FileManagerContainer.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./FileManagerContainer.vue?vue&type=style&index=0&id=fdd4971e&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"fdd4971e\",\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\nimport { Component, Vue } from \"vue-property-decorator\";\nimport FileManagerContainer from \"@/components/filemanager/FileManagerContainer.vue\";\n\n@Component({\n    components: {\n        FileManagerContainer,\n    },\n})\nexport default class FileManager extends Vue {} \n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileManager.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileManager.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./FileManager.vue?vue&type=template&id=1ae92d2f&\"\nimport script from \"./FileManager.vue?vue&type=script&lang=ts&\"\nexport * from \"./FileManager.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('SequenceDiagramContainer')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"home\"},[_c('SequenceDiagramConfigurator',{attrs:{\"config\":_vm.config}}),_c('SequenceDiagramRenderer',{attrs:{\"config\":_vm.config}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"background-color\":\"#cce5ff\",\"padding\":\"0px 10px\"}},[_c('p',{staticStyle:{\"padding-top\":\"10px\"}},[_vm._v(\"Select one or more traces via the dropdown(s) below to visualize them in the sequence diagram\")]),_c('b-container',{attrs:{\"fluid\":\"\"}},[_c('b-row',_vm._l((this.config.connections),function(connection,index){return _c('ConnectionConfigurator',{key:index + connection.timeOffset,attrs:{\"allGroups\":_vm.store.groups,\"connection\":connection.connection,\"numericalInputValue\":connection.timeOffset,\"numericalInputName\":( (_vm.allowCustomTimeOffset(connection, index)) ? 'Latency offset' : undefined),\"canBeRemoved\":(_vm.config.connections.length > 2 && index != 0),\"onConnectionSelected\":_vm.onConnectionSelected.bind(this, index),\"onRemoved\":_vm.onConnectionRemoved.bind(this, index),\"onNumericalValueChanged\":_vm.onTimeOffsetChange.bind(this, index)}})}),1)],1),_c('b-container',{attrs:{\"fluid\":\"\"}},[_c('b-row',[_c('b-col',[_c('b-button',{on:{\"click\":function($event){return _vm.selectDefault()}}},[_vm._v(\"Add trace\")])],1),_c('b-col',{attrs:{\"cols\":\"1\",\"align-self\":\"center\"}},[_c('div',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover\",modifiers:{\"hover\":true}}],staticClass:\"text-right\",attrs:{\"title\":\"Increase if you have sub-millisecond latencies or want more space between events. 1 = ms level, 1000 = us level. Typically 10 or 100 is enough.\"}},[_vm._v(\"Time multiplier: \")])]),_c('b-col',{attrs:{\"cols\":\"1\"}},[_c('b-input',{attrs:{\"type\":\"number\"},model:{value:(_vm.config.timeResolution),callback:function ($$v) {_vm.$set(_vm.config, \"timeResolution\", $$v)},expression:\"config.timeResolution\"}})],1)],1)],1),(_vm.connectionIsUnknownPerspective)?_c('b-alert',{attrs:{\"show\":\"\",\"variant\":\"danger\"}},[_vm._v(\"The selected trace has an unknown vantage point. We guessed it based on heuristics, but this could be wrong!\")]):_vm._e(),(this.store.outstandingRequestCount === 0 && this.store.groups.length === 0)?_c('b-alert',{attrs:{\"show\":\"\",\"variant\":\"danger\"}},[_vm._v(\"Please load a trace file to visualize it\")]):(this.store.groups.length === 0)?_c('b-alert',{attrs:{\"show\":\"\",\"variant\":\"warning\"}},[_vm._v(\"Loading files...\")]):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import Connection from \"@/data/Connection\";\n\n// we keep track of the timeOffset separately here for two reasons:\n// 1. changing it directly in EventParser wouldn't be reactive by itself, we would have to trigger UI updates another way\n// 2. we don't want the global timeOffset to change for all visualizations (e.g., you probably don't want this for the congestion graph)\n// Separate tracking allows reactivity, but adds other complexities (e.g., more difficult to persist the offset when changing views etc.)\n// Main issue: the timeOffset is forgotten when switching connections in SequenceDiagramConfigurator, since that works on the raw Connection via ConnectionConfigurator...\n// as such, we now keep a copy of the timeOffset and some -dirty dirty dirty- persistence code in SequenceDiagramD3Renderer to circumvent this\n// TODO: revisit this whole setup to see if something simpler isn't possible\nexport interface SequenceDiagramConnection {\n    connection:Connection,\n    timeOffset:number\n}\n\nexport default class SequenceDiagramConfig {\n\n    public static createConnectionWithTimeoffset(connection:Connection):SequenceDiagramConnection {\n        return {\n            connection: connection,\n            timeOffset: connection.getEventParser() ? connection.getEventParser().timeOffset : 0,\n        }\n    }\n\n    // public scale:number = 0.1; // amount of pixels per ms // by default 1 pixel = 10 ms // can be in [0,1[ to squish things\n\n    // the connections to be shown in the SequenceDiagram\n    // index 0 = left, index 1 = next one to the right, ... , length - 1 = rightmost one\n    public connections:Array<SequenceDiagramConnection> = new Array<SequenceDiagramConnection>();\n\n    public timeResolution:number = 1; // for dealing with traces with sub-millisecond latencies (as the sequence diagram groups per millisecond)\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-col',{staticStyle:{\"background-color\":\"white\",\"color\":\"black\",\"border\":\"black 1px solid\",\"max-width\":\"50%\"}},[_c('b-container',{attrs:{\"fluid\":\"\"}},[(_vm.allowGroupSelection && !_vm.allowConnectionSelection)?_c('div',[_c('b-form-select',{staticClass:\"mb-3 mt-3\",attrs:{\"options\":_vm.groupOptions},on:{\"change\":_vm.onGroupSelectionChanged},model:{value:(_vm.selectedGroup),callback:function ($$v) {_vm.selectedGroup=$$v},expression:\"selectedGroup\"}})],1):_c('div',[(_vm.tooManyOptions)?_c('div',[_c('b-form-select',{staticClass:\"mb-3 mt-3\",attrs:{\"options\":_vm.groupOptions},on:{\"change\":_vm.onGroupSelectionChanged},model:{value:(_vm.selectedGroup),callback:function ($$v) {_vm.selectedGroup=$$v},expression:\"selectedGroup\"}}),_c('b-form-select',{staticClass:\"mb-3\",attrs:{\"options\":_vm.connectionOptions},on:{\"change\":_vm.onConnectionSelectionChanged},model:{value:(_vm.selectedConnection),callback:function ($$v) {_vm.selectedConnection=$$v},expression:\"selectedConnection\"}}),(_vm.canBeRemoved)?_c('b-button',{on:{\"click\":_vm.removeMyself}},[_vm._v(\"−\")]):_vm._e()],1):_c('div',[_c('b-row',{staticClass:\"mt-3\"},[_c('b-col',[_c('div',[_vm._v(_vm._s(_vm.selectedConnection.parent.filename)+\" (\"+_vm._s(_vm.selectedConnection.parent.description)+\")\")])]),(_vm.numericalInputName)?_c('b-col',{attrs:{\"cols\":\"2\"}},[_c('div',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover\",modifiers:{\"hover\":true}}],attrs:{\"title\":\"This value is automatically calculated, but can be manually adjusted.\"}},[_vm._v(_vm._s(_vm.numericalInputName)+\" : \")])]):_vm._e(),(_vm.canBeRemoved)?_c('b-col',{staticStyle:{\"max-width\":\"36px\"}}):_vm._e()],1),_c('b-row',{staticClass:\"mb-3\"},[_c('b-col',[_c('b-form-select',{attrs:{\"options\":_vm.combinedOptions},on:{\"change\":_vm.onConnectionSelectionChanged},model:{value:(_vm.selectedConnection),callback:function ($$v) {_vm.selectedConnection=$$v},expression:\"selectedConnection\"}})],1),(_vm.numericalInputName)?_c('b-col',{attrs:{\"cols\":\"2\"}},[_c('b-input',{attrs:{\"type\":\"number\"},on:{\"change\":_vm.onNumericalValueUpdated},model:{value:(_vm.numericalValue),callback:function ($$v) {_vm.numericalValue=$$v},expression:\"numericalValue\"}})],1):_vm._e(),(_vm.canBeRemoved)?_c('b-col',{staticClass:\"px-0\",attrs:{\"cols\":\"auto\"}},[_c('b-button',{on:{\"click\":_vm.removeMyself}},[_vm._v(\"−\")])],1):_vm._e()],1)],1)])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { getModule } from \"vuex-module-decorators\";\nimport { Component, Vue, Prop, Watch } from \"vue-property-decorator\";\n\nimport ConnectionGroup from \"@/data/ConnectionGroup\";\nimport Connection from \"@/data/Connection\";\nimport QlogConnection from '@/data/Connection';\n\n// ConnectionConfigurator is used to select a single connection for one vertical line in the SequenceDiagram\n// All the Renderer cares about is the Connection, but here for our selection we also need ConnectionGroup\n// So we pass in all possible ConnectionGroups (this.allGroups) and then allow the user to select the connection they want\n// We provide two modes: all in 1 select (when there aren't too many options) and 2 selects (1 for the group, then the connection)\n// This latter one is for when there are too many options and a single select would be too unwieldy\n@Component\nexport default class ConnectionConfigurator extends Vue { \n    @Prop()\n     // passing in connection allows us to set it externally as well (e.g., loading from config string, loading premade testcase)\n    protected connection!:Connection;\n\n    @Prop()\n    protected group!:ConnectionGroup;\n\n    @Prop()\n    protected allGroups!:Array<ConnectionGroup>; \n\n    @Prop()\n    protected numericalInputValue?:number;\n\n    @Prop()\n    protected numericalInputName?:string;\n\n    @Prop({ default: true })\n    protected canBeRemoved!:boolean;\n\n    @Prop({ default: false })\n    protected allowGroupSelection!:boolean;\n\n    @Prop({ default: true })\n    protected allowConnectionSelection!:boolean;\n\n    @Prop()\n    protected onGroupSelected!:(group: ConnectionGroup) => void;\n\n    @Prop()\n    protected onConnectionSelected!:(conn: QlogConnection) => void;\n\n    @Prop()\n    protected onNumericalValueChanged!:(offset:number) => void;\n\n    @Prop()\n    protected onRemoved!:() => void;\n\n    protected selectedConnection:Connection = this.connection;\n    protected selectedGroup:ConnectionGroup = (this.group) ? this.group : this.connection.parent;\n\n    protected numericalValue?:number = this.numericalInputValue;\n\n    // Firstly, when we change our selection from inside this component, we propagate it to our parent in onSelectionChanged\n    // The parent then sets this.connection, but this.selectedGroup is not automatically co-updated\n    // so, we manually do that here. \n    // Secondly, if we change the connection from outside, this.selectedConnection is not updated, so we do that here\n    // TODO: this feels dirty... figure out a better way to do two-way binding of these vars between outside and inside \n    @Watch('connection', { immediate: false, deep: false })\n    protected onConnectionChanged(newConnection: Connection, oldConnection: Connection) {\n        console.log(\"ConnectionConfigurator:onConnectionChanged : setting selectedGroup : \", newConnection.title, oldConnection.title, newConnection, oldConnection);\n        this.selectedGroup = newConnection.parent;\n        if ( this.selectedConnection !== newConnection ) {\n            this.selectedConnection = newConnection;\n        }\n\n        this.numericalValue = this.numericalInputValue;\n    }\n\n    protected get tooManyOptions(){\n        // TODO: we can do this without creating the combinedOptions array with a for-loop\n        // TODO: maybe allow passing as a prop? \n        return this.combinedOptions.length > 30; \n    }\n\n    // <b-form-select> expects things to be in a certain format to render correctly \n    // used in separate-select mode\n    protected get groupOptions(){\n        const options:any = [];\n        for ( const group of this.allGroups ) {\n            options.push( { value: group, text: group.filename + \" (\" + (group.title ? group.title + \" : \" : \"\") + group.description + \")\" } );\n        } \n\n        return options;\n    }\n\n    // used in separate-select mode\n    protected get connectionOptions(){ \n        const options:any = [];\n        for ( const connection of this.selectedGroup.getConnections() ) {\n\n            let connectionName = \"\";\n            if ( connection.vantagePoint ){\n                if (connection.vantagePoint.name){\n                    connectionName += connection.vantagePoint.name + \" : \";\n                }\n                if (connection.vantagePoint.type){\n                    connectionName += connection.vantagePoint.type;\n                }\n                else {\n                    connectionName += \"UNKNOWN\";\n                }\n\n                connectionName += (connection.vantagePoint && connection.vantagePoint.flow) ? \" (flow = \" + connection.vantagePoint.flow + \") : \" : \" : \";\n            }\n            if ( connection.title ) {\n                connectionName += connection.title;\n            }\n            if (connection.description) {\n                connectionName +=  \" : \" + connection.description;\n            }\n\n            options.push( { value: connection, text: connectionName } );\n        }\n\n        return options;\n    }\n\n    // used in combined-select mode\n    protected get combinedOptions(){ \n        const options:any = [];\n\n        for ( const group of this.allGroups ) {\n            options.push( { value: null, text: group.filename, disabled: !this.allowGroupSelection } );\n\n            for ( const connection of group.getConnections() ) {\n                let connectionName = \"\";\n                if ( connection.vantagePoint ){\n                    if (connection.vantagePoint.name){\n                        connectionName += connection.vantagePoint.name + \" : \";\n                    }\n                    if (connection.vantagePoint.type){\n                        connectionName += connection.vantagePoint.type;\n                    }\n                    else {\n                        connectionName += \"UNKNOWN\";\n                    }\n\n                    connectionName += (connection.vantagePoint && connection.vantagePoint.flow) ? \" (flow = \" + connection.vantagePoint.flow + \") : \" : \" : \";\n                }\n                if ( connection.title ) {\n                    connectionName += connection.title;\n                }\n                if (connection.description) {\n                    connectionName +=  \" : \" + connection.description;\n                }\n                \n                options.push( { value: connection, text: \"↳ \" + connectionName } );\n            }\n        }\n\n        return options;\n    }\n\n    // used in separate-select mode\n    protected onGroupSelectionChanged(newlySelected:ConnectionGroup){\n        // this.selectedGroup is the PREVIOUS selection for some reason \n        console.log(\"Selected a new group\", this.selectedGroup, newlySelected);\n\n        if ( this.allowGroupSelection && this.onGroupSelected ){\n            this.onGroupSelected( this.selectedGroup );\n        }\n\n        if ( this.allowConnectionSelection ){\n            // auto-select the first connection in the list\n            this.selectedConnection = newlySelected.getConnections()[0];\n\n            this.onConnectionSelectionChanged( this.selectedConnection );\n        }\n    }\n\n    // used in separate-select and combined-select mode\n    protected onConnectionSelectionChanged(newlySelected:Connection){\n        console.log(\"Selected a new connection\", this.selectedConnection, newlySelected);\n        this.onConnectionSelected( newlySelected );\n    }\n\n    protected removeMyself(){\n        this.onRemoved();\n    }\n\n    protected onNumericalValueUpdated(val:any){\n        if ( this.onNumericalValueChanged ) {\n            this.onNumericalValueChanged( parseFloat(val) );\n        }\n    }\n} \n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConnectionConfigurator.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConnectionConfigurator.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./ConnectionConfigurator.vue?vue&type=template&id=e41b2f36&\"\nimport script from \"./ConnectionConfigurator.vue?vue&type=script&lang=ts&\"\nexport * from \"./ConnectionConfigurator.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { getModule } from \"vuex-module-decorators\";\nimport { Component, Vue, Prop } from \"vue-property-decorator\";\nimport SequenceDiagramConfig from \"./data/SequenceDiagramConfig\";\nimport ConnectionConfigurator from \"@/components/shared/ConnectionConfigurator.vue\";\nimport * as qlog from \"@quictools/qlog-schema\";\n\nimport ConnectionStore from \"@/store/ConnectionStore\";\nimport ConnectionGroup from \"@/data/ConnectionGroup\";\nimport Connection from \"@/data/Connection\";\n\n@Component({\n    components: {\n        ConnectionConfigurator,\n    },\n})\nexport default class SequenceDiagramConfigurator extends Vue {\n    @Prop()\n    protected config!: SequenceDiagramConfig;\n\n    protected store:ConnectionStore = getModule(ConnectionStore, this.$store);\n\n    public get connectionIsUnknownPerspective() {\n\n        if ( this.config.connections.length === 0 ){\n            return false;\n        }\n\n        let connection:Connection = this.config.connections[0].connection;\n        if ( connection.wasAutoGenerated && this.config.connections.length > 1 ) {\n            connection = this.config.connections[1].connection;\n        }\n\n        return  connection.getEvents().length > 0 &&\n                connection.vantagePoint && \n                connection.vantagePoint.type === qlog.VantagePointType.unknown;\n    }\n\n    public allowCustomTimeOffset(conn:Connection, index:number):boolean {\n        // only allow custom offsets for non-auto generated traces (they don't make sense for autogenerated ones)\n        return index > 0 && this.config.connections.find( (c) => c.connection.wasAutoGenerated ) === undefined; \n    }\n\n    public onConnectionSelected(connectionIndex:number, connection:Connection){\n        console.log(\"SequenceDiagramConfigurator:onConnectionSelected : \", this.config, connectionIndex, connection);\n\n        // Vue.set(this.config.connections, connectionIndex, connection);\n        // if we selected a group with just 1, we probably want to auto-generate its counterpart, so de-select any others we might have had before\n        // However, only if it's the leftmost selector. Otherwise, it might be we're manually selecting e.g., a server trace from another file \n        if ( connectionIndex === 0 && connection.parent.getConnections().filter( (conn) => !conn.wasAutoGenerated ).length === 1 ){\n            const connections = connection.parent.getConnections();\n            this.config.connections = [ SequenceDiagramConfig.createConnectionWithTimeoffset( connections[0] ) ];\n        }\n        // if there are two connections, we expect there to be 1 client and 1 server perspective\n        else if ( connection.parent.getConnections().filter( (conn) => !conn.wasAutoGenerated ).length === 2 ) {\n            const firstConnection  = connection.parent.getConnections()[0];\n            const secondConnection = connection.parent.getConnections()[1];\n\n            const firstPerspective  = firstConnection.getVantagePointPerspective();\n            const secondPerspective = secondConnection.getVantagePointPerspective();\n\n            if ( firstPerspective === secondPerspective ){\n                // They are the same, so no client + server. This is typically in a file that uses group_id\n                // We just take the one that was selected\n                this.config.connections = [ SequenceDiagramConfig.createConnectionWithTimeoffset(connection) ];\n            }\n            else if ( firstPerspective === qlog.VantagePointType.client ){\n                this.config.connections = [ SequenceDiagramConfig.createConnectionWithTimeoffset(firstConnection), SequenceDiagramConfig.createConnectionWithTimeoffset(secondConnection)];\n            }\n            else if ( secondPerspective === qlog.VantagePointType.client ){\n                this.config.connections = [ SequenceDiagramConfig.createConnectionWithTimeoffset(secondConnection), SequenceDiagramConfig.createConnectionWithTimeoffset(firstConnection)];\n            }\n        }\n        // if we've selected one, keep going until we find the next one of that vantagePoint\n        // e.g., we would expect 1 trace to contain client, network, network, network, server, so if client is selected, get everything after that as well\n        // however, we also have use cases where you have a large group of the same vantage points (e.g., all tests for a single quic-tracker run)\n        // in that case, we do NOT want to select all traces of course\n        else if ( connection.parent.getConnections().length > 2 ) {\n            const renderables = [ SequenceDiagramConfig.createConnectionWithTimeoffset(connection) ];\n\n            const connections = connection.parent.getConnections();\n            const connectionIndexInParent = connections.indexOf(connection);\n            const firstPerspective = connection.getVantagePointPerspective();\n\n            for ( let i = connectionIndexInParent + 1; i < connections.length; ++i ){\n                const perspective = connections[i].getVantagePointPerspective();\n                // we skip autogenerated traces: they are/should be selected by the renderer if needed\n                if ( perspective !== firstPerspective && !connections[i].wasAutoGenerated ){\n                    renderables.push( SequenceDiagramConfig.createConnectionWithTimeoffset(connections[i]) );\n                }\n                else {\n                    break;\n                }\n            }\n\n            this.config.connections = renderables;\n        }\n        else if ( connectionIndex > 0 ){\n            // situation: user has changed the right connection to the same vantage point as the left one\n            // for example, select server trace left, auto-generates client and puts it on the left, puts server on the right\n            // if user then, for some weird reason, selects the original client on the right instead of the server, we get generated left + original right, which is nonsense\n            \n            // so: we go over the connections. If they all have the same vantage point, we prefer the first non-autogenerated one\n            let allTheSame = true;\n            let previousVantagePoint = qlog.VantagePointType.unknown;\n            let firstNonAutogenerated = undefined;\n            for ( let i = 0; i < this.config.connections.length; ++i ){\n                let vantagePoint = qlog.VantagePointType.unknown;\n\n                if (i === connectionIndex) {\n                    vantagePoint = connection.vantagePoint.type;\n                    if ( !connection.wasAutoGenerated ){\n                        firstNonAutogenerated = connection;\n                    }\n                }\n                else {\n                    vantagePoint = this.config.connections[i].connection.vantagePoint.type;\n                    if ( !this.config.connections[i].connection.wasAutoGenerated ){\n                        firstNonAutogenerated = this.config.connections[i].connection;\n                    }\n                }\n\n                if ( i !== 0 && vantagePoint !== previousVantagePoint ){\n                    // not all of the same type, user can solve the situation themself\n                    Vue.set(this.config.connections, connectionIndex, SequenceDiagramConfig.createConnectionWithTimeoffset(connection));\n                    allTheSame = false;\n                    break;\n                }\n\n                previousVantagePoint = vantagePoint;\n            }\n\n            if ( allTheSame ){\n                if ( firstNonAutogenerated !== undefined ){\n                    console.warn(\"SequenceDiagramConfigurator: all selected traces had the same vantagePoint, auto-selecting the first non-autogenerated trace\");\n                    this.config.connections = [ SequenceDiagramConfig.createConnectionWithTimeoffset(firstNonAutogenerated) ];\n                }\n                else {\n                    console.error(\"SequenceDiagramConfigurator: all selected traces had the same vantagePoint and were also auto-generated. Trying to find a proper trace.\");\n                    let found = false;\n                    for ( const conn of connection.parent.getConnections() ){\n                        if ( !conn.wasAutoGenerated ){\n                            this.config.connections = [ SequenceDiagramConfig.createConnectionWithTimeoffset(conn) ];\n                            found = true;\n                            break;\n                        }\n                    }\n\n                    if ( !found ){\n                        console.error(\"SequenceDiagramConfigurator: Proper trace not found, keeping last selected connection. THIS SHOULD NOT HAPPEN!\");\n                        this.config.connections = [ SequenceDiagramConfig.createConnectionWithTimeoffset(connection) ];\n                    }\n                }\n            }\n        }\n\n        // TODO: try to be clever with (group_id? and) ODCID across trace files\n        // e.g., if you have 1 file with a bunch of client traces, go looking for another file with a server trace with the same ODCID\n\n        else {\n            // Vue reactivity cannot detect direct index-based changes to an array, i.e.,\n            // this.config.connections[connectionIndex] = connection;\n            // will not work. We need to use Vue.set (or .slice) to gain reactivity\n            Vue.set(this.config.connections, connectionIndex, SequenceDiagramConfig.createConnectionWithTimeoffset(connection));\n        }\n\n        // just select all other connections after this one from the same parent if there are more than 1 in a group\n        // else if ( connectionIndex === 0 && connection.parent.getConnections().length > 1 ){\n        //     const connections = connection.parent.getConnections();\n        //     const connectionIndexInParent = connections.indexOf(connection);\n        //     let rendererIndex = 1;\n        //     for ( let i = connectionIndexInParent + 1; i < connections.length; ++i ){\n        //         // Vue.set works like .push when the index isn't yet in the array\n        //         Vue.set( this.config.connections, rendererIndex, connections[i] );\n        //         ++rendererIndex;\n        //     }\n\n        //     this.config.connections.splice(rendererIndex); // remove everything starting at this index\n        // }\n    }\n\n    public mounted(){\n        if ( this.config.connections.length === 0 && this.store.groups.length > 0 ){\n            this.selectDefault();\n        }\n    }\n\n    public updated(){\n        if ( this.config.connections.length === 0 && this.store.groups.length > 0 ){\n            this.selectDefault();\n        }\n    }\n\n    protected selectDefault(){\n        console.log(\"selectDefault: adding new default connection configurator\", this.store.groups);\n        this.config.connections.push( SequenceDiagramConfig.createConnectionWithTimeoffset(this.store.groups[0].getConnections()[0]) );\n    }\n\n    protected onConnectionRemoved(connectionIndex:number){\n        this.config.connections.splice(connectionIndex, 1);\n    }\n\n    protected onTimeOffsetChange(connectionIndex:number, offset:number){\n        this.config.connections[connectionIndex].timeOffset = offset;\n    }\n}\n\n","import QlogConnection from '@/data/Connection';\nimport * as d3 from 'd3';\nimport * as qlog from '@quictools/qlog-schema';\nimport SequenceDiagramConfig, { SequenceDiagramConnection } from '../data/SequenceDiagramConfig';\nimport { VantagePointType, IEventConnectionStateUpdated, QUICFrameTypeName } from '@quictools/qlog-schema';\nimport { IQlogRawEvent, IQlogEventParser, TimeTrackingMethod } from '@/data/QlogEventParser';\n\ninterface VerticalRange {\n    svgGroup:HTMLOrSVGElement | undefined,\n    rendered: boolean,\n    yMin: number\n};\n\ninterface ExtentInfo {\n    rangeIndex: number,\n    start: number,\n    stop: number\n};\n\n\ninterface CoordinateTracker {\n    timestamp: number,\n    y: number\n}\n\ninterface Interval {\n    yMin: number,\n    yMax: number,\n    timeSkipped: number\n}\n\nexport interface EventPointer {\n    connectionIndex: number,\n    eventIndex: number\n};\n\nenum arrowTargetProperty {\n    left = \"leftTarget\",\n    right = \"rightTarget\",\n    lost = \"packetLost\",\n};\n\n\nexport class SequenceDiagramD3Renderer {\n\n    public containerID:string;\n    public svgID:string;\n    public rendering:boolean = false;\n\n    private svg!:d3.Selection<d3.BaseType, unknown, HTMLElement, any>;\n\n    private selectedTraces!:Array<SequenceDiagramConnection>; // traces we get from our parent originally, e.g., used for coupling with Vue\n    private traces!:Array<SequenceDiagramConnection>; // traces we actually work on, e.g., filtered, added with custom generated traces, etc.\n\n    private scrollHandler:((e:any) => void) | undefined = undefined;\n\n    private absoluteAggregatedStartTime!:number;\n    private renderedRanges!:Array<VerticalRange>;\n    private rangeHeight!:number;\n    private shortenedIntervals:Array<Interval> = new Array<Interval>();\n\n    private timeResolution = 1;\n\n    private dimensions:any = {};\n    \n    private bandWidth:number = 0; // width of an individual vertical trace timeline on screen\n\n    private frameTypeToColorLUT:Map<string, Array<string>> = new Map<string, Array<string>>();\n\n    private onEventClicked: (rawEvt: any, connection:QlogConnection, focusInfo:EventPointer) => void;\n\n    private ignoreEventName = \"ignoreseq\"; // needs to be lowercase!!\n\n    constructor(containerID:string, svgID:string, onEventClicked: (packet: any, extra: any) => void) {\n        this.containerID = containerID;\n        this.svgID = svgID;\n\n        this.onEventClicked = (rawEvt:any, connection:QlogConnection, focusInfo:EventPointer ) => { \n            \n            const allEvents = connection.getEvents();\n            let evt:IQlogEventParser|undefined = connection.parseEvent( rawEvt );\n\n            const metrics:Map<string, any> = new Map<string, any>();\n\n            if ( focusInfo ) {\n                this.createPrivateNamespace( rawEvt );\n                (rawEvt as any).qvis.sequencediagram.focusInfo = focusInfo;\n            }\n            \n            if ( evt.name === qlog.RecoveryEventType.metrics_updated ) {\n                // if we have metrics updated, we want to be able to show the state of -all- recovery metrics at that time, not just the updated ones\n                // for this, we start from the start of the events and aggregate all into a dictionary of values to show them \n                evt = undefined; // to make sure we're not tempted to re-use this here, as we shouldn't, because of how .parseEvent() works\n\n                for ( const candidateRaw of allEvents ) {\n\n                    const candidate = connection.parseEvent( candidateRaw );\n\n                    if ( candidate.name === qlog.RecoveryEventType.metrics_updated ) {\n                        for ( const metricName of Object.keys(candidate.data) ) {\n                            metrics.set( metricName, candidate.data[metricName] );\n                        }\n                    }\n\n                    if ( candidateRaw === rawEvt ) {\n                        break; // don't want to go further than the current metrics_updated\n                    }\n                }\n\n                onEventClicked( rawEvt, Object.fromEntries( metrics ) );\n            }\n            else {\n                onEventClicked(rawEvt, undefined);\n            }\n        }\n    }\n\n    public getTraces():Array<SequenceDiagramConnection> {\n        return this.traces;\n    }\n   \n    public async render(traces:Array<SequenceDiagramConnection>, timeResolution:number, focusOn:EventPointer|null = null ):Promise<boolean> {\n        if ( this.rendering ) {\n            return false;\n        }\n\n        console.log(\"SequenceDiagramD3Renderer:render\", traces.length, traces);\n\n        this.timeResolution = timeResolution;\n        this.selectedTraces = traces;\n        this.rendering = true;\n\n        // To make things performant enough, we don't render the full diagram at once\n        // We always render just parts of it at the same time\n        // this.setup prepares everything, calculates coordinates and relations between events etc.\n        // this.renderPartialExtents can then be called on scroll updates. It figures out which part of the SVG is visible and makes sure that part of the diagram is drawn.\n        const canContinue:boolean = this.setup(traces);\n\n        if ( !canContinue ) {\n            this.rendering = false;\n\n            return false;\n        }\n\n        await this.renderPartialExtents( focusOn );\n        this.rendering = false;\n\n        return true;\n    }\n\n    // runs once before each render. Used to bootstrap everything.\n    protected setup(tracesInput:Array<SequenceDiagramConnection>):boolean {\n\n        // 0. make sure the containers exist\n        // 1. make sure we have at least 2 traces to draw (sequence diagram doesn't make much sense with just one)\n        // 2. calculate the y coordinates for each event on the timelines. This can be done once and stored for future use\n        // 3. setup the SVG container and draw things like timelines\n        // 4. prepare data structures to keep scrolling state (what we've drawn already and what not yet)\n        // 5. setup event listeners so we can update the rendering when needed\n\n        // 0.\n        if ( document.getElementById(this.containerID) === undefined ){\n            console.error(\"SequenceDiagramD3Renderer:setup : container element not found, cannot render!\", this.containerID);\n\n            return false;\n        }\n\n        if ( document.getElementById(this.svgID) === undefined ){\n            console.error(\"SequenceDiagramD3Renderer:setup : svg element not found, cannot render!\", this.svgID);\n\n            return false;\n        }\n\n        // 1.\n        this.traces = new Array<SequenceDiagramConnection>();\n        // new array, because a) we might want to add a trace if there's only 1 and b) we might have invalid traces in there\n        for (const trace of tracesInput) {\n            if ( trace.connection.getEvents().length > 0 ){\n                this.traces.push( trace );\n            }\n        }\n\n        if ( this.traces.length === 0 ){\n            console.error(\"SequenceDiagramD3Renderer:setup : None of the selected traces have events in them, cannot render\");\n\n            return false;\n        }\n\n        // TODO: potentially do this outside? In SequenceDiagramRenderer? or maybe ConnectionConfigurator itself?\n        const timeBeforeCloning:number = performance.now();\n        this.ensureMoreThanOneTrace();\n\n        for ( const trace of this.traces ){\n            trace.connection.setupLookupTable();\n        }\n\n        // 2. \n        this.dimensions = {\n            margin: {\n                top: 60,\n                bottom: 100,\n                left: 0,\n                right: 0,\n            },\n            width: 0, // total width, including margins\n            height: 0, // total height, including margin.top and margin.bottom\n\n            pixelsPerMillisecond: 20,\n            shortenIntervalsLongerThan: 120,\n        };\n\n        this.calculateTimeOffsets( this.traces );\n        this.dimensions.height = this.calculateCoordinates( this.traces );\n        this.calculateConnections();\n\n        // TODO: verify traces are left-to-right : i.e., arrows do not go UP!\n\n        // 3. \n        const container:HTMLElement = document.getElementById(this.containerID)!;\n\n        this.svg = d3.select(\"body\").select( \"#\" + this.svgID );\n        this.svg.selectAll(\"*\").remove();\n       \n        this.svg.attr(\"height\", this.dimensions.height);\n        // this is impacted by whether we have scrollbars or not, so we set height first before fetching this\n        this.dimensions.width = container.clientWidth;\n        this.svg.attr(\"width\", this.dimensions.width);\n        this.svg.attr(\"viewbox\", `0 0 ${this.dimensions.width} ${this.dimensions.height}`);\n        \n        // draw the vertical timelines \n        // we have multiple timelines next to each other in horizontal \"bands\"\n        this.bandWidth = (this.dimensions.width / this.traces.length);\n        for ( let i = 0; i < this.traces.length; ++i ){\n            const currentX =  this.bandWidth * i + (this.bandWidth * 0.5); // get center of the band\n            const trace = this.traces[i].connection;\n\n            this.svg.append('rect').attr(\"x\", currentX - 1).attr(\"y\", this.dimensions.margin.top).attr(\"width\", 2).attr(\"height\", this.dimensions.height).attr(\"fill\", \"black\");\n\n\n            let text = undefined;\n            if ( !trace.wasAutoGenerated && trace.parent.URL ) {\n\n                const link = document.createElementNS(\"http://www.w3.org/2000/svg\", \"a\");\n                // link.setAttribute('x', \"\" + currentX);\n                // link.setAttribute('y', \"\" + 20);\n                link.setAttribute(\"href\", \"\" + trace.parent.URL);\n                link.setAttribute(\"target\", \"_blank\");\n                link.style.textDecoration = \"underline\";\n    \n                (this.svg.node()! as HTMLElement).appendChild( link );\n    \n                \n                text = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n                text.setAttribute('x', \"\" + currentX);\n                text.setAttribute('y', \"\" + 20);\n                text.setAttribute('dominant-baseline', \"middle\");\n                text.setAttribute('text-anchor', \"middle\");\n                text.textContent = \"\" + trace.parent.URLshort;\n                link.appendChild( text );\n            }\n            else {\n                text = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n                text.setAttribute('x', \"\" + currentX);\n                text.setAttribute('y', \"\" + 20);\n                text.setAttribute('dominant-baseline', \"middle\");\n                text.setAttribute('text-anchor', \"middle\");\n                text.textContent = \"\" + ((trace.wasAutoGenerated) ?  \"GENERATED: \" : \"\" ) + trace.parent.filename;\n                (this.svg.node()! as HTMLElement).appendChild( text );\n            }\n\n\n            // (this.svg.node()! as HTMLElement).appendChild( text );\n            \n\n\n            let vantagePoint:VantagePointType | string = trace.vantagePoint.type;\n            if ( vantagePoint === qlog.VantagePointType.network ){\n                vantagePoint = \"\" + vantagePoint + \" : from \" + trace.vantagePoint.flow + \"'s viewpoint\";\n            }\n\n            text = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n            text.setAttribute('x', \"\" + currentX);\n            text.setAttribute('y', \"\" + 40);\n            text.setAttribute('dominant-baseline', \"middle\");\n            text.setAttribute('text-anchor', \"middle\");\n            text.textContent = \"\" + vantagePoint;\n            (this.svg.node()! as HTMLElement).appendChild( text );\n        }\n\n        for ( const interval of this.shortenedIntervals ){\n            for ( let i = 0; i < this.traces.length; ++i ){\n                let currentX =  this.bandWidth * i + (this.bandWidth * 0.5); // get center of the band\n    \n                // the outside of the trace\n                // dashed array doesn't have a background color, so make sure we draw it ourselves\n                this.svg.append('line') .attr(\"x1\", currentX).attr(\"x2\", currentX)\n                                        .attr(\"y1\", interval.yMin + this.dimensions.pixelsPerMillisecond).attr(\"y2\", interval.yMax - this.dimensions.pixelsPerMillisecond)\n                                        .attr(\"stroke\", \"white\").attr(\"stroke-width\", 4);\n                this.svg.append('line') .attr(\"x1\", currentX).attr(\"x2\", currentX)\n                                        .attr(\"y1\", interval.yMin + this.dimensions.pixelsPerMillisecond).attr(\"y2\", interval.yMax - this.dimensions.pixelsPerMillisecond)\n                                        .attr(\"stroke\", \"black\").attr(\"stroke-width\", 4).attr(\"stroke-dasharray\", 4);\n\n                // in between the two traces\n                if ( i !== this.traces.length - 1) {\n                    currentX = this.bandWidth * (i + 1);\n                    this.svg.append('line') .attr(\"x1\", currentX).attr(\"x2\", currentX)\n                                            .attr(\"y1\", interval.yMin + this.dimensions.pixelsPerMillisecond).attr(\"y2\", interval.yMax - this.dimensions.pixelsPerMillisecond)\n                                            .attr(\"stroke\", \"white\").attr(\"stroke-width\", 4);\n                    this.svg.append('line') .attr(\"x1\", currentX).attr(\"x2\", currentX)\n                                            .attr(\"y1\", interval.yMin + this.dimensions.pixelsPerMillisecond).attr(\"y2\", interval.yMax - this.dimensions.pixelsPerMillisecond)\n                                            .attr(\"stroke\", \"black\").attr(\"stroke-width\", 4).attr(\"stroke-dasharray\", 4);\n\n                    \n                    const text = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n                    text.setAttribute('class', \"timestamp\");\n                    text.setAttribute('x', \"\" + (currentX + (this.dimensions.pixelsPerMillisecond) ));\n                    text.setAttribute('y', \"\" + (interval.yMin + (interval.yMax - interval.yMin) / 2));\n                    text.setAttribute('dominant-baseline', \"middle\");\n                    text.textContent = `${(interval.timeSkipped / this.timeResolution).toFixed(2)}ms of inactivity`;\n                    (this.svg.node()! as HTMLElement).appendChild( text );   \n                }                                     \n\n            }\n        }\n\n        // 4.\n\n        // we want to keep track of which areas of the SVG we've drawn already (since we don't want to draw all at once and want to clear some afterwards)\n        // we divide the entire SVG in vertical \"ranges\" that are 1 screen height large, then for example make sure there are always at least 3 or 4 of them drawn\n        // In the scroll handler, we can use the rangeHeight to determine which of the ranges is currently \"in view\"\n        // Here, we just prepare the range structs for later use\n        this.rangeHeight = screen.height;\n        this.renderedRanges = new Array<VerticalRange>();\n\n        let currentRangeY = 0;\n        let currentRangeIndex = 0;\n        while ( currentRangeY < this.dimensions.height ){\n            this.renderedRanges[currentRangeIndex] = {\n                rendered: false,\n                svgGroup: undefined,\n                yMin: currentRangeY,\n            }\n\n            currentRangeY += this.rangeHeight;\n            ++currentRangeIndex;\n        }\n\n        // 5.\n        if ( this.scrollHandler !== undefined ){\n            window.removeEventListener(\"scroll\", this.scrollHandler);\n            this.scrollHandler = undefined;\n        }\n\n        // scroll events are fired very quickly sometimes, don't want to try and render for each of them\n        // we only fire on each 5th event but also add a timeout (typical \"debounce\"-alike) to make sure the final event gets used\n        let scrollEventCount:number = 0;\n        let scrollTimer:number | undefined = undefined;\n        this.scrollHandler = (e) => {\n           \n           const execute = () => {\n               scrollTimer = undefined;\n               this.renderPartialExtents();\n           };\n\n           clearTimeout( scrollTimer );\n           scrollTimer = setTimeout( execute, 250 ); // 250 ms\n\n           ++scrollEventCount;\n           if ( scrollEventCount % 5 === 0 ){ // 5 = magic number, from experimental experience in chrome, very scientific\n               scrollEventCount = 0;\n               clearTimeout( scrollTimer );\n               execute();\n           } \n       }\n\n        window.addEventListener('scroll', this.scrollHandler);\n\n        // TODO: also couple to window resize events? That should possibly trigger a full re-render, since the SVG can have changed width\n\n        return true;\n    }\n\n    protected ensureMoreThanOneTrace() {\n\n        if ( this.traces.length > 1 ){\n\n            const originalCount = this.traces.length;\n\n            // there can be several traces, but they might be the same, which we can't really handle\n            // so: filter duplicates first\n            this.traces = this.traces.filter((v,i) => this.traces.indexOf(v) === i); // keeps the first occurence, since indexOf always returns first index\n\n            if ( this.traces.length !== originalCount ) {\n\n                // Vue reactivity is a weird beast\n                // setting this.selectedTraces = this.traces will NOT work, so we have to manually pop and push everything\n                // TODO: simpler to just pass the config around... let's just do that, shall we? \n                while ( this.selectedTraces.length > 0 ) {\n                    this.selectedTraces.pop();\n                }\n\n                for ( const trace of this.traces ){\n                    this.selectedTraces.push( trace );\n                }\n                // this.selectedTraces = this.traces.slice(); // update selection UI\n            }\n\n            if ( this.traces.length  > 1 ) {\n                return;\n            }\n        }\n\n        // if ( this.traces[0].connection.parent.getConnections().length > 1 ){\n        //     // traces.length is currently just 1, so we need see if we can add its next sibling automatically as trace here \n        //     const nextSibling = this.traces[0].connection.parent.getConnections()[1];\n\n        //     // e.g., if we load a list of all tests for a single domain from quic-tracker, they will all have the client perspective and we want to generate servers for them\n        //     if ( nextSibling.getVantagePointPerspective() !== this.traces[0].connection.getVantagePointPerspective() ){\n        //         this.traces.push( SequenceDiagramConfig.createConnectionWithTimeoffset(nextSibling) );\n        //         this.selectedTraces.push( SequenceDiagramConfig.createConnectionWithTimeoffset(nextSibling) );\n\n        //         return;\n        //     }\n        // }\n\n        console.log(\"Considering reusing a previously generated sibling\", this.traces[0].connection);\n\n        // at this point, there is only 1 trace in the list\n        const originalTrace = this.traces[0].connection;\n\n        // we've already generated a trace for this one, so re-use it (otherwise, we might end up creating it again, e.g., in a quic-tracker list use case)\n        if ( (originalTrace as any).qvis && (originalTrace as any).qvis.sequencediagram.generatedSibling ) {\n\n            const sibling = (originalTrace as any).qvis.sequencediagram.generatedSibling;\n\n            this.traces.push( SequenceDiagramConfig.createConnectionWithTimeoffset(sibling) );\n            this.selectedTraces.push( SequenceDiagramConfig.createConnectionWithTimeoffset(sibling) );\n\n            return;\n        }\n\n        // we cannot just visualize a single trace on a sequence diagram...\n        // so we copy the trace and pretend like the copy is one from the other side\n        const newTrace = originalTrace.clone();\n        newTrace.title = \"Simulated, autogenerated trace : \" + newTrace.title;\n        newTrace.description = \"Simulated, autogenerated trace : \" + newTrace.description;\n        newTrace.vantagePoint.name = \"GENERATED\";\n        newTrace.wasAutoGenerated = true;\n\n        // we have a single trace, we need to copy it so we can simulate client + server\n        if ( originalTrace.vantagePoint.type === qlog.VantagePointType.server || \n             originalTrace.vantagePoint.flow === qlog.VantagePointType.server ){\n            newTrace.vantagePoint.type = qlog.VantagePointType.client;\n            newTrace.vantagePoint.flow = qlog.VantagePointType.unknown;\n            this.traces.unshift( SequenceDiagramConfig.createConnectionWithTimeoffset(newTrace) );\n        }\n        else if ( originalTrace.vantagePoint.type === qlog.VantagePointType.client || \n                  originalTrace.vantagePoint.flow === qlog.VantagePointType.client ){\n            newTrace.vantagePoint.type = qlog.VantagePointType.server;\n            newTrace.vantagePoint.flow = qlog.VantagePointType.unknown;\n            this.traces.push( SequenceDiagramConfig.createConnectionWithTimeoffset(newTrace) );\n        }\n        else { // the vantagepoint is unknown... \n            \n            // it's either client or server\n            // we will try to determine this based on heuristics: \n            // server should have an INITIAL packet_received with packet nr. 0 before a packet_sent, client vice versa\n\n            // TODO: move this to the QlogLoader classes? or at least outside the renderer\n\n            originalTrace.setupLookupTable();\n            const sentEvents        = originalTrace.lookup( qlog.EventCategory.transport, qlog.TransportEventType.packet_sent );\n            const receivedEvents    = originalTrace.lookup( qlog.EventCategory.transport, qlog.TransportEventType.packet_received );\n\n            let firstInitialSent = undefined;\n            let firstInitialReceived = undefined;\n            for (const rawEvt of sentEvents){\n                const evt = originalTrace.parseEvent(rawEvt);\n                const data = evt.data as qlog.IEventPacket;\n\n                if ( data.packet_type === qlog.PacketType.initial && \n                     data.header && ( \"\" + data.header.packet_number === \"0\" ) ) {\n                        firstInitialSent = evt;\n                        break;\n                }\n            }\n\n            for (const rawEvt of receivedEvents){\n                const evt = originalTrace.parseEvent(rawEvt);\n                const data = evt.data as qlog.IEventPacket;\n                \n                if ( data.packet_type === qlog.PacketType.initial && \n                     data.header &&  ( \"\" + data.header.packet_number === \"0\" ) ) {\n                        firstInitialReceived = evt;\n                        break;\n                }\n            }\n\n            let guessedPerspective = qlog.VantagePointType.server; // server is a logical default, probably more of those available\n            if ( firstInitialSent && firstInitialReceived ) {\n                if ( firstInitialSent.absoluteTime < firstInitialReceived.absoluteTime ){\n                    guessedPerspective = qlog.VantagePointType.client;\n                }\n            }\n\n            originalTrace.vantagePoint.name = \"vantage point type was unknown, pretending it's \" + guessedPerspective;\n\n            newTrace.vantagePoint.type = (guessedPerspective === qlog.VantagePointType.client) ? qlog.VantagePointType.server : qlog.VantagePointType.client;\n            newTrace.vantagePoint.name = \"vantage point type was unknown, pretending it's \" + newTrace.vantagePoint.type;\n            newTrace.vantagePoint.flow = qlog.VantagePointType.unknown;\n\n            if ( newTrace.vantagePoint.type === qlog.VantagePointType.server ) {\n                this.traces.push( SequenceDiagramConfig.createConnectionWithTimeoffset(newTrace) );\n            }\n            else{\n                this.traces.unshift( SequenceDiagramConfig.createConnectionWithTimeoffset(newTrace) );\n            }\n        }\n\n        for ( const event of newTrace.getEvents() ){\n            const parsedEvt = newTrace.parseEvent(event);\n            const type = parsedEvt.name;\n            if ( type === qlog.TransportEventType.packet_sent ){\n                parsedEvt.name = qlog.TransportEventType.packet_received;\n            }\n            else if ( type === qlog.TransportEventType.packet_received ){\n                parsedEvt.name = qlog.TransportEventType.packet_sent;\n            } \n            else {\n                // we cannot observe anything from the \"other\" side besides what we received, so dismantle all of those events\n                parsedEvt.name = this.ignoreEventName;\n            }\n        }\n\n        this.createPrivateNamespace(originalTrace);\n        (originalTrace as any).qvis.sequencediagram.generatedSibling = newTrace;\n        this.createPrivateNamespace(newTrace);\n        (newTrace as any).qvis.sequencediagram.generatedSibling = originalTrace;\n\n        // deal with weird Vue Reactivity, see above\n        while ( this.selectedTraces.length > 0 ) {\n            this.selectedTraces.pop();\n        }\n        for ( const trace of this.traces ){\n            this.selectedTraces.push( trace );\n        }\n    }\n\n    protected createPrivateNamespace(obj:any):void {\n        if ( obj.qvis === undefined ) {\n            Object.defineProperty(obj, \"qvis\", { enumerable: false, value: {} });\n        }\n\n        if ( obj.qvis.sequencediagram === undefined ) {\n            obj.qvis.sequencediagram = {};\n        }\n    }\n\n    protected calculateTimeOffsets(traces:Array<SequenceDiagramConnection>):void {\n\n        // FIXME: add support for more than 2 traces!\n        if ( traces.length > 2){\n            console.warn(\"SequenceDiagramD3Renderer:calculateTimeOffsets : no time offsets auto-calculated for more than 2 traces. Use the UI to assign them manually if needed.\");\n\n            return;\n        }\n\n        // we might need to calculate custom time offsets in latency here\n        // however, there are a couple early outs\n        const clientConnection = traces[0];\n        const serverConnection = traces[1];\n\n        if ( serverConnection.connection.wasAutoGenerated || clientConnection.connection.wasAutoGenerated ){\n            return;\n        }\n\n        // was already set manually in the qlog file, don't want to override that!\n        if ( serverConnection.connection.getEventParser().timeOffset !== 0 ){\n            return;\n        }\n\n        // was manually overridden while viewing this file\n        if ( serverConnection.timeOffset ){\n            // make sure that the manual value from the UI is also persisted\n            this.createPrivateNamespace(serverConnection.connection);\n            (serverConnection.connection as any).qvis.sequencediagram.manualTimeOffset = serverConnection.timeOffset ;\n\n            return;\n        }\n\n        // was already calculated or manually overridden in a previous viewing of this file\n        if ( (serverConnection.connection as any).qvis && \n             (serverConnection.connection as any).qvis.sequencediagram && \n             (serverConnection.connection as any).qvis.sequencediagram.manualTimeOffset !== undefined ) {\n\n            serverConnection.timeOffset = (serverConnection.connection as any).qvis.sequencediagram.manualTimeOffset;\n\n            return;\n        }\n\n\n        // if one of the traces has relative_time set, but didn't specify a reference_time, we set the reference_time to 0 (because... what else)\n        // now, ref_time of 0 in epoch means 1970... so if we then loaded the opposite trace with correct timestamps... \n        // we'd have one end sending packets in 1970, the other in 2020. Highest measured latency yet!\n        // So we check for that here and set the reference_time of the \"incorrect\" trace of the \"correct\" one\n        if ( clientConnection.connection.getEventParser().getAbsoluteStartTime() === 0 && clientConnection.connection.getEventParser().getTimeTrackingMethod() === TimeTrackingMethod.RELATIVE_TIME ) {\n            console.error(\"SequenceDiagramD3Renderer:calculateTimeOffsets : Client had no reference_time set, trying to fix by using the server-side reftime. HERE BE DRAGONS!\");\n\n            const refTime = serverConnection.connection.getEventParser().getAbsoluteStartTime();\n            clientConnection.connection.getEventParser().setReferenceTime( refTime - 5 ); // -5 because the client should start earlier because it sends the initial\n        }\n        else if ( serverConnection.connection.getEventParser().getAbsoluteStartTime() === 0 && serverConnection.connection.getEventParser().getTimeTrackingMethod() === TimeTrackingMethod.RELATIVE_TIME ) {\n            console.error(\"SequenceDiagramD3Renderer:calculateTimeOffsets : Server had no reference_time set, trying to fix by using the client-side reftime. HERE BE DRAGONS!\");\n\n            const refTime = clientConnection.connection.getEventParser().getAbsoluteStartTime();\n            serverConnection.connection.getEventParser().setReferenceTime( refTime + 5 ); // +5 because the server should start later because it receives the client's initial\n        }\n\n        // So, concept: we have 1 trace from the client, 1 from the server\n        // both run on different, non-synchronized clocks and were started at different moments in time, so even relative time with offset 0 is not the same time. \n        // the only thing we know, is that the client initiates the connection and needs to wait for an answer from the server to continue \n        // (because the client always initiates the QUIC connection)\n        // as such, if we take the time between the client sending their INITIAL and receiving the first packet from the server,\n        // assuming there was no weird loss or jitter, we have an initial RTT estimate.\n        // However, some implementations might also log metric_update events, containing the rtt! so first look for those!\n        let latencyOneWay = Number.MIN_SAFE_INTEGER;\n\n        let smoothedBackup = 0; // only to be used if there are no actual latest_rtt's found (since smoothed isn't always correct from initial settingss)\n        const clientMetricUpdates = clientConnection.connection.lookup( qlog.EventCategory.recovery, qlog.RecoveryEventType.metrics_updated );\n        for ( const evt of clientMetricUpdates ){\n            const update = clientConnection.connection.parseEvent(evt).data as qlog.IEventMetricsUpdated;\n            if ( update.latest_rtt ){\n                latencyOneWay = update.latest_rtt / 2;\n            }\n            else if ( update.smoothed_rtt ){\n                smoothedBackup = update.smoothed_rtt / 2;\n            }\n\n            if ( latencyOneWay !== Number.MIN_SAFE_INTEGER ) {\n                latencyOneWay = clientConnection.connection.getEventParser().timeToMilliseconds(latencyOneWay); // latencies could be in microseconds in the events, convert them here\n                break;\n            }\n        }\n\n        if ( latencyOneWay === Number.MIN_SAFE_INTEGER && smoothedBackup !== 0 ) {\n            latencyOneWay = smoothedBackup;\n        }\n\n        if ( latencyOneWay === Number.MIN_SAFE_INTEGER ){\n\n            smoothedBackup = 0;\n            const serverMetricUpdates = serverConnection.connection.lookup( qlog.EventCategory.recovery, qlog.RecoveryEventType.metrics_updated );\n            for ( const evt of serverMetricUpdates ){ \n                const update = serverConnection.connection.parseEvent(evt).data as qlog.IEventMetricsUpdated;\n                if ( update.latest_rtt ){\n                    latencyOneWay = update.latest_rtt / 2;\n                }\n                else if ( update.smoothed_rtt ){\n                    smoothedBackup = update.smoothed_rtt / 2;\n                }\n\n                if ( latencyOneWay !== Number.MIN_SAFE_INTEGER ) {\n                    latencyOneWay = serverConnection.connection.getEventParser().timeToMilliseconds(latencyOneWay); // latencies could be in microseconds in the events, convert them here\n                    break;\n                }\n            }\n\n            if ( latencyOneWay === Number.MIN_SAFE_INTEGER && smoothedBackup !== 0 ) {\n                latencyOneWay = smoothedBackup;\n            }\n        }\n\n        // the metrics-based approach works, but can be flaky if there was loss (e.g., client initial is lost, needs to retransmit but the lost one is in the trace)\n        // then the server's initialReceived would be in between client initial 0 and 1 due to that offset, instead of after initial 1\n        // so, we also check for the actual initials still here\n        // start by looking for the first initial the server got and work backwards from there\n\n        let initialSent:IQlogRawEvent|undefined = undefined;\n        let initialReceived:IQlogRawEvent|undefined = undefined;\n        let serverInitialReceived:IQlogRawEvent|undefined = undefined;\n\n        let firstInitialReceivedPN = \"0\";\n\n        for ( const rawEvt of serverConnection.connection.getEvents() ) {\n            const evt = serverConnection.connection.parseEvent( rawEvt );\n\n            if ( evt.name === qlog.TransportEventType.packet_received &&\n                evt.data.packet_type === qlog.PacketType.initial && evt.data.header && evt.data.header.packet_number !== undefined ) {\n                    serverInitialReceived = rawEvt;\n\n                    firstInitialReceivedPN = \"\" + evt.data.header.packet_number; // e.g., if client inital 0 and 1 were lost, this should be 2\n            }\n\n            if ( serverInitialReceived ) {\n                break;\n            }\n        }\n\n        for ( const rawEvt of clientConnection.connection.getEvents() ) {\n            const evt = clientConnection.connection.parseEvent( rawEvt );\n\n            if ( evt.name === qlog.TransportEventType.packet_sent &&\n                    evt.data.packet_type === qlog.PacketType.initial && \n                    evt.data.header && ( \"\" + evt.data.header.packet_number === firstInitialReceivedPN ) ) {\n                    initialSent = rawEvt;\n                    // continue;\n            }\n\n            // the server's initial could also be lost... but then we'd need to look for retransmits of that etc. which is above my level of enthousiasm at the moment\n            // so: just use the first one we've received from the server. Could be too high then: bad luck. \n            if ( evt.name === qlog.TransportEventType.packet_received &&\n                evt.data.packet_type === qlog.PacketType.initial && \n                evt.data.header ) { // && ( \"\" + evt.data.header.packet_number === \"0\" ) ) { \n                    initialReceived = rawEvt;\n            }\n\n            if ( initialSent && initialReceived ) {\n                break;\n            }\n        }\n\n        if (initialSent && initialReceived && serverInitialReceived){\n            if (latencyOneWay === Number.MIN_SAFE_INTEGER ){\n                // only if wasn't derived from metric_updates. We assume those are always correct\n                latencyOneWay = (clientConnection.connection.parseEvent(initialReceived).absoluteTime - clientConnection.connection.parseEvent(initialSent).absoluteTime) / 2;\n                if (latencyOneWay <= 0 ){\n                    console.error(\"SequenceDiagramD3Renderer:calculateTimeOffset : initial received is earlier than sent! \", latencyOneWay);\n\n                    return;\n                }\n            }\n\n            // so, we now know at what time we would like the serverInitialReceived to have happened (clientInitialSent + latencyOneWay)\n            // so we see where it is right now, then offset by that\n            // NOTE: if the two clocks are not in sync globally, this might still be off a bit, but nothing we can do about that automagically\n            const serverReceiveTime = serverConnection.connection.parseEvent(serverInitialReceived).absoluteTime;\n            const expectedServerReceiveTime = clientConnection.connection.parseEvent(initialSent).absoluteTime + latencyOneWay;\n            if ( serverReceiveTime > expectedServerReceiveTime ){\n                latencyOneWay = serverReceiveTime - expectedServerReceiveTime;\n            }\n            else {\n                latencyOneWay = expectedServerReceiveTime - serverReceiveTime;\n            }\n        }\n        else if (latencyOneWay !== Number.MIN_SAFE_INTEGER) {\n            // we can't accurately calculate the actual offset just from the metric_updates, but it's all we have in the world...\n            console.log(\"SequenceDiagramD3Renderer:calculateTimeOffset: calculating probable RTT from metrics_updated events because initials couldn't be properly correlated (was there loss?)\", \n                            latencyOneWay, initialSent, serverInitialReceived, initialReceived );\n            // latencyOneWay = Number.MIN_SAFE_INTEGER;\n        }\n\n        if (latencyOneWay === Number.MIN_SAFE_INTEGER ) {\n            return;\n        }\n\n        console.log(\"SequenceDiagramD3Renderer:calculateTimeOffset : offset determined at \", latencyOneWay);\n        // this forces update of the UI, but this value is not persisted when changing connections \n        // (e.g., changing back to this one later resets the .timeOffset value due to the current implementation)\n        serverConnection.timeOffset = latencyOneWay;\n        // so... we also keep the timeoffset in our local data so we can use that when we come back to it\n        this.createPrivateNamespace(serverConnection.connection);\n        (serverConnection.connection as any).qvis.sequencediagram.manualTimeOffset = latencyOneWay;\n    }\n\n    protected calculateCoordinates(traces:Array<SequenceDiagramConnection>):number {\n\n        const pixelsPerMillisecond = this.dimensions.pixelsPerMillisecond;\n\n        // we have n traces, each with their own timestamped events\n        // we want to map these on a single conceptual sequence diagram, so that the same timestamps line up correctly on the y-axis, but still have a single vertical timeline per-trace\n        // we also want to cut out long periods of inactivity and prevent overlaps (e.g., for many packets at the same timestamp)\n        // To do this, we have to calculate the y-coordinates as we go, accumulting to prevent overlaps, skipping large idle periods and keeping things in-sync between traces\n        // the simplest way to do this would be to merge all the traces into 1 big event log, ordered by timestamp\n        // However, since the traces can get quite big, we don't want to do this, as it would use -a lot- of memory\n        // So instead we perform a naive online k-way merge (so without actually moving to new memory) to process the events in their timestamp order\n        // https://en.wikipedia.org/wiki/K-way_merge_algorithm\n        const heads:Array<number> = new Array<number>( traces.length ).fill(0); // points to the current index of each trace we're looking at\n        const trackers:Array< CoordinateTracker > = new Array<CoordinateTracker>();\n\n        // we need to compare / draw timestamps on a single, absolute timeline (mostly: unix timestamps)\n        // However, we don't want to render our times as unix timestamps, as that's not very nice to look at\n        // So, we figure out the start of our \"relative\" timline, which is the time the earliest of our traces starts\n        // That is then time \"0\" and all the rest is shown relative to this. This time \"0\" is the absoluteAggregatedStartTime\n        this.absoluteAggregatedStartTime = Number.MAX_VALUE;\n\n        for ( const trace of traces ){\n            // a. initiate trackers\n            const tracker:CoordinateTracker = {\n                timestamp: 0,\n                y: 0,\n            }\n            trackers.push( tracker );\n\n            // b. calculate absolute starting time\n            // separate loop would be cleaner, but less performant ;)\n            this.absoluteAggregatedStartTime = Math.min( this.absoluteAggregatedStartTime, trace.connection.getEventParser().getAbsoluteStartTime() );\n        }\n\n        let done = false;\n        let doneCount = 0;\n\n        let maxY = 0;\n\n        let currentTimestampUnderConsideration:number = -1;\n        let currentY:number = this.dimensions.margin.top;\n        let inOverlapPreventionMode:boolean = false;\n        let previousMinimumTrace:number = 0; // only needed for overlap prevention\n\n        // normally, we do per 1 ms. If we have sub-ms latencies, need more resolution, so up this value. 1000 means microseconds, 1 means milliseconds (default)\n        const timeResolution = this.timeResolution;\n        this.absoluteAggregatedStartTime *= timeResolution;\n\n        this.shortenedIntervals = new Array<Interval>();\n\n        while ( !done ) {\n            let currentMinimumTrace:number = -1;\n            let currentMinimumTime:number = Number.MAX_VALUE;\n            let currentMinimumEvent:any;\n\n            for ( let t = 0; t < traces.length; ++t ){\n                if ( heads[t] === -1 ) { // means that array has been processed completely\n                    continue;\n                }\n\n                const trace = traces[t].connection;\n                const timeOffset = traces[t].timeOffset;\n\n                const evt = trace.getEvents()[ heads[t] ];\n                const time = (trace.parseEvent(evt).absoluteTime * timeResolution) - this.absoluteAggregatedStartTime + (timeOffset * timeResolution); // timeWithCustomOffset(timeOffset);\n\n                (evt as any).timeText = \"\" + time.toFixed(2);\n\n                // < instead of <= so we always favor rendering a single trace as long as possible before switching to the next. \n                // Important for overlap prevention.\n                if ( time < currentMinimumTime ){ \n                    currentMinimumTrace = t;\n                    currentMinimumTime = time;\n                    currentMinimumEvent = evt;\n                }\n            }\n\n            // goals:\n            // 1. prevent long stretches of empty vertical space : replace those with shorter parts\n            //  -> need to detect when these happen and adjust accordingly\n            //  -> because we look for the minimum across traces each time, this is easy: if there is too large a margin between the new and old, everything is shifted down\n            // 2. prevent overlapping of events on the same timeline (can overlap horizontally in different timelines)\n            //  -> need to both keep track of overlaps on the same timeline, and make sure all timelines shift down when one of them does \n            //  -> this is more involved and requires separate tracking structs per-timeline (\"trackers\")\n\n            // need to keep a running total per-timeline: (lastTimestamp + lastActualY)\n            //  -> currentTimestamp - lastTimestamp is then what we use for our logic\n            //  -> lastActualY + (timestampDiff * pixelsPerMilliSecond) is then what we need\n            //  -> if we then skip a range, we need to not just do timeStampDiff * pixelsPerMillisecond, but apply a scaling factor to that\n            //  -> if we then have overlap prevention, we keep timestamp the same, update only lastActualY. \n            //          The moment we have a new timestamp, we make all lastActualY's the same (and also timestamps?)\n\n            // we render in milliseconds, so the overlap is on millisecond resolution\n            // however, the times are floats, so we need to round them\n            const currentTimeBucket = Math.floor( currentMinimumTime );\n\n            // 2. prevent overlaps\n            // Example of what can happen:\n            // | 105            | 105           |           | 105   \n            // | 105            |               |           | 105   \n            // | 105            |               |           | 105   \n            // | 105            |               |           |       \n            // | 105            |               |           |       \n            // 4 timelines, of which 3 have events all at timeBucket 105\n            // we cannot just render all the 105 events from trace 1, then those of 2, etc.\n            // so in this case, we need to keep track when we started the overlaps (tracker.y)\n            // then render all events of the 1st trace. When that's done, we render those of trace 2, etc.\n            // setting currentY to the currentMinimumTrace's tracked Y ensures that we \"reset\" to the y where the overlaps began for each trace in turn\n            // then, when timestamp > 105 starts, we exit this mode and just use the maximum of the tracked Y's as new currentY \n            // (in this case the one for the 1st trace)\n            if ( currentTimeBucket === currentTimestampUnderConsideration ){\n\n                // 2 options:\n                //  1) either this is the first and we need to initiate the trackers\n                //  2) or we're in a stretch of overlaps and need to continue;\n                \n                // 1)\n                if ( !inOverlapPreventionMode ) {\n                    inOverlapPreventionMode = true;\n\n\n                    // problem: when we get here, it's basically the 2nd event in the same timebucket\n                    // we've already drawn the 1st event at currentY\n                    // so if we now set all tracks to currentY and then do + pixelsPerMillisecond on all (see below), the 1st track will be \"one ahead\" of the rest\n                    // so, make sure the other lines \"undo\" that first increment here \n                    // NOTE: I'm sure there's a cleaner way of doing this, but it's not coming to monday-morning-me\n                    for ( let t = 0; t < trackers.length; ++t ){\n                        if ( t !== previousMinimumTrace ){\n                            trackers[t].y = currentY - pixelsPerMillisecond;\n                        }\n                        else {\n                            trackers[t].y = currentY;\n                        }\n                    }\n\n                    // for (const tracker of trackers) {\n                    //     tracker.y = currentY;\n                    // }\n\n                }\n\n                // 2)\n                // time remains the same, but we can have switched traces, so need to select the correct starting Y\n                trackers[currentMinimumTrace].y += pixelsPerMillisecond;\n                currentY = trackers[currentMinimumTrace].y;\n            }\n            else if ( inOverlapPreventionMode ){ \n\n                // we previously had overlaps, but now we're onto the next Timestamp bucket: need to update everyone + exit mode\n                inOverlapPreventionMode = false;\n\n                let maxTrackerY = 0;\n                for (const tracker of trackers) {\n                    if ( tracker.y > maxTrackerY ){\n                        maxTrackerY = tracker.y;\n                    }\n                }\n\n                currentY = maxTrackerY;\n            }\n\n            const timeDifference = (currentTimeBucket - currentTimestampUnderConsideration);\n\n            // 1. check for longer stretches on inactivity and compress them\n            // do this after 2., since otherwhise this offset can be overridden by exiting overlapPreventionMode\n            if ( timeDifference * pixelsPerMillisecond > this.dimensions.shortenIntervalsLongerThan ) { // max space of 120 pixels allowed\n                this.shortenedIntervals.push({\n                    yMin: currentY,\n                    yMax: currentY + this.dimensions.shortenIntervalsLongerThan,\n                    timeSkipped: currentTimeBucket - currentTimestampUnderConsideration,\n                });\n                \n                currentY += this.dimensions.shortenIntervalsLongerThan;\n            }\n            else {\n                // this is the default behaviour, just render the next event directly relative to the previous one\n                currentY += timeDifference * pixelsPerMillisecond;\n            }\n\n            \n\n            this.createPrivateNamespace(currentMinimumEvent);\n            (currentMinimumEvent as any).qvis.sequencediagram.y = currentY; // traces[currentMinimumTrace].parseEvent(currentMinimumEvent).time * pixelsPerMillisecond;\n\n            // console.log(\"Next event was : \", (currentMinimumEvent as any).qvis.sequencediagram.y, currentMinimumTrace, currentMinimumValue);\n\n            // prepare for next loop\n            currentTimestampUnderConsideration = currentTimeBucket;\n            previousMinimumTrace = currentMinimumTrace;\n\n            heads[ currentMinimumTrace ] += 1;\n            if ( heads[currentMinimumTrace] >= traces[currentMinimumTrace].connection.getEvents().length ) {\n                heads[ currentMinimumTrace ] = -1;\n                ++doneCount;\n            }\n\n            done = doneCount === traces.length;\n\n            maxY = currentY;\n        }\n\n        // let DEBUG_penultimateEvent = traces[0].getEvents()[ traces[0].getEvents().length - 1 ];\n        // let DEBUG_lastEvent = DEBUG_penultimateEvent.slice();\n        // this.createPrivateNamespace( DEBUG_lastEvent );\n        // (DEBUG_lastEvent as any).qvis.sequencediagram.y = (DEBUG_penultimateEvent as any).qvis.sequencediagram.y + 1000;\n        // traces[0].getEvents().push( DEBUG_lastEvent );\n        // maxY += 1000;\n\n\n        maxY += this.dimensions.margin.bottom; // give a bit of breathing room at the bottom of the diagram\n\n        return maxY;\n    }\n\n    protected calculateConnections() {\n        // we want to draw arrows between PACKET_* events \n        // arrow starts from PACKET_SENT and goes to PACKET_RECEIVED\n        // we do 2 passes: 1 from left to right (client to server), 1 from right to left (server to client)\n        // because we can have intermediate network-traces, we need to take into account their individual perspectives\n        // as such, we process in the two directions to be able to do that correctly\n\n        const connectEventLists = (metadataTargetProperty:arrowTargetProperty, start:QlogConnection, startEvents:Array<IQlogRawEvent>, end:QlogConnection, endEvents:Array<IQlogRawEvent>) => {\n\n            // start.parseEvent() looks up the eventparser using this.eventParser, which is a Vue ReactiveGetter, which is -slow-...\n            // so, create our own references to the parsers here, which is faster\n            const startParser = start.getEventParser();\n            const endParser   = end.getEventParser();\n\n            let DEBUG_packetLostCount = 0;\n\n            // for each of the events in our starting trace, we need to see if we can find an accompanying event in the ending trace\n            // however, the naive way of doing this is O(n * n), which turns out to be too slow for large traces\n            // so, we're going to use some domain knowledge and heuristics to speed this up\n            // We know all events are ordered by timestamp and that QUIC packet numbers are monotonically increasing\n            // So when looking for the counterpart for packet 5000, we -probably- don't need to start all the way from the bottom, or go to packet 15000\n            // We keep track of the previously found packet and look in 10% before and 10% after increments \n            // (if it's outside that, there is massive jitter anyway, and the use of this visualization is debatable)\n            // this approach allowed us to go from 7s to < 600ms for a 3.5MB trace\n            // TODO: speed up even more by skipping packet numbers that have a PACKET_LOST event\n\n            let lastFoundTargetIndex:number = 0;\n            const endEventsFraction:number = Math.min(1000, Math.max(200, Math.round(endEvents.length / 10))); // 10% each way, minimum of 200 events, max of 1000\n\n            for ( const rawevt of startEvents ){\n                const evt = startParser.load(rawevt).data as qlog.IEventPacketSent;\n                const metadata = (rawevt as any).qvis.sequencediagram; \n\n                if ( evt.header === undefined || evt.header.packet_number === undefined ){\n                    if ( evt.packet_type !== qlog.PacketType.version_negotiation && evt.packet_type !== qlog.PacketType.retry && (evt.packet_type as string) !== \"stateless_reset\" ){ // FIXME: after stateles reset is added to qlog proper\n                        console.error(\"SequenceDiagram:calculateConnections : event does not have the header.packet_number field, which is required\", evt);\n                    }\n                    continue;\n                }\n\n                metadata[arrowTargetProperty.right] = undefined; // could be set from a previous processing, which might no longer be correct now (e.g., new trace in the middle)\n                metadata[arrowTargetProperty.left]  = undefined;\n                // evt.header!.packet_number = \"DEBUG_FORCELOSS\";\n\n                const startCandidateIndex:number = Math.max( 0,                    lastFoundTargetIndex - endEventsFraction ); // go back 10% events, but not lower than 0\n                const endCandidateIndex:number   = Math.min( endEvents.length - 1, lastFoundTargetIndex + endEventsFraction ); // go forward 10% events, but not beyond the array length\n\n\n                let counterpartFound = false;\n                for ( let c = startCandidateIndex; c <= endCandidateIndex; ++c ) {\n                    // note : event can be either sent or received, but interfaces are the same, so doesn't matter atm\n                    // TODO: define separate interface for this in the qlog schema!\n                    const candidate = endParser.load( endEvents[c] ).data as qlog.IEventPacket;\n                    \n                    // need to check for .type as well to deal with different packet number spaces\n                    // some packets (like stateless resets) don't have a header or packet_number, so need to check for that\n                    if (candidate.packet_type === evt.packet_type && (candidate.header && evt.header) && (\"\" + candidate.header!.packet_number) === (\"\" + evt.header!.packet_number) ){\n                        metadata[metadataTargetProperty] = endEvents[c];\n                        lastFoundTargetIndex = c;\n                        counterpartFound = true;\n                        break;\n                    }\n                }\n\n                if ( !counterpartFound ) {\n                    // we suspect the packet is lost... \n                    // we COULD look for an explicit packet_lost event, but most implementations don't log those yet, so we need to be robust against those\n\n                    // NOTE: if we have only a single real trace loaded, we will never see lost events this way\n                    // to support that, we'd have to look at ACK gaps and out-of-order offsets in STREAM frames etc.\n                    // do-able (see the multiplexing diagram for example) but complex TODO\n\n                    // packet is assumed lost\n                    metadata[arrowTargetProperty.lost] = metadataTargetProperty; // store the direction in here, so we know where to draw the lost event to\n                }\n\n                if ( metadata[metadataTargetProperty] === undefined ){\n                    DEBUG_packetLostCount++;\n                }\n            }\n        };\n\n        const connectTraces = (metadataTargetProperty:arrowTargetProperty, start:QlogConnection, end:QlogConnection) => {\n\n            let startPerspective = start.vantagePoint.type;\n            let endPerspective = end.vantagePoint.type;\n\n            if ( startPerspective === qlog.VantagePointType.network ){\n                startPerspective = start.vantagePoint.flow as qlog.VantagePointType;\n            }\n            if ( endPerspective === qlog.VantagePointType.network ){\n                endPerspective = end.vantagePoint.flow as qlog.VantagePointType;\n            }\n\n            const startEventType = qlog.TransportEventType.packet_sent;\n            const endEventType = (startPerspective === endPerspective ) ? qlog.TransportEventType.packet_sent : qlog.TransportEventType.packet_received;\n\n            const startEvents = start.lookup( qlog.EventCategory.transport, startEventType );\n            const endEvents = end.lookup( qlog.EventCategory.transport, endEventType );\n\n            if ( startEvents.length === 0 ) { \n                console.error(\"SequenceDiagram:calculateConnections : trace \" + start.parent.filename + \":\" + startPerspective + \" did not have \" + startEventType + \" events, which are needed\");\n            }\n            if ( endEvents.length === 0 ) { \n                console.error(\"SequenceDiagram:calculateConnections : trace \" + end.parent.filename + \":\" + endPerspective + \" did not have \" + endEventType + \" events, which are needed\");\n            }\n\n            connectEventLists( metadataTargetProperty, start, startEvents, end, endEvents );\n        };\n\n        // packets flowing from client to server (left to right)\n        for ( let t = 0; t < this.traces.length - 1; ++t ){ // to -1, because rightmost is handled separately below\n            const start = this.traces[t];\n            const end   = this.traces[t + 1];\n\n            connectTraces(arrowTargetProperty.right, start.connection, end.connection);\n        }\n\n        // packets flowing from server to client (right to left)\n        for ( let t = this.traces.length - 1; t > 0; --t ) { // > 0 because leftmost was handled above\n            const start = this.traces[t];\n            const end   = this.traces[t - 1];\n\n            connectTraces(arrowTargetProperty.left, start.connection, end.connection);\n\n        }\n    }\n\n    protected async renderPartialExtents( focusOn:EventPointer|null = null ){\n\n        // About rendering performance:\n        // - simply using d3 directly and creating all the svg shapes in 1 big loop is very slow for large files (>10s)\n        //      - main bottlenecks are Major GCs (apparently .appendChild and .createElement creates tons of garbage...) but also \"recalculate style\" and \"layout\"\n        //      - adding elements to an svg element that is already in the DOM tree is slower than adding them to a sepate svg element (via d3.create) but not much\n        //      - adding elements in a time-sliced way (e.g., pause 100ms after every 2000 events) works, but we still see very high reflow/layout costs (>200ms per batch)\n        //      - using documentFragment does nothing (very similar to adding to an SVG that's not in the DOM tree yet)\n        // - doing svg elements without d3: is somewhat faster (say 8s -> 6s) and seems to induce less garbage collection: recommended\n        // - doing canvas : just 1s to draw and render everything... there's really no competition\n\n        // HOWEVER: canvas does not allow us to interact with individual elements directly and is not scalable\n        // while both these problems can be solved, it would take much time. \n        // As such, we reserve the canvas method for visualizations that really -need- to draw that many objects at once (e.g., the congestion diagram)\n        // For diagrams such as the sequence timelines, we will never be showing everything at once, so we can get by with drawing only the visible parts at a time\n        // The following implementation only draws the current viewport + the ones above and below it (for smoother scrolling)\n        // Next to this, it actively removes/un-renders old data. This is because on eof the main bottlenecks is the \"recalculate style\" and \"layout\" steps from the browser\n        // These scale super-linearly with the amount of objects in the DOM (not just the newly added ones) so we need to keep the total amount down to remove that bottleneck\n\n        // TODO: add a \"save to SVG\" option that -does- draw everything at once (at the cost of the user having to wait a while)\n\n        // 0. allow passing in of an even to focus on\n        if ( focusOn ) {\n            if ( this.traces.length > focusOn.connectionIndex ) {\n\n                // a. figure out the y offset for the event (stored in the metadata from calculateCoordinates)\n                const trace = this.traces[ focusOn.connectionIndex ];\n                const events = trace.connection.getEvents();\n                if ( events.length > focusOn.eventIndex ) {\n                    const evt = events[ focusOn.eventIndex ] as any;\n                    if ( evt.qvis && evt.qvis.sequencediagram && evt.qvis.sequencediagram.y ) {\n                        const targetY = evt.qvis.sequencediagram.y - 50; // - 50 to scroll back up a little bit so we are sure the event is \"in view\"\n                        console.log(\"SequenceDiagramD3Renderer:renderPartialExtents: focusing on event \", focusOn, targetY);\n\n                        window.scrollTo( 0, targetY ); // this will trigger the scrollHandler, which will again enter this function, so we exit it instead\n\n                        return;\n                    }\n                    else {\n                        console.error(\"SequenceDiagramD3Renderer:renderPartialExtents: couldn't focus on event, y unknown\", focusOn, this.traces);\n                    }\n                }\n                else {\n                    console.error(\"SequenceDiagramD3Renderer:renderPartialExtents: couldn't focus on event, eventIndex unknown\", focusOn, this.traces);\n                }\n            }\n            else {\n                console.error(\"SequenceDiagramD3Renderer:renderPartialExtents: couldn't focus on event, traceIndex unknown\", focusOn, this.traces);\n            }\n        }\n\n        // 1. determine which areas to render and which to un-render\n        // 2. un-render the proper ranges\n        // 3. render the proper ranges\n\n        const svg = this.svg;\n\n        // 1. \n\n        // want to calculate to the visible area of our svg\n        // this turned out to be quite non-trivial... there is no default API for this\n        // - would be easy of we're always filling the screen and our element is the only one: yMin = window.pageYOffset ( = basically scrollTop)\n        // - however, our element is in some container, so we need to calculate how far down we are (offsetFromDocumentTop) and take that into account.\n        //   -> this becomes interesting, because as we scroll, we scroll fully into view with our svg, \n        //      so that's why we use Math.max: as soon as the offset is negative, means we are fully into the viewport)\n        // - then, calculating yMax, we need to again take into account that we don't always fill the entire screen: cannot just do yMin + window.innerHeight\n        //   -> we use Math.max again: when svgRect.top becomes negative, we're screen filling, so we default to the full height\n        const svgRect = (svg.node()! as Element).getBoundingClientRect();\n        const offsetFromDocumentTop = svgRect.top - document.body.getBoundingClientRect().top;\n        const yMin = Math.max(0, window.pageYOffset - offsetFromDocumentTop);\n        const yMax = yMin + (window.innerHeight - Math.max(0, svgRect.top));\n\n        // see if we need to render ranges at this time\n        const currentRangeIndex = Math.floor(yMin / this.rangeHeight);\n        const fromRange         = Math.max(0,                              currentRangeIndex - 1);\n        const toRange           = Math.min(this.renderedRanges.length - 1, currentRangeIndex + 1);\n\n        // we need to go from ranges to actual [yMin, yMax] \"extents\" that we can render\n        const extentsToRender:Array< ExtentInfo > = new Array< ExtentInfo >();\n\n        // TODO: do we really need ExtentInfo? why not just store the stop in the range and keep array of ranges?\n        for ( let r = fromRange; r <= toRange; ++r ){\n            if ( !this.renderedRanges[r].rendered ){\n                extentsToRender.push( { rangeIndex: r, start: this.renderedRanges[r].yMin, stop: this.renderedRanges[r].yMin + this.rangeHeight - 1} ); // -1 to prevent overlap with next range\n            }\n        }\n\n        // see if we need to un-render ranges at this time\n        const rangeIndicesToRemove:Array< number > = new Array< number >();\n        // first determine the lower indices\n        let removeFrom:number = Math.max(0, fromRange - 500);\n        let removeTo:number   = Math.max(0, fromRange - 2); // leave 1 extra buffer of rendered range\n        if ( !(removeFrom === 0 && removeTo === 0) ){ // don't want to remove range 0 if it's the only one\n            for ( let r = removeFrom; r <= removeTo; ++r ){\n                if ( this.renderedRanges[r].rendered ){\n                    rangeIndicesToRemove.push( r );\n                }\n            }\n        }\n        // then the higher indices (when scrolling back up)\n        removeFrom  = Math.min(this.renderedRanges.length - 1, toRange + 2); // leave 1 extra buffer of rendered range\n        removeTo    = Math.min(this.renderedRanges.length - 1, toRange + 500);\n        if ( !(removeFrom === this.renderedRanges.length - 1 && removeTo === this.renderedRanges.length - 1) ){ // don't want to remove the last range if it's the only one\n            for ( let r = removeFrom; r <= removeTo; ++r ){\n                if ( this.renderedRanges[r].rendered ){\n                    rangeIndicesToRemove.push( r );\n                }\n            }\n        }\n\n        // 2. \n        if ( rangeIndicesToRemove.length >= 1 ){\n            // console.log(\"rangesToRemove\", currentRangeIndex, rangeIndicesToRemove);\n\n            // when rendering, we group all elements of a single range/extent together in 1 group (range.svgGroup)\n            for ( const rangeIndex of rangeIndicesToRemove ) {\n                const rangeSvgGroup = this.renderedRanges[rangeIndex].svgGroup;\n                // console.log(\"Removing\", rangeSvgGroup, (rangeSvgGroup as any).parentNode);\n\n                (rangeSvgGroup as any).parentNode.removeChild( rangeSvgGroup );\n\n                this.renderedRanges[rangeIndex].svgGroup = undefined;\n                this.renderedRanges[rangeIndex].rendered = false;\n            }\n        }\n\n        // nothing new to render, so we can stop\n        // can happen e.g., if user only scrolls small area\n        if ( extentsToRender.length === 0 ){\n            return;\n        }\n\n        // 3.\n\n\n        // console.log(\"Actual coordinates to render\", extentsToRender);\n\n        /*\n        const svg = d3.create(\"svg\").attr(\"id\", this.svgID);\n        svg.attr(\"xmlns\", \"http://www.w3.org/2000/svg\")\n            .attr(\"xmlns:xlink\", \"http://www.w3.org/1999/xlink\")\n            .attr(\"font-family\", \"Trebuchet MS\");\n        */\n\n        const pixelsPerMillisecond = this.dimensions.pixelsPerMillisecond;\n\n        const output = '';\n\n        // to help visualizing lost packets\n        // we put these outside of the traces-loop, because otherwise lost packets at the start of each extent would have 0\n        // seems like it would be rare enough not to matter, but turns out it isn't...\n        let previousYDiffLeft = 0;\n        let previousYDiffRight = 0;\n\n        for ( const extent of extentsToRender ){\n\n            const extentContainer = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n            this.renderedRanges[extent.rangeIndex].svgGroup = extentContainer;\n            this.renderedRanges[extent.rangeIndex].rendered = true;\n\n            for ( let i = 0; i < this.traces.length; ++i ){\n                const trace = this.traces[i];\n                const currentX = this.bandWidth * i + (this.bandWidth * 0.5); // center of the horizontal band\n\n                const events = trace.connection.getEvents();\n                \n                let currentY = 0;\n                let currentMetadata = undefined;\n                let currentEventId = 0;\n                for ( const rawEvt of events ){\n                    const evt = trace.connection.parseEvent(rawEvt);\n                    currentMetadata = (rawEvt as any).qvis.sequencediagram;\n                    currentY = currentMetadata.y;\n\n                    const focusInfo = { connectionIndex: i, eventIndex: currentEventId };\n                    currentEventId += 1;\n\n                    if ( currentY < extent.start ) {\n                        continue;\n                    }\n\n                    if ( currentY > extent.stop ) {\n                        break;\n                    }\n\n                    if ( evt.name === this.ignoreEventName ){\n                        continue;\n                    }\n\n                    // rect for each event on the vertical timelines\n                    const rect = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n                    const rectSize = pixelsPerMillisecond * 0.6;\n                    rect.setAttribute('x', \"\" + (currentX - rectSize / 2));\n                    rect.setAttribute('y', \"\" + (currentY - rectSize / 2)); // x and y are top left, we want it to be middle\n                    rect.setAttribute('width', \"\"  + (rectSize));\n                    rect.setAttribute('height', \"\" + (rectSize));\n                    rect.setAttribute('fill', 'green');\n                    rect.onclick = (evt_in) => this.onEventClicked( rawEvt, trace.connection, focusInfo );\n                    extentContainer.appendChild( rect );\n\n                    // timestamp for each event next to the rects\n                    let timeText:any = \"\";\n                    if ( (rawEvt as any).timeText !== undefined ){\n                        timeText = (rawEvt as any).timeText;\n                    }\n                    else {\n                        timeText = evt.absoluteTime - this.absoluteAggregatedStartTime + trace.timeOffset;\n                        timeText = timeText.toFixed(2);\n                    }\n\n                    const text = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n                    text.setAttribute('class', \"timestamp\");\n                    text.setAttribute('x', \"\" + (currentX - (pixelsPerMillisecond / 2) + ((i === 0) ? -pixelsPerMillisecond * 2 : pixelsPerMillisecond * 2)));\n                    text.setAttribute('y', \"\" + (currentY));\n                    text.setAttribute('dominant-baseline', \"middle\");\n                    text.setAttribute('text-anchor', (i === 0) ? \"end\" : \"start\");\n                    text.textContent = \"\" + timeText;\n                    extentContainer.appendChild( text );\n\n                    // TODO: now we're using left and right and client is always left, server always right\n                    // could make this more flexible if each event would also store their x-coordinate, rather than only y\n\n                    // full connecting arrows between events\n                    let target:any|undefined = undefined;\n                    let offsetMultiplier:number|undefined = undefined;\n                    let directionText:string|undefined = undefined;\n                    let directionColor:string|undefined = undefined;\n                    let packetLost:boolean = false;\n\n                    const colorRight = \"#0468cc\"; // blue\n                    const colorLeft = \"#a80f3a\"; // red\n\n                    if  (currentMetadata[ arrowTargetProperty.right ] ){\n                        offsetMultiplier = 1;\n                        target = (currentMetadata[ arrowTargetProperty.right ] as any).qvis.sequencediagram;\n                        directionText = \">\";\n                        directionColor = colorRight;\n\n                        previousYDiffRight = target.y - currentY; // top y = 0, so target should be larger than current\n                    }\n                    else if ( currentMetadata[ arrowTargetProperty.left ] ){\n                        offsetMultiplier = -1;\n                        target = (currentMetadata[ arrowTargetProperty.left ] as any).qvis.sequencediagram;\n                        directionText = \"<\";\n                        directionColor = colorLeft; // red\n\n                        previousYDiffLeft = target.y - currentY; // top y = 0, so target should be larger than current\n                    }\n                    else if ( currentMetadata[ arrowTargetProperty.lost ] !== undefined ) {\n                        // packet is lost: want to draw half an arrow\n\n                        // for this, need to figure out the halfway point, which is... a bit challenging?\n                        // we have to extrapolate the slant of the arrow (indicating the latency) from the previously seen latency in this direction\n                        // then interpolate along that slant to the middle\n\n                        if ( currentMetadata[ arrowTargetProperty.lost ] === arrowTargetProperty.right ) {\n                            // packet on the left was sent to the right\n                            offsetMultiplier = 0.5; // halfway arrow\n                            target = { y: currentY + (previousYDiffRight / 2) }; // halfway down what we previously went down (not perfect, but best approx. we can make?)\n\n                            directionText = \">\";\n                            directionColor = colorRight;\n                        }\n                        else {\n                            // packet on the right was sent to the left\n                            offsetMultiplier = -0.5; // halfway arrow\n                            target = { y: currentY + (previousYDiffLeft / 2) }; // halfway down what we previously went down (not perfect, but best approx. we can make?)\n\n                            directionText = \"<\";\n                            directionColor = colorLeft;\n                        }\n\n                        packetLost = true;\n\n                        // console.error(\"LOST PACKET DRAWN\", evt.data, previousYDiffLeft, previousYDiffRight, offsetMultiplier, target, currentX );\n                    }\n\n                    if ( offsetMultiplier ) { // if not, the current event does not have a connecting arrow\n                        let targetX = currentX + ( offsetMultiplier * this.bandWidth ); // either move 1 band to the right or left, depending on arrow direction\n                        targetX = targetX - (offsetMultiplier! * (pixelsPerMillisecond / 2)); // don't overlap with the event rect\n                        \n                        const line = document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\n                        line.setAttribute('x1', \"\" + (currentX));\n                        line.setAttribute('x2', \"\" + (targetX));\n                        line.setAttribute('y1', \"\" + (currentY)); \n                        line.setAttribute('y2', \"\" + (target.y));\n                        line.setAttribute('stroke-width', '2');\n                        line.setAttribute('stroke', directionColor!);\n                        extentContainer.appendChild( line );\n\n                        // polyline expects a list of x,y coordinates\n                        // we draw the arrow as normal (across the \"x-axis\" to the right: >), then rotate it along the connecting line\n\n                        const arrowX = targetX; \n                        let points = \"\";\n                        points +=  `${arrowX - 10},${target.y - 10}`; // top point\n                        points += ` ${arrowX     },${target.y     }`; // center point\n                        points += ` ${arrowX - 10},${target.y + 10}`; // bottom point\n\n                        // https://stackoverflow.com/questions/2676719/calculating-the-angle-between-the-line-defined-by-two-points\n                        const deltaY = currentY - target.y;\n                        const deltaX = targetX  - currentX;\n                        let angle = Math.atan2(deltaY, deltaX) * 180 / Math.PI; \n                        angle = -angle; // svg's rotate has the convention that clockwise rotations are positive angles, counterclockwise are negative. \n\n                        const arrow = document.createElementNS(\"http://www.w3.org/2000/svg\", \"polyline\");\n                        arrow.setAttribute('points', points);\n                        arrow.setAttribute('stroke-width', '4');\n                        arrow.setAttribute('stroke', directionColor!);\n                        arrow.setAttribute('fill', 'transparent');\n                        arrow.setAttribute('transform', `rotate(${angle},${arrowX},${target.y})`);\n                        extentContainer.appendChild( arrow );\n\n                        if ( packetLost ) {\n                            // draw an X next to the arrow\n                            const crossX = targetX + ((offsetMultiplier * 0.02) * this.bandWidth);\n                            const crossY = target.y + ((target.y - currentY) * 0.02);  \n\n                            // start top left, draw line. Then move bottom left, draw line\n                            let path = \"M\" + (crossX - 10) + \" \" + (crossY - 10);\n                            path += \" L\" + (crossX + 10) + \" \" + (crossY + 10);\n                            path += \" M\" + (crossX - 10) + \" \" + (crossY + 10);\n                            path += \" L\" + (crossX + 10) + \" \" + (crossY - 10);\n\n                            const cross = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n                            cross.setAttribute('d', path );\n                            cross.setAttribute('stroke-width', '4');\n                            cross.setAttribute('stroke', \"red\");\n                            cross.setAttribute('fill', 'transparent');\n                            cross.setAttribute('transform', `rotate(${angle},${crossX},${crossY})`);\n                            extentContainer.appendChild( cross );\n                        }\n\n                        // make the text 90% of the width of the arrow\n                        const textWidth = Math.sqrt( Math.pow( targetX - currentX, 2) + Math.pow( target.y - currentY, 2) ) * 0.9;\n                        const textHeight = pixelsPerMillisecond * 0.9; // bit smaller so we have some padding at least\n                        let textAngle = angle;\n                        // angle for the arrow can go to any value, for text we still want it to be readable (i.e., not upside down)\n                        // value of 90 is basically further than -90 on the goniometric circle, aka upside down\n                        // so if we go over that, compensate by swivveling to the other side\n                        // dito for -90\n                        if ( textAngle >= 90 ){\n                            textAngle -= 180;\n                        }\n                        else if ( textAngle <= -90 ){\n                            textAngle += 180;\n                        }\n\n                        const midwayX = (currentX + targetX ) / 2;\n                        const midwayY = (currentY + target.y) / 2;\n\n                        // getting different colored text spans next to each other in SVG requires -manual- positioning (yes, even though it's 2019)\n                        // as such, we take the dirty route and use foreignObject so we can use the HTML layouting engine\n                        const textForeign = document.createElementNS(\"http://www.w3.org/2000/svg\", \"foreignObject\");\n                        textForeign.setAttribute('x', \"\" + (midwayX));\n                        textForeign.setAttribute('y', \"\" + (midwayY)); \n                        textForeign.setAttribute('width',  \"\" + textWidth);\n                        textForeign.setAttribute('height', \"\" + textHeight); \n                        textForeign.style.overflow = \"visible\";\n                        // order of the transformation is important here!\n                        // we first rotate the top left corner of the text area around the midway point (which is also where it's positioned) so we get the correct rotation\n                        // then we translate the entire rect within this rotated coordinate space (doing it the other way around would translate in worldspace, not what we want)\n                        textForeign.setAttribute('transform', `rotate(${textAngle},${midwayX},${midwayY}) translate(${-textWidth / 2},${-textHeight - 3})`);  // \n\n                        const textContainer = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"div\");\n                        textContainer.style.width = \"\" + textWidth + \"px\";\n                        textContainer.style.textAlign = \"center\";\n\n                        if ( directionText === \"<\" ){\n                            const smallArrowSize = Math.floor(textHeight * 0.30);\n                            const directionSpan = document.createElement(\"span\");\n                            directionSpan.style.display = \"inline-block\";\n                            directionSpan.style.borderTop = `${smallArrowSize}px solid transparent`;\n                            directionSpan.style.borderBottom = `${smallArrowSize}px solid transparent`;\n                            directionSpan.style.borderRight = `${smallArrowSize}px solid ${directionColor}`;\n                            directionSpan.style.marginRight = \"1px\";\n                            textContainer.appendChild(directionSpan);\n                        }\n\n                        const textSpanFront = document.createElement(\"span\");\n                        textSpanFront.textContent = \"\" + this.packetTypeToString(evt.data.packet_type) + \" : \" + ( evt.data.header ? evt.data.header.packet_number : \"\" );\n                        textSpanFront.style.color = \"#383d41\"; // dark grey\n                        textSpanFront.style.backgroundColor = \"#d6d8db\"; // light grey\n                        textSpanFront.style.paddingLeft = \"5px\";\n                        textSpanFront.style.paddingRight = \"5px\";\n                        textSpanFront.style.border = \"1px white\";\n                        textSpanFront.style.borderStyle = \"none solid\";\n                        textSpanFront.style.fontSize = \"\" + ( Math.floor(textHeight * 0.8) ) + \"px\";\n                        textSpanFront.onclick = (evt_in) => this.onEventClicked(rawEvt, trace.connection, focusInfo);\n                        textContainer.appendChild(textSpanFront);\n\n                        if ( evt.data.frames ){\n\n                            let framesToRender:undefined | Array<any> = undefined;\n\n                            // in some cases, we have MANY frames in a single packet (e.g., some tests have 50+, if there are many ACK gaps it can also be dozens)\n                            // so, if there are more than 10 (and more than 5 of a particular type) we aggregate them into a single visual entity\n                            if ( evt.data.frames.length > 10 ) {\n\n                                const typeCounter:Map<QUICFrameTypeName, Array<any>> = new Map<QUICFrameTypeName, Array<any>>();\n\n                                // count how many of each type, because we only want to aggregate those of the same type\n                                for ( const frameRaw of evt.data.frames ) {\n                                    let frames = typeCounter.get( frameRaw.frame_type );\n                                    if ( !frames ) {\n                                        frames = new Array<any>();\n                                        typeCounter.set( frameRaw.frame_type, frames );\n                                    }\n\n                                    frames.push(frameRaw)\n                                }\n\n                                for ( const [frameTypeName,frames] of typeCounter.entries() ) {\n\n                                    if ( frames.length > 5 ) {\n                                        const textSpan = document.createElement(\"span\");\n                                        const [bgColor, textColor] = this.frameTypeToColor( frameTypeName );\n                                        textSpan.textContent = frames.length + \" \" + frameTypeName + \" frames (click for details)\";\n                                        textSpan.style.color = textColor;\n                                        textSpan.style.backgroundColor = bgColor;\n                                        textSpan.style.paddingLeft = \"5px\";\n                                        textSpan.style.paddingRight = \"5px\";\n                                        textSpan.style.border = \"1px white\";\n                                        textSpan.style.borderStyle = \"none solid\";\n                                        textSpan.style.fontSize = \"\" + ( Math.floor(textHeight * 0.8) ) + \"px\";\n                                        textSpan.onclick = (evt_in) => this.onEventClicked(rawEvt, trace.connection, focusInfo);\n                                        if ( directionText === \">\" ) {\n                                            textContainer.prepend(textSpan);\n                                        }\n                                        else {\n                                            textContainer.appendChild(textSpan);\n                                        }\n                                    }\n                                    else {\n                                        // not more than 5, we still want to render individual frames below\n                                        if ( !framesToRender ) {\n                                            framesToRender = new Array<any>();\n                                        }\n                                        \n                                        framesToRender.push( ...frames );\n                                    }\n                                }\n                            }\n                            else { // < 10 overall, just render each frame individually\n                                framesToRender = evt.data.frames;\n                            }\n                            \n                            if ( framesToRender ) {\n\n                                for ( const frameRaw of framesToRender ) {\n\n                                    if ( frameRaw.qvis && frameRaw.qvis.sequence && frameRaw.qvis.sequence.hide ) {\n                                        continue;\n                                    }\n\n                                    const frame = frameRaw as qlog.QuicFrame;\n\n                                    const textSpan = document.createElement(\"span\");\n                                    const [bgColor, textColor] = this.frameTypeToColor( frame.frame_type );\n                                    textSpan.textContent = this.frameToShortString( frame );\n                                    textSpan.style.color = textColor;\n                                    textSpan.style.backgroundColor = bgColor;\n                                    textSpan.style.paddingLeft = \"5px\";\n                                    textSpan.style.paddingRight = \"5px\";\n                                    textSpan.style.border = \"1px white\";\n                                    textSpan.style.borderStyle = \"none solid\";\n                                    textSpan.style.fontSize = \"\" + ( Math.floor(textHeight * 0.8) ) + \"px\";\n                                    textSpan.onclick = (evt_in) => this.onEventClicked(rawEvt, trace.connection, focusInfo);\n                                    if ( directionText === \">\" ) {\n                                        textContainer.prepend(textSpan);\n                                    }\n                                    else {\n                                        textContainer.appendChild(textSpan);\n                                    }\n                                }\n                            }\n                        }\n\n                        if ( directionText === \">\" ){\n                            const smallArrowSize = Math.floor(textHeight * 0.30);\n                            const directionSpan = document.createElement(\"span\");\n                            directionSpan.style.display = \"inline-block\";\n                            directionSpan.style.borderTop = `${smallArrowSize}px solid transparent`;\n                            directionSpan.style.borderBottom = `${smallArrowSize}px solid transparent`;\n                            directionSpan.style.borderLeft = `${smallArrowSize}px solid ${directionColor}`;\n                            directionSpan.style.marginLeft = \"1px\";\n                            textContainer.appendChild(directionSpan);\n                        }\n\n\n                        textForeign.appendChild( textContainer );\n                        extentContainer.appendChild( textForeign );\n\n\n\n                    }\n                    else if ( evt.name !== qlog.TransportEventType.packet_sent &&\n                              evt.name !== qlog.TransportEventType.packet_received ) {\n\n                        // if we get here, the event was not a packet_sent or packet_received event, so we want to show what it was on the side \n                        const sideOffset = (timeText.length * 1.3 * 11); // (pixelsPerMillisecond / 2) * (timeText.length * 1.75); // magic numbers, nothing logical about them\n                        // const text = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n                        // text.setAttribute('class', \"timestamp\");\n                        // text.setAttribute('x', \"\" + (currentX - (pixelsPerMillisecond / 2) + ((i === 0) ? -sideOffset : sideOffset)));\n                        // text.setAttribute('y', \"\" + (currentY));\n                        // text.setAttribute('dominant-baseline', \"bottom\");\n                        // text.setAttribute('text-anchor', (i === 0) ? \"end\" : \"start\");\n                        // text.textContent = \"\" + evt.name;\n                        // extentContainer.appendChild( text );\n\n                        let x = (currentX + (pixelsPerMillisecond / 2) + sideOffset);\n                        let width = ((this.bandWidth / 2) * 0.9) * 0.9; // without 0.9, was still too wide in some cases\n                        let align = \"left\";\n\n                        if ( i === 0 ){\n                            align = \"right\";\n                            width = ((this.bandWidth / 2) * 0.9) - sideOffset;\n                            x = (this.bandWidth / 2) * 0.05;\n                        }\n\n                        const textHeight = pixelsPerMillisecond * 0.9;\n\n                        const textForeign = document.createElementNS(\"http://www.w3.org/2000/svg\", \"foreignObject\");\n                        textForeign.setAttribute('x', \"\" + x);\n                        textForeign.setAttribute('y', \"\" + (currentY - (textHeight / 1.25))); // magic number\n                        textForeign.setAttribute('width',  \"\" + width);\n                        textForeign.setAttribute('height', \"\" + textHeight); \n                        textForeign.style.overflow = \"visible\";\n\n                        // on the left of the graph, we want to have our text overflowing to the LEFT instead of the right\n                        // this is a bit finicky, requiring a float: right inside of an encapsulating div\n                        const textContainerOuter = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"div\");\n                        textContainerOuter.style.width = \"\" + width;\n                        textContainerOuter.style.textAlign = align;\n\n                        // const textContainer = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"div\");\n                        // textContainer.style.cssFloat = (i === 0) ? \"right\" : \"left\";\n\n                        const textSpan = document.createElement(\"span\");\n                        const [bgColor, textColor] = this.eventTypeToColor( evt );\n                        textSpan.textContent = this.eventToShortString( evt );\n                        textSpan.style.color = textColor;\n                        textSpan.style.backgroundColor = bgColor;\n                        textSpan.style.paddingLeft = \"5px\";\n                        textSpan.style.paddingRight = \"5px\";\n                        textSpan.style.border = \"1px white\";\n                        textSpan.style.borderStyle = \"none solid\";\n                        // textSpan.style.cssFloat = \"right\";\n                        textSpan.style.fontSize = \"\" + ( Math.floor(textHeight * 0.8) ) + \"px\";\n                        textSpan.onclick = (evt_in) => this.onEventClicked(rawEvt, trace.connection, focusInfo);\n                        // textContainer.appendChild(textSpan);\n                        \n                        textContainerOuter.appendChild(textSpan);\n                        textForeign.appendChild( textContainerOuter );\n                        extentContainer.appendChild( textForeign );\n                    }\n                }\n            }\n\n            (svg.node()! as HTMLElement).appendChild( extentContainer );\n        }\n    \n        // const DEBUG_renderedRanges = this.renderedRanges.filter( (range) => range.rendered );\n        // console.log(\"Actually rendered ranges at this point: \", DEBUG_renderedRanges.length, DEBUG_renderedRanges);\n    }\n\n    protected frameTypeToColor( frameType:qlog.QUICFrameTypeName ) : Array<string>{\n\n        if ( this.frameTypeToColorLUT.size === 0 ){\n\n            this.frameTypeToColorLUT.set( qlog.QUICFrameTypeName.ack,       [\"#03ad25\", \"#FFFFFF\"] ); // green\n            this.frameTypeToColorLUT.set( qlog.QUICFrameTypeName.stream,    [\"#0468cc\", \"#FFFFFF\"] ); // blue\n            this.frameTypeToColorLUT.set( qlog.QUICFrameTypeName.crypto,    [\"#0468cc\", \"#FFFFFF\"] ); // blue\n\n            this.frameTypeToColorLUT.set( qlog.QUICFrameTypeName.padding,   [\"#ff69b4\", \"#FFFFFF\"] ); // pink\n\n            this.frameTypeToColorLUT.set( qlog.QUICFrameTypeName.connection_close,  [\"#a80f3a\", \"#FFFFFF\"] ); // dark red\n            this.frameTypeToColorLUT.set( qlog.QUICFrameTypeName.reset_stream,      [\"#a80f3a\", \"#FFFFFF\"] ); // dark red\n            this.frameTypeToColorLUT.set( qlog.QUICFrameTypeName.application_close, [\"#a80f3a\", \"#FFFFFF\"] ); // dark red\n            this.frameTypeToColorLUT.set( qlog.QUICFrameTypeName.stop_sending,      [\"#a80f3a\", \"#FFFFFF\"] ); // dark red\n\n            this.frameTypeToColorLUT.set( qlog.QUICFrameTypeName.new_connection_id,      [\"#068484\", \"#FFFFFF\"] ); // dark green\n            this.frameTypeToColorLUT.set( qlog.QUICFrameTypeName.retire_connection_id,   [\"#068484\", \"#FFFFFF\"] ); // dark green\n\n\n            this.frameTypeToColorLUT.set( qlog.QUICFrameTypeName.ping,              [\"#d6dd02\", \"#000000\"] ); // ugly yellow\n            this.frameTypeToColorLUT.set( qlog.QUICFrameTypeName.path_challenge,    [\"#d6dd02\", \"#000000\"] ); // ugly yellow\n            this.frameTypeToColorLUT.set( qlog.QUICFrameTypeName.path_response,     [\"#d6dd02\", \"#000000\"] ); // ugly yellow\n\n            this.frameTypeToColorLUT.set( qlog.QUICFrameTypeName.max_data,              [\"#5f0984\", \"#FFFFFF\"] ); // dark purple\n            this.frameTypeToColorLUT.set( qlog.QUICFrameTypeName.max_stream_data,       [\"#5f0984\", \"#FFFFFF\"] ); // dark purple\n            this.frameTypeToColorLUT.set( qlog.QUICFrameTypeName.max_streams,           [\"#5f0984\", \"#FFFFFF\"] ); // dark purple\n            this.frameTypeToColorLUT.set( qlog.QUICFrameTypeName.data_blocked,          [\"#5f0984\", \"#FFFFFF\"] ); // dark purple\n            this.frameTypeToColorLUT.set( qlog.QUICFrameTypeName.streams_blocked,       [\"#5f0984\", \"#FFFFFF\"] ); // dark purple\n            this.frameTypeToColorLUT.set( qlog.QUICFrameTypeName.stream_data_blocked,   [\"#5f0984\", \"#FFFFFF\"] ); // dark purple\n        }\n\n        if ( this.frameTypeToColorLUT.has( frameType ) ){\n            return this.frameTypeToColorLUT.get( frameType )!;\n        }\n        else {\n            return [\"#FF0000\", \"#FFFFFF\"];\n        }\n    }\n\n    protected frameToShortString( frame:qlog.QuicFrame ):string {\n        let output = \"\";\n        switch ( frame.frame_type ){\n            case qlog.QUICFrameTypeName.ack:\n                output = frame.frame_type + \" \";\n                if ( frame.acked_ranges ){\n                    const ranges = frame.acked_ranges;\n                    for ( let r = 0; r < ranges.length; ++r  ){\n\n                        const range = ranges[r];\n\n                        if ( (range as any).length === 1 ) {\n                            output += range[0];\n                        }\n                        else if ( range[0] !== range[1] ){\n                            output += range[0] + \"-\" + range[1];\n                        }\n                        else{\n                            output += range[0];\n                        }\n                        if ( r < ranges.length - 1 ){\n                            output += \",\"\n                        }\n                    }\n                }\n\n                return \"\" + output;\n                break;\n\n            case qlog.QUICFrameTypeName.stream:\n                return frame.frame_type + \" \" + frame.stream_id + ((frame.fin) ? \" FIN\" : \"\");\n                break;\n\n\n            case qlog.QUICFrameTypeName.connection_close:\n                output = frame.frame_type + \" \";\n                if (frame.error_code === qlog.TransportError.no_error || frame.error_code === qlog.ApplicationError.http_no_error || frame.error_code === 0) {\n                    output += \": clean\";\n                }\n                else{\n                    output += frame.error_code + \" : \" + frame.reason;\n                }\n                \n                return output;\n                break;\n\n            case qlog.QUICFrameTypeName.max_stream_data:\n                if ( frame.maximum && frame.stream_id ) {\n                    return \"max data \" + frame.maximum + \" (stream \" + frame.stream_id + \")\";\n                }\n                else {\n                    return \"\" + qlog.QUICFrameTypeName.max_stream_data;\n                }\n                break;\n            \n\n            case qlog.QUICFrameTypeName.max_data:\n                if ( frame.maximum ) {\n                    return \"max data \" + frame.maximum;\n                }\n                else {\n                    return \"\" + qlog.QUICFrameTypeName.max_data;\n                }\n                break;\n\n\n            case qlog.QUICFrameTypeName.max_streams:\n                if ( frame.maximum && frame.stream_type ) {\n                    return \"max \" + frame.maximum + \" \" + frame.stream_type + \" streams\";\n                }\n                else {\n                    return \"\" + qlog.QUICFrameTypeName.max_streams;\n                }\n                break;\n            \n            case qlog.QUICFrameTypeName.streams_blocked:\n                if ( frame.limit && frame.stream_type ) {\n                    return \"blocked at \" + frame.limit + \" \" + frame.stream_type + \" streams\";\n                }\n                else {\n                    return \"\" + qlog.QUICFrameTypeName.streams_blocked;\n                }\n                break;\n            \n            case qlog.QUICFrameTypeName.stream_data_blocked:\n                if ( frame.limit && frame.stream_id ) {\n                    return \"stream \" + frame.stream_id + \"blocked at \" + frame.limit;\n                }\n                else {\n                    return \"\" + qlog.QUICFrameTypeName.stream_data_blocked;\n                }\n                break;\n            \n            case qlog.QUICFrameTypeName.data_blocked:\n                if ( frame.limit ) {\n                    return \"connection blocked at \" + frame.limit;\n                }\n                else {\n                    return \"\" + qlog.QUICFrameTypeName.data_blocked;\n                }\n                break;\n\n            default:\n                return frame.frame_type;\n                break;\n        }\n    }\n\n    protected eventTypeToColor( evt:IQlogEventParser ) : Array<string> {\n\n        if ( evt.name === qlog.ConnectivityEventType.connection_id_updated ){\n            return this.frameTypeToColor( qlog.QUICFrameTypeName.new_connection_id );\n        }\n        else if ( evt.name === qlog.ConnectivityEventType.spin_bit_updated ){\n            return this.frameTypeToColor( qlog.QUICFrameTypeName.ping );\n        }\n        else if ( evt.name === qlog.ConnectivityEventType.connection_state_updated ){\n            const csuEvent = evt.data as IEventConnectionStateUpdated;\n\n            if ( csuEvent.new === qlog.ConnectionState.closed || csuEvent.new === qlog.ConnectionState.draining ) {\n                return this.frameTypeToColor( qlog.QUICFrameTypeName.connection_close );\n            }\n        }\n        else if ( evt.name === qlog.RecoveryEventType.metrics_updated ||\n                  evt.name === qlog.TransportEventType.parameters_set ||\n                  evt.name === qlog.RecoveryEventType.parameters_set ||\n                  evt.name === qlog.HTTP3EventType.parameters_set || \n                  evt.name === \"loss_timer_updated\" ){ // FIXME: properly link to qlog schema once that's been updated\n            return this.frameTypeToColor( qlog.QUICFrameTypeName.max_data );\n        }\n        else if ( evt.name === qlog.HTTP3EventType.frame_created ||\n                  evt.name === qlog.HTTP3EventType.frame_parsed ){\n            return this.frameTypeToColor( qlog.QUICFrameTypeName.stream );\n        }\n        else if ( evt.name === qlog.TransportEventType.datagrams_sent ||\n                  evt.name === qlog.TransportEventType.datagrams_received ){\n            return [\"#FFFFFF\", \"#000000\"];\n        }\n        else if ( evt.category === \"error\" ) {\n            return [\"#FF0000\", \"#000000\"];\n        }\n        else if ( evt.category === \"warning\" || evt.category === \"simulation\" ) {\n            return [\"#FFA500\", \"#000000\"]; // orange\n        }\n        else if ( evt.category === \"debug\" || evt.category === \"info\" || evt.category === \"verbose\" ) {\n            return [\"#D3D3D3\", \"#000000\"]; // lightgrey\n        }\n        \n        return [\"#FF0000\", \"#FFFFFF\"];\n    }\n\n    protected eventToShortString( evt:IQlogEventParser ) : string {\n        \n        let output = \"\";\n\n        switch ( evt.name ){\n\n            case qlog.ConnectivityEventType.spin_bit_updated:\n                return \"Spin \" + ((evt.data as qlog.IEventSpinBitUpdated).state ? \"ON\" : \"OFF\");\n                break;\n\n            case qlog.RecoveryEventType.metrics_updated:\n                const metricNames = Object.keys(evt.data);\n\n                // TODO: when we add filters, allow users to set the parameters to show themselves\n                let count = 0;\n                if ( metricNames.indexOf(\"cwnd\") >= 0 ) {\n                    output += \"cwnd: \" + evt.data.cwnd;\n                    count += 1;\n                }\n                if ( metricNames.indexOf(\"smoothed_rtt\") >= 0 ) {\n                    if ( count > 0 ){\n                        output += \", \";\n                    }\n                    output += \"srtt: \" + evt.data.smoothed_rtt;\n                    count += 1;\n                }\n                if ( metricNames.indexOf(\"bytes_in_flight\") >= 0 ) {\n                    if ( count > 0 ){\n                        output += \", \";\n                    }\n                    output += \"in flight: \" + evt.data.bytes_in_flight;\n                    count += 1;\n                }\n                if ( metricNames.indexOf(\"ssthresh\") >= 0 ) {\n                    if ( count > 0 ){\n                        output += \", \";\n                    }\n                    output += \"ssthresh: \" + evt.data.ssthresh;\n                    count += 1;\n                }\n\n                const amountLeftOver = metricNames.length - count;\n                if ( count > 0 && amountLeftOver > 0 ) {\n                    output += \", ...\";\n                }\n                else if ( count === 0) {\n                    for ( let i = 0; i < metricNames.length; ++i  ) {\n                        output += \"\" + metricNames[i] + \": \" + evt.data[metricNames[i]];\n                        if (i !== metricNames.length - 1 ) {\n                            output += \", \";\n                        }\n                    } \n                }\n                // }\n                // else {\n                //     for ( let i = 0; i < metricNames.length; ++i  ) {\n                //         output += \"\" + metricNames[i] + \": \" + evt.data[metricNames[i]];\n                //         if (i !== metricNames.length - 1 ) {\n                //             output += \", \";\n                //         }\n                //     }  \n                // }\n\n                return \"\" + output;\n                break;\n\n            case qlog.RecoveryEventType.parameters_set:\n                if ( evt.category === qlog.EventCategory.recovery ) {\n                    return \"\" + Object.keys(evt.data).length + \" recovery parameters set\";\n                }\n                else if ( evt.category === qlog.EventCategory.transport ) {\n                    return \"\" + Object.keys(evt.data).length + \" transport parameters set\";\n                }\n                else if ( evt.category === qlog.EventCategory.http ) {\n                    return \"\" + Object.keys(evt.data).length + \" HTTP/3 parameters set\";\n                }\n                else {\n                    console.error(\"SequenceDiagramD3Renderer:eventToShortString : unknown category for 'parameters_set' event...\", evt.category);\n\n                    return \"\" + Object.keys(evt.data).length + \" UNKNOWN parameters set\";\n                }\n                break;\n\n                // const paramNames = Object.keys(evt.data);\n                // for ( let i = 0; i < paramNames.length; ++i  ) {\n                //     output += \"\" + paramNames[i] + \": \" + evt.data[paramNames[i]];\n                //     if (i !== paramNames.length - 1 ) {\n                //         output += \", \";\n                //     }\n                // }\n\n                // return \"\" + output;\n                // break;\n\n            case qlog.ConnectivityEventType.connection_state_updated:\n                return \"Connection state: \" + evt.data.new; \n                break;\n\n            case \"loss_timer_updated\": // FIXME: properly link to qlog schema once that's been updated\n                const delta = (evt.data.delta !== undefined) ? evt.data.delta : evt.data.timeout; // timeout is old-school, delta should be used now\n                let timeString = \"\";\n                if ( evt.data.event_type === \"set\" ) {\n                    timeString = \" @ \" + (evt.relativeTime + evt.timeToMilliseconds(delta)).toFixed(4); // + \" (\" + parseFloat(delta).toFixed(2) + \")\";\n                }\n                let pnSpaceString = \"\";\n                if ( evt.data.packet_number_space !== undefined ) {\n                    pnSpaceString = evt.data.packet_number_space + \" \";\n                    if ( evt.data.packet_number_space === \"application_data\" ) {\n                        pnSpaceString = \"appdata \";\n                    }\n                }\n\n                return pnSpaceString + \" \" + (evt.data.timer_type !== undefined ? ( \"\" + evt.data.timer_type).toUpperCase() + \" \" : \" \") + \"timer \" + evt.data.event_type + timeString;\n                break;\n\n            case qlog.RecoveryEventType.packet_lost:\n                if ( evt.data !== undefined && evt.data.packet_number !== undefined ) {\n                    let packetType = \"\";\n                    if ( evt.data.packet_type !== undefined ) {\n                        packetType = this.packetTypeToString( evt.data.packet_type ) + \" \";\n                    }\n\n                    return packetType + \"packet lost #\" + evt.data.packet_number;\n                }\n                else {\n                    return evt.name;\n                }\n                break;\n\n            case qlog.RecoveryEventType.congestion_state_updated:\n                if ( evt.data && evt.data.new !== undefined ) {\n                    return \"Congestion state: \" + (\"\" + evt.data.new).replace(\"_\", \" \");\n                }\n                else {\n                    return evt.name;\n                }\n                break;\n            \n            case qlog.HTTP3EventType.frame_parsed:\n            case qlog.HTTP3EventType.frame_created:\n\n                let streamID = \"\";\n                if ( evt.data.stream_id !== undefined) {\n                    streamID = \" (stream \" + evt.data.stream_id + \")\";\n                }\n\n                // TRY to return something like   GET /index.html if possible\n                if ( evt.data && evt.data.frame && evt.data.frame.headers ) {\n                    let method = undefined;\n                    let path = undefined;\n                    for ( const header of evt.data.frame.headers ) {\n                        if ( header.name === \":method\" || header.name === \"method\" ) {\n                            method = header.value;\n                        }\n                        else if ( header.name === \":path\" || header.name === \"path\" ) {\n                            path = header.value;\n                        }\n                    }\n\n                    if ( method && path ) {\n                        return method + \" \" + path + streamID;\n                    }\n                }\n\n                let frameType = \"\";\n                if ( evt.data.frame && evt.data.frame.frame_type ) {\n                    frameType = evt.data.frame.frame_type + \" \";\n                }\n\n                let verb = \"parsed\";\n                if ( evt.name ===  qlog.HTTP3EventType.frame_created ) {\n                    verb = \"created\";\n                }\n\n                return frameType + \" \" + verb + streamID;\n                break;\n\n\n            case \"info\":\n            case \"debug\":\n            case \"warning\":\n            case \"error\":\n            case \"verbose\":\n            case \"connection_error\":\n            case \"internal_error\":\n            case \"application_error\":\n            case \"internal_warning\":\n            case \"marker\":\n            case \"message\":\n                if ( evt.data === undefined || evt.data.message === undefined ) {\n                    return evt.name;\n                }\n\n                return evt.category + \": \" + evt.data.message;\n\n                break;\n\n            default:\n                return evt.name;\n                break;\n        }\n    }\n\n    protected packetTypeToString( packetType:string ){\n\n        switch ( packetType ){\n\n            case qlog.PacketType.onertt:\n            case \"onertt\":\n                return \"1RTT\";\n                break;\n\n            case qlog.PacketType.zerortt:\n            case \"zerortt\":\n                return \"0RTT\";\n                break;\n\n            case qlog.PacketType.version_negotiation:\n                return \"VNEG\";\n                break;\n\n            default:\n                return packetType;\n                break;\n        }\n    }\n\n}\n\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SequenceDiagramConfigurator.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SequenceDiagramConfigurator.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./SequenceDiagramConfigurator.vue?vue&type=template&id=36090e0e&\"\nimport script from \"./SequenceDiagramConfigurator.vue?vue&type=script&lang=ts&\"\nexport * from \"./SequenceDiagramConfigurator.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticStyle:{\"width\":\"100%\",\"border\":\"5px solid #cce5ff\",\"min-height\":\"200px\"},attrs:{\"id\":\"sequence-diagram\"}},[_c('svg',{attrs:{\"id\":\"sequence-diagram-svg\"}})]),_c('b-modal',{attrs:{\"id\":\"event-modal\",\"hide-footer\":\"\",\"title\":\"Event detail\"}},[(this.eventLink !== null)?_c('div',[_c('a',{attrs:{\"href\":this.eventLink,\"target\":\"_blank\"}},[_vm._v(\"Direct link to this event\")]),_c('br'),_c('hr')]):_vm._e(),_c('pre',{staticClass:\"d-block\"},[_vm._v(_vm._s(_vm.eventDetail))]),(this.eventDetailExtra !== null)?_c('p',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"Value of all recovery metrics at this point:\")]):_vm._e(),(this.eventDetailExtra !== null)?_c('pre',{staticClass:\"d-block\"},[_vm._v(_vm._s(_vm.eventDetailExtra))]):_vm._e(),_c('b-button',{staticClass:\"mt-3\",attrs:{\"block\":\"\"},on:{\"click\":_vm.hideEventModal}},[_vm._v(\"Close\")])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue, Prop, Watch } from \"vue-property-decorator\";\nimport SequenceDiagramConfig from \"./data/SequenceDiagramConfig\";\nimport { SequenceDiagramD3Renderer, EventPointer } from \"./renderer/SequenceDiagramD3Renderer\";\nimport SequenceDiagramCanvasRenderer from \"./renderer/SequenceDiagramCanvasRenderer\";\n\n@Component\nexport default class SequenceDiagramRenderer extends Vue {\n    @Prop()\n    public config!: SequenceDiagramConfig;\n\n    public eventDetail: string = '';\n    public eventDetailExtra: string|null = null; // not undefined, because that would make this propery un-reactive\n    public eventLink: string|null = null;\n\n    protected focusOnNext:EventPointer|null = null;\n\n    protected get connections(){\n        return this.config.connections;\n    }\n\n    protected renderer: SequenceDiagramD3Renderer | undefined = undefined;\n\n    public created(){\n        this.renderer = new SequenceDiagramD3Renderer(\"sequence-diagram\", \"sequence-diagram-svg\", this.showEventModal);\n        // this.renderer = new SequenceDiagramCanvasRenderer(\"sequence-diagram\");\n\n        const queryParameters = this.$route.query; // TODO: move this to a Helper if other visualizations start using this\n\n        if ( queryParameters.focusOnConnection && queryParameters.focusOnEvent ) {\n            this.focusOnNext = { connectionIndex: parseInt(queryParameters.focusOnConnection as string, 10), eventIndex: parseInt(queryParameters.focusOnEvent as string, 10) };\n        }\n    }\n\n    public mounted(){\n        // mainly for when we switch away, and then back to the sequenceDiagram\n        if ( this.config && this.renderer && this.config.connections.length > 0 ) {\n            this.renderer.render( this.config.connections, this.config.timeResolution );\n        }\n    }\n\n    protected hideEventModal() {\n        this.$bvModal.hide(\"event-modal\");\n    }\n\n    protected showEventModal(event: any, extra: any) {\n\n        this.eventDetail = JSON.stringify(event, null, 2);\n        if ( extra !== undefined ) {\n            this.eventDetailExtra = JSON.stringify( extra, null , 2);\n        }\n        else {\n            this.eventDetailExtra = null;\n        }\n\n        // const metadata = (event as any);\n        let eventNr = undefined;\n        if ( event.qvis && event.qvis.sequencediagram && event.qvis.sequencediagram.focusInfo ) {\n            const focusInfo:EventPointer = event.qvis.sequencediagram.focusInfo as EventPointer;\n            eventNr = focusInfo.eventIndex;\n            \n            const traces = this.renderer!.getTraces();\n\n            const URLs:Array<string> = [];\n\n            for ( const ctrace of traces ) {\n                if ( ctrace.connection && ctrace.connection.parent && ctrace.connection.parent.URL ) {\n                    if ( URLs.indexOf(ctrace.connection.parent.URL) < 0 ) {\n                        URLs.push( ctrace.connection.parent.URL );\n                    }\n                }\n            }\n\n            const trace = traces[ focusInfo.connectionIndex ];\n            if ( trace && URLs.length > 0 ) {\n\n                let fileLinks = \"\";\n                if ( URLs.length === 1 ) {\n                    fileLinks = \"file=\" + URLs[0];\n                }\n                else {\n                    for ( let i = 0; i < URLs.length; ++i ) {\n                        fileLinks += \"file\" + (i + 1) + \"=\" + URLs[i];\n                        if ( i !== URLs.length - 1 ) {\n                            fileLinks += \"&\";\n                        }\n                    }\n                }\n\n                if ( trace.connection && trace.connection.parent && trace.connection.parent.URL ) {\n                    this.eventLink = \"https://qvis.edm.uhasselt.be/?#/sequence?\" + fileLinks + \"&focusOnConnection=\" + focusInfo.connectionIndex + \"&focusOnEvent=\" + focusInfo.eventIndex;\n                }\n                else {\n                    this.eventLink = null;\n                }\n            }\n            else {\n                this.eventLink = null;\n                console.error(\"SequenceDiagramRenderer:showEventModal : trying to focus on trace, but doesn't exist: \", focusInfo, traces );\n            }\n        }\n        else {\n            this.eventLink = null;\n        }\n\n        if ( eventNr !== undefined ) {\n            this.eventDetail = \"Event nr: \" + eventNr + \"\\n\" + this.eventDetail;\n        }\n        \n        this.$bvModal.show(\"event-modal\");\n    }\n\n    // Note: we could use .beforeUpdate or use an explicit event or a computed property as well\n    // however, this feels more explicit\n    @Watch('config', { immediate: true, deep: true })\n    protected async onConfigChanged(newConfig: SequenceDiagramConfig, oldConfig: SequenceDiagramConfig) {\n        console.log(\"SequenceDiagramRenderer:onConfigChanged : \", newConfig, oldConfig);\n\n        if ( this.renderer ) {\n\n            // Because of the Vue reactivity, we come into this function multiple times but we just want to do the first\n            // so the .rendering var helps deal with that\n            // TODO: fix this OR bring this logic into this component, rather than on the renderer\n            if ( !this.renderer.rendering ){\n\n                if ( newConfig.connections && newConfig.connections[0].connection.getEvents().length > 10000 ){\n                    Vue.notify({\n                        group: \"default\",\n                        title: \"Trace might take long to render\",\n                        type: \"warn\",\n                        text: \"Some large traces can take a long time to render. Please be patient.\",\n                    });\n\n                    // give time to show the warning\n                    await new Promise( (resolve) => setTimeout(resolve, 200));\n                }\n\n                this.renderer.render( newConfig.connections, newConfig.timeResolution, this.focusOnNext ).then( (rendered) => {\n                    \n                    this.focusOnNext = null; // don't want to keep focusing on the same thing if we've changed selection\n                    \n                    if ( !rendered ) {\n                        Vue.notify({\n                            group: \"default\",\n                            title: \"Trace could not be rendered\",\n                            type: \"error\",\n                            text: \"This trace could not be rendered. There could be an error or a previous file was still rendering.<br/>See the JavaScript devtools for more information.\",\n                        });\n                    }\n                });\n            }\n        }\n    }\n\n} \n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SequenceDiagramRenderer.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SequenceDiagramRenderer.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./SequenceDiagramRenderer.vue?vue&type=template&id=25a4efb2&\"\nimport script from \"./SequenceDiagramRenderer.vue?vue&type=script&lang=ts&\"\nexport * from \"./SequenceDiagramRenderer.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./SequenceDiagramRenderer.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',[_vm._v(\"ManualRTT: \"+_vm._s(_vm.config.manualRTT))]),_c('div',[_vm._v(\"Scale: \"+_vm._s(_vm.config.scale))]),_c('b-container',{attrs:{\"fluid\":\"\"}},[_c('b-row',_vm._l((_vm.connections),function(connection,index){return _c('b-col',{key:index},[_vm._v(\"\\n                - \"+_vm._s(index)+\" : \"+_vm._s(connection.name)+\" ( \"+_vm._s(connection.parent.description)+\" )\\n                \"),_vm._l((connection.GetEvents()),function(event,index){return _c('div',{key:index},[_vm._v(\"\\n                    = \"+_vm._s(index)+\" : \"+_vm._s(connection.parseEvent(event).time)+\" \"+_vm._s(connection.parseEvent(event).category)+\" \"+_vm._s(connection.parseEvent(event).name)+\" \"+_vm._s(connection.parseEvent(event).trigger)+\" \"+_vm._s((connection.parseEvent(event).data && connection.parseEvent(event).data.header) ? connection.parseEvent(event).data.header.version : \"\")+\"\\n                \")])})],2)}),1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue, Prop, Watch } from \"vue-property-decorator\";\nimport SequenceDiagramConfig from \"./data/SequenceDiagramConfig\";\n\n@Component\nexport default class SequenceDiagramSimpleRenderer extends Vue {\n    @Prop()\n    public config!: SequenceDiagramConfig;\n\n    protected get connections(){\n        return this.config.connections;\n    }\n\n    // Note: we could use .beforeUpdate or use an explicit event or a computed property as well\n    // however, this feels more explicit\n    @Watch('config', { immediate: true, deep: true })\n    protected onConfigChanged(newConfig: SequenceDiagramConfig, oldConfig: SequenceDiagramConfig) {\n        console.log(\"SequenceDiagramSimpleRenderer:onConfigChanged : \", newConfig, oldConfig);\n    }\n} \n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SequenceDiagramSimpleRenderer.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SequenceDiagramSimpleRenderer.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./SequenceDiagramSimpleRenderer.vue?vue&type=template&id=30b5acc2&\"\nimport script from \"./SequenceDiagramSimpleRenderer.vue?vue&type=script&lang=ts&\"\nexport * from \"./SequenceDiagramSimpleRenderer.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Connection from \"@/data/Connection\";\nimport CongestionGraphD3Renderer from '../renderer/CongestionGraphD3Renderer';\n\nexport default class CongestionGraphConfig {\n    // PROPERTIES MUST BE INITIALISED\n    // OTHERWISE VUE DOES NOT MAKE THEM REACTIVE\n    // !!!!!\n\n    public connection:Connection | undefined = undefined;\n    public renderer!: CongestionGraphD3Renderer; // ONLY HERE FOR DEBUGGING, PROPERTY IS NOT INITIALISED ON PURPOSE SO THAT IT IS NOT MADE REACTIVE\n}\n","import ConnectionGroup from \"@/data/ConnectionGroup\";\n\nexport default class StatisticsConfig {\n    // PROPERTIES MUST BE INITIALISED\n    // OTHERWISE VUE DOES NOT MAKE THEM REACTIVE\n    // !!!!!\n\n    public group:ConnectionGroup | undefined = undefined; \n}\n","import Connection from \"@/data/Connection\";\n\nexport default class MultiplexingGraphConfig {\n\n    public collapsed:boolean = true;\n    public showwaterfall:boolean = true;\n    public showbyteranges:boolean = true;\n    public connections:Array<Connection> = new Array<Connection>();\n}\n","import Connection from \"@/data/Connection\";\n\nexport default class PacketizationDiagramConfig {\n\n    public collapsed:boolean = true;\n    public connections:Array<Connection> = new Array<Connection>();\n}\n","import {VuexModule, Module, Mutation, Action} from 'vuex-module-decorators'\nimport SequenceDiagramConfig from \"@/components/sequencediagram/data/SequenceDiagramConfig\";\nimport CongestionGraphConfig from '@/components/congestiongraph/data/CongestionGraphConfig';\nimport StatisticsConfig from '@/components/stats/data/StatisticsConfig';\nimport MultiplexingGraphConfig from '@/components/multiplexinggraph/data/MultiplexingGraphConfig';\nimport PacketizationDiagramConfig from '@/components/packetizationdiagram/data/PacketizationDiagramConfig';\n\n@Module({name: 'configurations'})\nexport default class ConfigurationStore extends VuexModule {\n\n    public congestionGraphConfig:   CongestionGraphConfig   = new CongestionGraphConfig();\n    public sequenceDiagramConfig:   SequenceDiagramConfig   = new SequenceDiagramConfig();\n    public statisticsConfig:        StatisticsConfig        = new StatisticsConfig();\n    public multiplexingGraphConfig: MultiplexingGraphConfig = new MultiplexingGraphConfig();\n    public packetizationDiagramConfig: PacketizationDiagramConfig = new PacketizationDiagramConfig();\n}\n","\n\n\n\n\n\n\n\n\nimport { getModule } from \"vuex-module-decorators\";\nimport { Component, Vue } from \"vue-property-decorator\";\n\nimport SequenceDiagramConfig from \"./data/SequenceDiagramConfig\"; \nimport SequenceDiagramConfigurator from \"./SequenceDiagramConfigurator.vue\";\nimport SequenceDiagramRenderer from \"./SequenceDiagramRenderer.vue\"; \nimport SequenceDiagramSimpleRenderer from \"./SequenceDiagramSimpleRenderer.vue\"; \n\nimport ConfigurationStore from \"@/store/ConfigurationStore\";\nimport ConnectionGroup from \"@/data/ConnectionGroup\";\n\n\n@Component({\n    components: {\n        SequenceDiagramConfigurator,\n        SequenceDiagramRenderer,\n        SequenceDiagramSimpleRenderer,\n    },\n})\n\nexport default class SequenceDiagramContainer extends Vue {\n\n    // We want to share some stuff between our configurator (choosing which files to show, default RTT, scaling, etc.)\n    // and our actual renderer. \n    // The canonical way to do this would be to put everything on the vuex store \n    // and just have the components access the store directly.\n    // However, that's a bit dirty, so instead this top-level component fetches the stored state \n    // and distributes it over the children, who need not know about the vuex store \n    protected store:ConfigurationStore = getModule(ConfigurationStore, this.$store);\n    protected config:SequenceDiagramConfig = this.store.sequenceDiagramConfig;\n\n    // TODO: get rid of this. Is just to test if we can use $data stuff in computed getters and pass them as props while keeping reactivity\n    // get configGetter() {\n    //    return this.config;\n    // }\n} \n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SequenceDiagramContainer.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SequenceDiagramContainer.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./SequenceDiagramContainer.vue?vue&type=template&id=2282deae&\"\nimport script from \"./SequenceDiagramContainer.vue?vue&type=script&lang=ts&\"\nexport * from \"./SequenceDiagramContainer.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\nimport { Component, Vue } from \"vue-property-decorator\";\nimport SequenceDiagramContainer from \"@/components/sequencediagram/SequenceDiagramContainer.vue\";\n\n@Component({\n    components: {\n        SequenceDiagramContainer,\n    },\n})\nexport default class SequenceDiagram extends Vue {} \n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SequenceDiagram.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SequenceDiagram.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./SequenceDiagram.vue?vue&type=template&id=2c9ac72c&\"\nimport script from \"./SequenceDiagram.vue?vue&type=script&lang=ts&\"\nexport * from \"./SequenceDiagram.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('PacketizationDiagramContainer')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"home\"},[_c('PacketizationDiagramConfigurator',{attrs:{\"config\":_vm.config}}),_c('PacketizationDiagramRenderer',{attrs:{\"config\":_vm.config}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"background-color\":\"#f8d7da\",\"padding\":\"0px 10px\"}},[_c('b-container',{attrs:{\"fluid\":\"\"}},[_c('b-row',{attrs:{\"align-h\":\"center\"}},[_c('p',{staticStyle:{\"margin-top\":\"10px\"}},[_vm._v(\"Select a trace via the dropdown(s) below to visualize it in the packetization diagram\")])]),_c('b-row',{attrs:{\"align-h\":\"center\"}},[(_vm.config.connections.length > 0)?_c('ConnectionConfigurator',{attrs:{\"allGroups\":_vm.store.groups,\"connection\":_vm.config.connections[0],\"canBeRemoved\":false,\"onConnectionSelected\":_vm.onConnectionSelected}}):_vm._e()],1),_c('b-row',{attrs:{\"align-h\":\"center\"}},[_c('b-col',{staticClass:\"text-center\",attrs:{\"cols\":\"8\"}},[_c('div',{staticClass:\"text-center\"},[_c('b-button',{staticClass:\"m-auto\",staticStyle:{\"width\":\"25%\"},attrs:{\"block\":\"\"},on:{\"click\":_vm.toggleInfo}},[_vm._v(\"More info on this tool\")])],1)])],1),(this.store.outstandingRequestCount === 0 && this.store.groups.length === 0)?_c('b-alert',{attrs:{\"show\":\"\",\"variant\":\"danger\"}},[_vm._v(\"Please load a trace file to visualize it\")]):(this.store.groups.length === 0)?_c('b-alert',{attrs:{\"show\":\"\",\"variant\":\"warning\"}},[_vm._v(\"Loading files...\")]):_vm._e(),_c('b-modal',{attrs:{\"id\":\"info-modal\",\"size\":\"xl\",\"hide-footer\":\"\",\"title\":\"PacketizationDiagram info\"}},[_c('h2',[_vm._v(\"How to test?\")]),_vm._v(\"\\n                Load the predefined DEMO files (using the \\\"manage files\\\" tab above) and then select the \\\"\"),_c('b',[_vm._v(\"DEMO_10_parallel_streams\")]),_vm._v(\"\\\" file here (the other demo files are a bit flaky on this visualization because they're older and don't always contain all the necessary fields)\"),_c('br'),_vm._v(\"\\n\\n                You can also upload your own qlog files, but note that this has been tested mainly on client-side traces. Server-side logs should work, but there might be dragons. Let us know if you find any bugs.\\n\\n            \"),_c('h2',[_vm._v(\"What does it do?\")]),_c('p',[_vm._v(\"\\n                The packetization diagram shows how QUIC and HTTP/3 frames are packed inside each other and inside QUIC packets. \\n                This helps to see how (especially STREAM and DATA) frames are sized, how packet sizes are modulated, if HTTP/3 frame boundaries don't directly correspond to QUIC boundaries, etc.\\n                \"),_c('ul',[_c('li',[_vm._v(\"\\n                        The bottom row (black and grey) shows the QUIC packets. Each packet has a header (the lower area) and a payload (the higher area). \"),_c('br'),_vm._v(\"\\n                        The first packet is black, the second grey, etc. to clearly show when a new packet starts. This use of alternating colors to show clear delineations is consistent for the rest of the diagram as well.\\n                    \")]),_c('li',[_vm._v(\"The second row (red and pink) shows the QUIC frames inside the packet payloads. Each frame has a frame header and a payload.\")]),_c('li',[_vm._v(\"The third row (blue and light blue) show the HTTP/3 frames inside QUIC STREAM frame's payloads. Each HTTP/3 frame has a frame header and a payload.\")]),_c('li',[_vm._v(\"The fourth row (several colors) show to which stream each HTTP/3 frame belongs (if any). This to make it easier to track how streams are multiplexed on the wire.\")])]),_c('b',[_vm._v(\"IMPORTANT: the x-axis does NOT show time but bytes sent/received\")]),_vm._v(\". \\n                This also means that the two individual x-axis (for the top and bottom diagrams) do not (directly) overlap in time, even though it might appear like that at first glance!\\n                To get a better idea of timing, use the sequence diagram\"),_c('br'),_c('br'),_vm._v(\"\\n\\n                You can hover over each element and get a popup with more in-context information on what's present at that location. \"),_c('br'),_vm._v(\"\\n                You can also zoom with the scrollwheel and drag to pan the diagram.\"),_c('br'),_c('br'),_vm._v(\"\\n\\n                Keep an eye on the browser devtools' JavaScript console: if you see weird behaviour, you'll probably see an error message explaining things there as well.\\n            \")]),_c('h2',[_vm._v(\"How does it work?\")]),_c('p',[_vm._v(\"\\n                The visualization currently looks mainly at the following qlog events and attributes to figure out packet and frame sizes:\\n                \"),_c('ul',[_c('li',[_vm._v(\"packet_sent/packet_received : header : packet_size\")]),_c('li',[_vm._v(\"packet_sent/packet_received : frames[ StreamFrame ] : length\")]),_c('li',[_vm._v(\"frame_parsed/frame_created : byte_length\")])]),_vm._v(\"\\n\\n                However, these events are not enough to fully know the sizes of all QUIC frames: we only have explicit (payload) lengths for the stream frames. \\n                Because of QUIC's use of variable-length integer encoding for frame headers, it's difficult to know the frame's header and payload sizes (especially for things like ACK frames).\"),_c('br'),_vm._v(\"\\n                qlog draft-02 should include fields to allow explicit logging of these lengths. For pre-02, this tool tries to \"),_c('b',[_vm._v(\"guesstimate\")]),_vm._v(\" the sizes (and probably gets it wrong).\\n                If we fail to correctly guess, we backfill with bright yellow rendered \\\"filler\\\" frames. \"),_c('br'),_c('br'),_vm._v(\"\\n\\n                Note that this means that while the sizes of most QUIC frames (except STREAM frames) are off, the visualization is still accurate in showing which frames were in which packet.\\n            \")]),_c('h2',[_vm._v(\"Also usable for TCP + TLS + HTTP/2\")]),_c('p',[_vm._v(\"\\n                This visualization was first created for use with TCP + TLS + HTTP/2, as there the implementations are typically less well aggregated. This often leads to inefficiencies in how data is packed inside the different layers.\\n                If you want to use this tool with those protocols as well, create a decrypted trace (so HTTP/2 is decoded) using wireshark (or equivalent) and then output it as JSON (either from wireshark directly or using tshark).\\n                You can then upload that as a .json file using the qvis file manager. It has a built-in pcap-to-qlog convertor (or at least the basic of one for this purpose).\\n                See the qvis repository for a demo TCP file. \\n            \")]),_c('b-button',{staticClass:\"mt-3 d-block\",on:{\"click\":_vm.toggleInfo}},[_vm._v(\"Close\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { getModule } from \"vuex-module-decorators\";\nimport { Component, Vue, Prop } from \"vue-property-decorator\";\nimport PacketizationDiagramConfig from \"./data/PacketizationDiagramConfig\";\nimport * as qlog from '@quictools/qlog-schema';\n\nimport ConnectionConfigurator from \"@/components/shared/ConnectionConfigurator.vue\";\nimport ConnectionStore from \"@/store/ConnectionStore\";\nimport ConnectionGroup from \"@/data/ConnectionGroup\";\nimport Connection from \"@/data/Connection\";\nimport QlogConnection from '@/data/Connection';\n\n@Component({\n    components: {\n        ConnectionConfigurator,\n    },\n})\nexport default class PacketizationDiagramConfigurator extends Vue {\n    @Prop()\n    public config!: PacketizationDiagramConfig;\n\n    public store:ConnectionStore = getModule(ConnectionStore, this.$store);\n\n    protected infoShown:boolean = false;\n\n    public onConnectionSelected(connection:Connection) {\n        console.log(\"PacketizationDiagramConfigurator:onConnectionSelected : \", this.config, connection);\n\n        this.config.connections = [ connection ];\n    }\n\n    public get allowSelectAll() : boolean {\n        return (window.location.toString().indexOf(\":8080\") >= 0 ); // only for local testing for now! // TODO: CLEAN UP\n    }\n\n    public selectAllConnections() {\n\n        // TODO: just for paper results, remove!\n        (window as any).holblockinfo = new Array<any>();\n\n        const conns = [];\n        for ( const group of this.store.groups ){\n            if ( group.filename.indexOf(\"DEMO\") < 0 ){\n                conns.push( ...group.getConnections() );\n            }\n        }\n\n        this.config.connections = conns;\n    }\n\n    public mounted(){\n        if ( this.config.connections.length === 0 && this.store.groups.length > 0 ){\n            this.selectDefault();\n        }\n    }\n\n    public updated(){\n        if ( this.config.connections.length === 0 && this.store.groups.length > 0 ){\n            this.selectDefault();\n        }\n    }\n\n    protected selectDefault(){\n        console.log(\"PacketizationDiagramConfigurator:selectDefault: adding new default connection configurator\", this.store.groups);\n        this.config.connections = [ this.store.groups[0].getConnections()[0] ];\n    }\n\n    protected toggleInfo() {\n        if ( !this.infoShown) {\n            this.$bvModal.show(\"info-modal\");\n        }\n        else {\n            this.$bvModal.hide(\"info-modal\");\n        }\n\n        this.infoShown = !this.infoShown;\n    }\n}\n\n","import * as qlog from '@quictools/qlog-schema';\n\nexport enum PacketizationDirection {\n    sending,\n    receiving,\n}\n\nexport interface PacketizationRange {\n    start:number,\n    size:number,\n\n    isPayload:boolean,\n    contentType?:string, // e.g., header frame, payload frame, application record, ...\n\n    index:number,\n    lowerLayerIndex:number, // for easier correlation with lower layer ranges\n\n    color:string,\n\n    rawPacket?:any, // the raw qlog event\n    extra?:any // extra info needed to stringify-this \n}\n\nexport interface PacketizationLane {\n    name:string, // showed next to the lane, purely visual\n    CSSClassName:string, // CSS class used for items on this lane \n    rangeToString:(r:PacketizationRange) => string, // used when hovering over a range to show additional information\n\n    heightModifier?:number, // mainly to reduce the height of an individual lane\n\n    ranges:Array<PacketizationRange>, // the actual ranges to be drawn in the lane\n\n    max_size_local?:number,\n    max_size_remote?:number,\n\n    efficiency?:number\n}\n\n\nexport interface LightweightRange {\n    start: number,\n    size: number\n}\n\nexport class PacketizationPreprocessor {\n\n    // FIXME: refactor this into a general HTTP3 protocol helper class \n    public static H3FrameTypeToNumber(frame:any) {\n        /* // draft-27\n                +--------------+-------+---------------+\n                 | Frame Type   | Value | Specification |\n                 +==============+=======+===============+\n                 | DATA         |  0x0  | Section 7.2.1 |\n                 +--------------+-------+---------------+\n                 | HEADERS      |  0x1  | Section 7.2.2 |\n                 +--------------+-------+---------------+\n                 | Reserved     |  0x2  | N/A           |\n                 +--------------+-------+---------------+\n                 | CANCEL_PUSH  |  0x3  | Section 7.2.3 |\n                 +--------------+-------+---------------+\n                 | SETTINGS     |  0x4  | Section 7.2.4 |\n                 +--------------+-------+---------------+\n                 | PUSH_PROMISE |  0x5  | Section 7.2.5 |\n                 +--------------+-------+---------------+\n                 | Reserved     |  0x6  | N/A           |\n                 +--------------+-------+---------------+\n                 | GOAWAY       |  0x7  | Section 7.2.6 |\n                 +--------------+-------+---------------+\n                 | Reserved     |  0x8  | N/A           |\n                 +--------------+-------+---------------+\n                 | Reserved     |  0x9  | N/A           |\n                 +--------------+-------+---------------+\n                 | MAX_PUSH_ID  |  0xD  | Section 7.2.7 |\n                 +--------------+-------+---------------+\n        */\n        switch ( frame.frame_type ) {\n            case qlog.HTTP3FrameTypeName.data:\n                return 0x00;\n                break;\n            case qlog.HTTP3FrameTypeName.headers:\n                return 0x01;\n                break;\n            case qlog.HTTP3FrameTypeName.reserved:\n                return 0x02;\n                break;\n            case qlog.HTTP3FrameTypeName.cancel_push:\n                return 0x03;\n                break;\n            case qlog.HTTP3FrameTypeName.settings:\n                return 0x04;\n                break;\n            case qlog.HTTP3FrameTypeName.push_promise:\n                return 0x05;\n                break;\n            case qlog.HTTP3FrameTypeName.goaway:\n                return 0x07;\n                break;\n            case qlog.HTTP3FrameTypeName.max_push_id:\n                return 0x0D;\n                break;\n            case qlog.HTTP3FrameTypeName.unknown:\n                return frame.raw_frame_type;\n                break;\n            default:\n                return 0x00;\n                break;\n        }\n    }\n\n    // FIXME: refactor this into a general QUIC protocol helper class \n    public static VLIELength(input:number) {\n        /*\n        +------+--------+-------------+-----------------------+\n          | 2Bit | Length | Usable Bits | Range                 |\n          +======+========+=============+=======================+\n          | 00   | 1      | 6           | 0-63                  |\n          +------+--------+-------------+-----------------------+\n          | 01   | 2      | 14          | 0-16383               |\n          +------+--------+-------------+-----------------------+\n          | 10   | 4      | 30          | 0-1073741823          |\n          +------+--------+-------------+-----------------------+\n          | 11   | 8      | 62          | 0-4611686018427387903 |\n          +------+--------+-------------+-----------------------+\n        */\n\n        if ( input <= 63 ) {\n            return 1;\n        }\n        if ( input <= 16383 ) {\n            return 2;\n        }\n        if ( input <= 1073741823 ) {\n            return 4;\n        }\n\n        return 8;\n    }\n\n    public static extractRanges(ranges:Array<LightweightRange>, size:number) {\n        const output:Array<LightweightRange> = new Array<LightweightRange>();\n\n        let remainingLength = size;\n\n        if ( size === 0 ) {\n            console.warn(\"Trying to extract ranges for size 0... potential error? Skipping...\");\n\n            return output;\n        }\n\n        while ( ranges.length > 0 ) {\n            const range = ranges.shift();\n\n            // console.log(\"Considering range\", range, remainingLength);\n\n            // either we consume the range, or we need to split it\n            // the last option should only happen once at maximum, at the very end of this run\n            if ( range!.start + range!.size <= range!.start + remainingLength ) {\n                // full range is consumed\n                // console.log(\"Consuming range!\", range!.start, range!.size, remainingLength );\n                output.push( range! );\n            }\n            else {\n                // console.log(\"Splitting range!\", range!.start, range!.size, remainingLength );\n\n                if ( size === 5 && remainingLength < 5 ) { // header is being split... bad for performance\n                    console.warn(\"Splitting a header range... server is being bad/naive?\", size);\n                }\n\n                // range needs to be split\n                ranges.unshift( {start: range!.start + remainingLength, size: range!.size - remainingLength} );\n                range!.size = remainingLength; // this struct isn't added back to the \"ranges\" array, so can safely change it for use below\n\n                // console.log(\"We split the range\", range);\n\n                output.push( range! );\n            }\n\n            if ( range!.size < 0 ) { // sanity check\n                console.error(\"PacketizationDiagram:extractRanges : Negative size after extracting ranges! Should not happen!\", range!.size, range, ranges);\n            }\n\n            remainingLength -= range!.size;\n\n            // console.log(\"Remaining length\", remainingLength, range!.size);\n\n            if ( remainingLength < 0 ) { // sanity check\n                alert(\"Remaining length < 0, CANNOT HAPPEN! \" + remainingLength); // FIXME: make alert\n                break;\n            }\n\n            if ( remainingLength === 0 ) {\n                break;\n            }\n        }\n\n        if ( remainingLength !== 0 ) {\n            alert(\"Trying to fill payloadranges that aren't there! \" + remainingLength); // FIXME: make alert\n        }\n\n        return output;\n    }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PacketizationDiagramConfigurator.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PacketizationDiagramConfigurator.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./PacketizationDiagramConfigurator.vue?vue&type=template&id=08f291f4&scoped=true&\"\nimport script from \"./PacketizationDiagramConfigurator.vue?vue&type=script&lang=ts&\"\nexport * from \"./PacketizationDiagramConfigurator.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./PacketizationDiagramConfigurator.vue?vue&type=style&index=0&id=08f291f4&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"08f291f4\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticStyle:{\"width\":\"100%\",\"min-height\":\"200px\"},attrs:{\"id\":\"packetization-diagram-top\"}}),_c('div',{staticStyle:{\"width\":\"100%\",\"min-height\":\"200px\"},attrs:{\"id\":\"packetization-diagram-bottom\"}}),_c('div',{attrs:{\"id\":\"packetization-packet-tooltip\"}})])}]\n\nexport { render, staticRenderFns }","export default class ColorHelper {\n\n    public static StreamIDToColor(streamID:string, protocol:\"HTTP2\"|\"HTTP3\"):Array<string> {\n\n        let lut;\n        if ( protocol === \"HTTP2\" ) {\n            lut = ColorHelper.H2streamIDColorLUT;\n        }\n        else {\n            lut = ColorHelper.H3streamIDColorLUT;\n        }\n\n        // colors inspired by http://artshacker.com/wp-content/uploads/2014/12/Kellys-22-colour-chart.jpg\n\n        if ( protocol === \"HTTP2\" ) {\n            if ( lut.size === 0 ){\n                lut.set( \"0\",  \"#FF0000\" ); // bright red\n                lut.set( \"1\",  \"#E1DA4C\" ); // yellow\n                lut.set( \"3\",  \"#6B067F\" ); // purple\n                lut.set( \"5\",  \"#E17426\" ); // orange\n                lut.set( \"7\", \"#914ca8\" ); // purple\n                lut.set( \"9\", \"#99CBDF\" ); // light blue\n                lut.set( \"11\", \"#C72737\" ); // red\n                lut.set( \"13\", \"#BBC585\" ); // buff\n                lut.set( \"15\", \"#7D787A\" ); // grey\n                lut.set( \"17\", \"#6CAD58\" ); // green\n                lut.set( \"19\", \"#D580AA\" ); // pink\n                lut.set( \"21\", \"#4C61B9\" ); // blue\n                lut.set( \"23\", \"#D38E75\" ); // yellowish pink\n                lut.set( \"25\", \"#46198C\" ); // violet\n                lut.set( \"27\", \"#C8A454\" ); // oker\n            }\n            \n            if ( lut.has(streamID) ) {\n                return [ lut.get( streamID )!, \"black\" ];\n            }\n            else {\n                let streamIDnumber = parseInt( streamID, 10 );\n\n                if ( streamIDnumber > 27 ) {\n                    streamIDnumber = streamIDnumber % 28;\n                }\n\n                if ( lut.has(\"\" + streamIDnumber ) ) {\n                    return [ lut.get( \"\" + streamIDnumber )!, \"black\" ];\n                }\n                else {\n                    return [ \"lavenderblush\", \"black\" ]; \n                }\n            }\n        }\n        else {\n            if ( lut.size === 0 ){\n                lut.set( \"0\",  \"#E1DA4C\" ); // yellow\n                lut.set( \"4\",  \"#6B067F\" ); // purple\n                lut.set( \"8\",  \"#E17426\" ); // orange\n                lut.set( \"12\", \"#914ca8\" ); // purple\n                lut.set( \"16\", \"#99CBDF\" ); // light blue\n                lut.set( \"20\", \"#C72737\" ); // red\n                lut.set( \"24\", \"#BBC585\" ); // buff\n                lut.set( \"28\", \"#7D787A\" ); // grey\n                lut.set( \"32\", \"#6CAD58\" ); // green\n                lut.set( \"36\", \"#D580AA\" ); // pink\n                lut.set( \"40\", \"#4C61B9\" ); // blue\n                lut.set( \"44\", \"#D38E75\" ); // yellowish pink\n                lut.set( \"48\", \"#46198C\" ); // violet\n                lut.set( \"52\", \"#C8A454\" ); // oker\n            }\n            \n            if ( lut.has(streamID) ) {\n                return [ lut.get( streamID )!, \"black\" ];\n            }\n            else {\n                let streamIDnumber = parseInt( streamID, 10 );\n\n                if ( streamIDnumber > 52 ) {\n                    streamIDnumber = streamIDnumber % 56;\n                }\n\n                if ( lut.has(\"\" + streamIDnumber ) ) {\n                    return [ lut.get( \"\" + streamIDnumber )!, \"black\" ];\n                }\n                else {\n                    return [ \"lavenderblush\", \"black\" ]; \n                }\n            }\n        }\n    }\n\n    protected static H2streamIDColorLUT:Map<string, string> = new Map<string, string>();\n    protected static H3streamIDColorLUT:Map<string, string> = new Map<string, string>();\n}\n","import ColorHelper from '@/components/shared/helpers/ColorHelper';\n\nexport default class PacketizationDiagramDataHelper {\n\n    public static StreamIDToColor(streamID:string, protocol:\"HTTP2\"|\"HTTP3\"):Array<string> {\n\n        return ColorHelper.StreamIDToColor( streamID, protocol );\n    }\n}\n","import * as tcpqlog from \"@/components/filemanager/pcapconverter/qlog_tcp_tls_h2\";\nimport * as qlog from '@quictools/qlog-schema';\nimport { PacketizationLane, PacketizationRange, LightweightRange, PacketizationPreprocessor, PacketizationDirection } from './PacketizationDiagramModels';\nimport QlogConnection from '@/data/Connection';\nimport PacketizationDiagramDataHelper from './PacketizationDiagramDataHelper';\n\nexport default class PacketizationTCPPreProcessor {\n\n\n    public static process( tcpConnection:QlogConnection, direction:PacketizationDirection ):Array<PacketizationLane> {\n        const output = new Array<PacketizationLane>();\n\n\n        // clients receive data, servers send it\n        let TCPEventType = qlog.TransportEventType.packet_received;\n        let TLSEventType = tcpqlog.TLSEventType.record_parsed;\n        let HTTPEventType = tcpqlog.HTTP2EventType.frame_parsed;\n        let directionText = \"received\";\n\n        // if ( tcpConnection.vantagePoint && tcpConnection.vantagePoint.type === qlog.VantagePointType.server ){\n        if ( direction === PacketizationDirection.sending ){\n            TCPEventType = qlog.TransportEventType.packet_sent;\n            TLSEventType = tcpqlog.TLSEventType.record_created;\n            HTTPEventType = tcpqlog.HTTP2EventType.frame_created;\n            directionText = \"sent\";\n        }\n\n        let HTTPHeadersSentEventType; // default value\n        if ( tcpConnection.vantagePoint && tcpConnection.vantagePoint.type === qlog.VantagePointType.server ) {\n            HTTPHeadersSentEventType = tcpqlog.HTTP2EventType.frame_parsed // server receives request\n        }\n        else if ( tcpConnection.vantagePoint && tcpConnection.vantagePoint.type === qlog.VantagePointType.client ) {\n            HTTPHeadersSentEventType = tcpqlog.HTTP2EventType.frame_created; // client sends request\n        }\n\n        const TCPData:Array<PacketizationRange> = [];\n        const TLSData:Array<PacketizationRange> = [];\n        const HTTPData:Array<PacketizationRange> = [];\n        const StreamData:Array<PacketizationRange> = [];\n\n        let TCPindex = 0;\n        let TLSindex = 0;\n        let HTTPindex = 0;\n\n        let TCPmax = 0;\n        // let TLSmax = 0; \n        // let HTTPmax = 0;\n\n        let DEBUG_TLSpayloadSize:number = 0;\n        let DEBUG_HTTPtotalSize:number = 0;\n\n        const TCPPayloadRanges:Array<LightweightRange> = new Array<LightweightRange>();\n        const TLSPayloadRanges:Array<LightweightRange> = new Array<LightweightRange>();\n\n        const HTTPStreamInfo:Map<number,any> = new Map<number,any>();\n\n        for ( const eventRaw of tcpConnection.getEvents() ) {\n\n            const event = tcpConnection.parseEvent( eventRaw );\n            const data = event.data;\n\n            if ( event.name === TCPEventType ){ // packet_sent or _received, the ones we want to plot\n\n                if ( data.header.payload_length === 0 ){\n                    // ack, not showing these for now\n                    continue;\n                }\n\n                const length = data.header.header_length + data.header.payload_length;\n\n                // TCP packet header\n                TCPData.push({\n                    index: TCPindex,\n                    isPayload: false,\n\n                    start: TCPmax,\n                    size: data.header.header_length,\n\n                    color: ( TCPindex % 2 === 0 ) ? \"black\" : \"grey\",\n\n                    lowerLayerIndex: -1,\n                    rawPacket: data,\n                });\n\n                // TCP packet payload\n                TCPData.push({\n                    index: TCPindex,\n                    isPayload: true,\n\n                    start: TCPmax + data.header.header_length,\n                    size: data.header.payload_length,\n\n                    color: ( TCPindex % 2 === 0 ) ? \"black\" : \"grey\",\n\n                    lowerLayerIndex: -1,\n                    rawPacket: data,\n                });\n\n                TCPPayloadRanges.push( {start: TCPmax + data.header.header_length, size: data.header.payload_length} );\n\n                TCPmax += length;\n                ++TCPindex;\n            }\n            else if ( event.name === TLSEventType ) {\n\n                const payloadLength = Math.max(0, data.header.payload_length);\n                const recordLength = data.header.header_length + payloadLength + data.header.trailer_length;\n\n                // console.log(\"Matching TLS records with TCP payload ranges\", recordLength, JSON.stringify(TCPPayloadRanges));\n\n                // each TLS record is x bytes header (typically 5 bytes), then payload, then MAC or encryption nonce (typically 16 bytes)\n                const headerRanges  = PacketizationPreprocessor.extractRanges( TCPPayloadRanges, data.header.header_length );\n                for ( const headerRange of headerRanges ) {\n                    TLSData.push({\n                        isPayload: false,\n\n                        contentType: data.header.content_type,\n                        index: TLSindex, \n                        lowerLayerIndex: TCPindex - 1, // belongs to the \"previous\" TCP packet\n                        \n                        start: headerRange!.start,\n                        size: headerRange.size, \n\n                        color: ( TLSindex % 2 === 0 ) ? \"red\" : \"pink\",\n\n                        extra: {\n                            DEBUG_wiresharkFrameNumber: data.header.DEBUG_wiresharkFrameNumber,\n                            record_length: recordLength,\n                            payload_length: payloadLength,\n                        },\n\n                        rawPacket: data,\n                    });\n                }\n                \n                const payloadRanges = PacketizationPreprocessor.extractRanges( TCPPayloadRanges, payloadLength ); \n                for ( const payloadRange of payloadRanges ) {\n                    TLSData.push({\n                        isPayload: true,\n\n                        contentType: data.header.content_type,\n                        index: TLSindex, \n                        lowerLayerIndex: TCPindex - 1, // belongs to the \"previous\" TCP packet\n                        \n                        start: payloadRange!.start,\n                        size: payloadRange.size, \n\n                        color: ( TLSindex % 2 === 0 ) ? \"red\" : \"pink\",\n\n                        extra: {\n                            DEBUG_wiresharkFrameNumber: data.header.DEBUG_wiresharkFrameNumber,\n                            record_length: recordLength,\n                            payload_length: payloadLength,\n                        },\n\n                        rawPacket: data,\n                    });\n\n                    if ( data.header.content_type === \"application\" ){\n                        TLSPayloadRanges.push( {start: payloadRange!.start, size: payloadRange!.size} );\n                        DEBUG_TLSpayloadSize += payloadRange!.size;\n                    }\n                }\n\n                if ( data.header.trailer_length !== 0 ){\n                    const trailerRanges = PacketizationPreprocessor.extractRanges( TCPPayloadRanges, data.header.trailer_length );\n\n                    for ( const trailerRange of trailerRanges ) {\n                        TLSData.push({\n                            isPayload: false,\n\n                            contentType: data.header.content_type,\n                            index: TLSindex, \n                            lowerLayerIndex: TCPindex - 1, // belongs to the \"previous\" TCP packet\n                            \n                            start: trailerRange!.start,\n                            size: trailerRange.size, \n\n                            color: ( TLSindex % 2 === 0 ) ? \"red\" : \"pink\",\n\n                            extra: {\n                                DEBUG_wiresharkFrameNumber: data.header.DEBUG_wiresharkFrameNumber,\n                                record_length: recordLength,\n                                payload_length: payloadLength,\n                            },\n    \n                            rawPacket: data,\n                        });\n                    }\n                }\n\n                ++TLSindex;\n            }\n            else if ( event.name === HTTPEventType ) {\n\n                if ( data.header_length > 0 ) { // MAGIC from client doesn't have a header\n                    const headerRanges = PacketizationPreprocessor.extractRanges( TLSPayloadRanges, data.header_length );\n                    for ( const headerRange of headerRanges ) {\n                        HTTPData.push({\n                            isPayload: false,\n\n                            contentType: data.content_type,\n                            index: HTTPindex, \n                            lowerLayerIndex: TLSindex - 1, // belongs to the \"previous\" TLS record // TODO: this is probably wrong... \n\n                            start: headerRange!.start,\n                            size: headerRange!.size,\n\n                            color: ( HTTPindex % 2 === 0 ) ? \"blue\" : \"lightblue\",\n\n                            extra: {\n                                frame_length: data.header_length + data.payload_length,\n                            },\n\n                            rawPacket: data,\n                        });\n\n                        if ( data.stream_id !== undefined ) {\n                            const streamID = parseInt( data.stream_id, 10 );\n\n                            StreamData.push({\n                                isPayload: true,\n\n                                contentType: data.content_type,\n                                index: HTTPindex, \n                                lowerLayerIndex: TLSindex - 1, // belongs to the \"previous\" TLS record // TODO: this is probably wrong... \n\n                                start: headerRange!.start,\n                                size: headerRange!.size,\n\n                                color: PacketizationDiagramDataHelper.StreamIDToColor( \"\" + streamID, \"HTTP2\" )[0],\n\n                                extra: {\n                                    frame_length: data.header_length + data.payload_length,\n                                },\n\n                                rawPacket: data,\n                            });\n                        }\n                    }\n\n                    DEBUG_HTTPtotalSize += data.header_length;\n                }\n\n                // some frames, like SETTINGS, don't necessarily have a payload\n                if ( data.payload_length > 0 ) {\n                    const payloadRanges = PacketizationPreprocessor.extractRanges( TLSPayloadRanges, data.payload_length );\n\n                    for ( const payloadRange of payloadRanges ) {\n                        HTTPData.push({\n                            isPayload: true,\n\n                            contentType: data.content_type,\n                            index: HTTPindex, \n                            lowerLayerIndex: TLSindex - 1, // belongs to the \"previous\" TLS record // TODO: this is probably wrong... \n\n                            start: payloadRange!.start,\n                            size: payloadRange!.size,\n\n                            color: ( HTTPindex % 2 === 0 ) ? \"blue\" : \"lightblue\",\n\n                            extra: {\n                                frame_length: data.header_length + data.payload_length,\n                            },\n\n                            rawPacket: data,\n                        });\n\n\n                        if ( data.stream_id !== undefined ) {\n                            const streamID = parseInt( data.stream_id, 10 );\n\n                            StreamData.push({\n                                isPayload: true,\n\n                                contentType: data.content_type,\n                                index: HTTPindex, \n                                lowerLayerIndex: TLSindex - 1, // belongs to the \"previous\" TLS record // TODO: this is probably wrong... \n\n                                start: payloadRange!.start,\n                                size: payloadRange!.size,\n\n                                color: PacketizationDiagramDataHelper.StreamIDToColor( \"\" + streamID, \"HTTP2\" )[0],\n\n                                extra: {\n                                    frame_length: data.header_length + data.payload_length,\n                                },\n\n                                rawPacket: data,\n                            });\n                        }\n                    }\n\n                    if ( event.data.frame && event.data.frame.frame_type === tcpqlog.HTTP2FrameTypeName.data ) {\n                        const streamID = parseInt( event.data.stream_id, 10 );\n                        if ( streamID !== 0 ) {\n                            if ( !HTTPStreamInfo.has(streamID) ) {\n                                console.error(\"PacketizationTCPPreprocessor: trying to increase payload size sum, but streamID not yet known! Potentially Server Push (which we don't support yet)\", streamID, HTTPStreamInfo);\n                            }\n                            else {\n                                HTTPStreamInfo.get( streamID ).total_size += data.payload_length;\n                            }\n                        }\n                    }\n\n                    DEBUG_HTTPtotalSize += data.payload_length;\n                }\n                else {\n                    if ( data.frame.frame_type !== tcpqlog.HTTP2FrameTypeName.settings ) { // for settings, we know the server sometimes doesn't send anything\n                        console.warn(\"PacketizationTCPPreprocessor: Found HTTP frame without payload length... potential error?\", data);\n                    }\n                }\n\n                ++HTTPindex;\n            }\n            \n            if ( event.name === HTTPHeadersSentEventType && event.data.frame.frame_type === tcpqlog.HTTP2FrameTypeName.headers ) {\n                // want to link HTTP stream IDs to resource URLs that are transported over the stream\n                const streamID = parseInt( event.data.stream_id, 10 );\n                if ( !HTTPStreamInfo.has(streamID) ) {\n                    HTTPStreamInfo.set( streamID, { headers: event.data.frame.headers, total_size: 0 } );\n                }\n                else {\n                    console.error(\"PacketizationTCPPreprocessor: HTTPStreamInfo already had an entry for this stream\", streamID, HTTPStreamInfo, event.data);\n                }\n            }\n        }\n\n        if ( TCPPayloadRanges.length !== 0 || TLSPayloadRanges.length !== 0 ){\n            console.error( \"PacketizationTCPPreprocessor: Not all payload ranges were used up!\", TCPPayloadRanges, TLSPayloadRanges);\n        }\n\n        if ( DEBUG_TLSpayloadSize !== DEBUG_HTTPtotalSize ) {\n            console.error(\"TLS payload size != HTTP payload size\", \"TLS: \", DEBUG_TLSpayloadSize, \"HTTP: \", DEBUG_HTTPtotalSize, \"Diff : \", Math.abs(DEBUG_TLSpayloadSize - DEBUG_HTTPtotalSize) );\n        }\n\n        output.push( { name: \"TCP\",         CSSClassName: \"tcppacket\",      ranges: TCPData,     rangeToString: PacketizationTCPPreProcessor.tcpRangeToString } );\n        output.push( { name: \"TLS\",         CSSClassName: \"tlspacket\",      ranges: TLSData,     rangeToString: PacketizationTCPPreProcessor.tlsRangeToString } );\n        output.push( { name: \"HTTP/2\",      CSSClassName: \"httppacket\",     ranges: HTTPData,    rangeToString: (r:PacketizationRange) => { return PacketizationTCPPreProcessor.httpRangeToString(r, HTTPStreamInfo); } } );\n        output.push( { name: \"Stream IDs\",  CSSClassName: \"streampacket\",   ranges: StreamData,  rangeToString: (r:PacketizationRange) => { return PacketizationTCPPreProcessor.streamRangeToString(r, HTTPStreamInfo); }, heightModifier: 0.6 } );\n        \n        return output;\n    }\n\n    public static tcpRangeToString(data:PacketizationRange) {\n\n        let text = \"TCP \";\n        text += ( data.isPayload ? \"Payload #\" : \"Header #\") + data.index + \" : packet size \" + data.size + \"<br/>\";\n        // text += \"[\" + data.offset + \", \" + (data.offset + data.length - 1) + \"] (size: \" + data.length + \")\";\n\n        return text;\n    };\n\n    public static tlsRangeToString(data:PacketizationRange) {\n\n        let text = \"TLS \";\n        text += ( data.isPayload ? \"Payload #\" :  (data.size > 5 ? \"Trailer (MAC/auth tag/padding/content type) \" : \"Header #\")) + data.index;\n        text += \" (TCP index: \" + data.lowerLayerIndex + \") : record size \" + data.extra.record_length + \", partial size \" + data.size + \"<br/>\";\n\n        if ( data.extra.DEBUG_wiresharkFrameNumber ) {\n            text += \"Wireshark frame number (DEBUG): \" + data.extra.DEBUG_wiresharkFrameNumber + \"<br/>\";\n        }\n\n        // text += \"Total record length: \" + data.record_length + \", Total payload length: \" + data.payload_length + \"<br/>\";\n        text += \"content type: \" + data.contentType;\n\n        return text;\n    };\n\n    public static httpRangeToString(data:PacketizationRange, HTTPStreamInfo:Map<number, any>) {\n\n        let text = \"H2 \";\n        text += ( data.isPayload ? \"Payload #\" : \"Header #\") + \" (TLS index: \" + data.lowerLayerIndex + \") : frame size \" + data.rawPacket.payload_length + \", partial size : \" + data.size + \"<br/>\";\n        text += \"frame type: \" + data.rawPacket.frame.frame_type + \", streamID: \" + data.rawPacket.stream_id;\n\n        if ( data.rawPacket.frame.stream_end ) {\n            text += \"<br/>\";\n            text += \"<b>STREAM END BIT SET</b>\";\n        }\n\n        const streamInfo = HTTPStreamInfo.get( parseInt(data.rawPacket.stream_id, 10) );\n        if ( streamInfo ) {\n            text += \"<br/>\";\n            let method = \"\";\n            let path = \"\";\n            for ( const header of streamInfo.headers ) {\n                if ( header.name === \":method\" ) {\n                    method = header.value;\n                }\n                else if ( header.name === \":path\" ) {\n                    path = header.value;\n                }\n            }\n            text += \"\" + method + \": \" + path + \"<br/>\";\n            text += \"total resource size: \" + streamInfo.total_size + \"<br/>\";\n        }\n\n        return text;\n    };\n\n    public static streamRangeToString(data:PacketizationRange, HTTPStreamInfo:Map<number, any>) {\n\n        let text = \"H2 \";\n        text += \"streamID: \" + data.rawPacket.stream_id;\n\n        if ( data.rawPacket.frame.stream_end ) {\n            text += \"<br/>\";\n            text += \"<b>STREAM END BIT SET</b>\";\n        }\n\n        const streamInfo = HTTPStreamInfo.get( parseInt(data.rawPacket.stream_id, 10) );\n        if ( streamInfo ) {\n            text += \"<br/>\";\n            let method = \"\";\n            let path = \"\";\n            for ( const header of streamInfo.headers ) {\n                if ( header.name === \":method\" ) {\n                    method = header.value;\n                }\n                else if ( header.name === \":path\" ) {\n                    path = header.value;\n                }\n            }\n            text += \"\" + method + \": \" + path + \"<br/>\";\n            text += \"total resource size: \" + streamInfo.total_size + \"<br/>\";\n        }\n\n        return text;\n    };\n}\n","import * as qlog from '@quictools/qlog-schema';\nimport { PacketizationLane, PacketizationRange, LightweightRange, PacketizationPreprocessor, PacketizationDirection } from './PacketizationDiagramModels';\nimport QlogConnection from '@/data/Connection';\nimport PacketizationDiagramDataHelper from './PacketizationDiagramDataHelper';\n\nexport default class PacketizationQUICPreProcessor {\n\n\n    public static process( connection:QlogConnection, direction:PacketizationDirection ):Array<PacketizationLane> {\n        const output = new Array<PacketizationLane>();\n        PacketizationQUICPreProcessor.frameSizeErrorShown = false;\n\n        // clients receive data, servers send it\n        let QUICEventType = qlog.TransportEventType.packet_received;\n        let HTTPEventType = qlog.HTTP3EventType.frame_parsed;\n\n        // if ( connection.vantagePoint && connection.vantagePoint.type === qlog.VantagePointType.server ){\n        if ( direction === PacketizationDirection.sending ) {\n            QUICEventType = qlog.TransportEventType.packet_sent;\n            HTTPEventType = qlog.HTTP3EventType.frame_created;\n        }\n\n        let HTTPHeadersSentEventType;\n        if ( connection.vantagePoint && connection.vantagePoint.type === qlog.VantagePointType.server ) {\n            HTTPHeadersSentEventType = qlog.HTTP3EventType.frame_parsed; // server receives request\n        }\n        else if ( connection.vantagePoint && connection.vantagePoint.type === qlog.VantagePointType.client ) {\n            HTTPHeadersSentEventType = qlog.HTTP3EventType.frame_created; // client sends request\n        }\n\n        let max_packet_size_local = 65527;\n        let max_packet_size_remote = 65527;\n\n        const QUICPacketData:Array<PacketizationRange> = [];\n        const QUICFrameData:Array<PacketizationRange> = [];\n        const HTTPData:Array<PacketizationRange> = [];\n        const StreamData:Array<PacketizationRange> = [];\n\n        let QUICPacketIndex = 0;\n        let QUICFrameIndex = 0;\n        let HTTPindex = 0;\n\n        let QUICmax = 0;\n\n        // these two need to be the same, or there is a problem with the trace\n        let DEBUG_QUICpayloadSize:number = 0;\n        let DEBUG_HTTPtotalSize:number = 0;\n\n        // these two are used to calculate \"efficiency\" (how much of the QUIC bytes are actually used to transport application-level data)\n        let QUICtotalSize:number =  0;\n        let HTTPpayloadSize:number = 0;\n\n        const QUICPayloadRangesPerStream:Map<string, Array<LightweightRange>> = new Map<string, Array<LightweightRange>>();\n        const HTTP3OutstandingFramesPerStream:Map<string, Array<qlog.IEventH3FrameCreated>> = new Map<string, Array<qlog.IEventH3FrameCreated>>();\n\n        const HTTPStreamInfo:Map<number,any> = new Map<number,any>();\n\n        // this is extracted into a separate function because we want to call it not just when an H3 frame event is discovered,\n        // but also when we find a QUIC Data frame for a given stream\n        const processHTTP3Frames = (outstandingFrames:Array<qlog.IEventH3FrameCreated>, payloadRangesForStream:Array<LightweightRange>) => {\n\n            while ( outstandingFrames.length > 0 ) {\n                const frameEvt = outstandingFrames.shift()!;\n\n                // HTTP3 header is always the VLIE-encoded frame_type, followed by the VLIE-encoded payload length. The rest depends on the frame.\n                // for now, we see all frame-specific stuff as the payload (even though that's probably not the best way to look at things... but it's consistent with HTTP2 for now)\n                const framePayloadLength = parseInt(frameEvt.byte_length!, 10);\n                const frameHeaderLength = PacketizationPreprocessor.VLIELength( PacketizationPreprocessor.H3FrameTypeToNumber(frameEvt.frame) ) + PacketizationPreprocessor.VLIELength( framePayloadLength );\n\n\n                const totalAvailablePayloadSize = payloadRangesForStream.reduce( (prev, cur) => prev + cur.size, 0 );\n                if ( totalAvailablePayloadSize < frameHeaderLength + framePayloadLength ) {\n                    // console.log(\"HTTP3 frame wasn't fully received yet, delaying for a while\", frameEvt.stream_id, totalAvailablePayloadSize, \" < \", frameHeaderLength + framePayloadLength, JSON.stringify(outstandingFrames));\n                    outstandingFrames.unshift( frameEvt );\n                    break;\n                }\n                // else {\n                //     console.log(\"HTTP3 frame was fully received, adding to the lane!\", frameEvt.stream_id, totalAvailablePayloadSize, \" >= \", frameHeaderLength + framePayloadLength, JSON.stringify(outstandingFrames));\n                // }\n\n                // console.log(\"About to extract\", frameHeaderLength, frameEvt.stream_id, JSON.stringify(payloadRangesForStream) );\n\n                const headerRanges = PacketizationPreprocessor.extractRanges( payloadRangesForStream, frameHeaderLength );\n\n                for ( const headerRange of headerRanges ) {\n                    HTTPData.push({\n                        isPayload: false,\n\n                        contentType: frameEvt.frame.frame_type,\n                        index: HTTPindex, \n                        lowerLayerIndex: QUICFrameIndex - 1, \n\n                        start: headerRange!.start,\n                        size: headerRange!.size,\n\n                        color: ( HTTPindex % 2 === 0 ) ? \"blue\" : \"lightblue\",\n\n                        extra: {\n                            frame_length: frameHeaderLength + framePayloadLength,\n                        },\n\n                        rawPacket: frameEvt,\n                    });\n\n                    if ( frameEvt.stream_id !== undefined ) {\n                        const streamID = parseInt( frameEvt.stream_id, 10 );\n\n                        StreamData.push({\n                            isPayload: true,\n\n                            contentType: frameEvt.frame.frame_type,\n                            index: HTTPindex, \n                            lowerLayerIndex: QUICFrameIndex - 1,\n\n                            start: headerRange!.start,\n                            size: headerRange!.size,\n\n                            color: PacketizationDiagramDataHelper.StreamIDToColor( \"\" + streamID, \"HTTP3\" )[0],\n\n                            extra: {\n                                frame_length: frameHeaderLength + framePayloadLength,\n                            },\n\n                            rawPacket: frameEvt,\n                        });\n                    }\n                }\n\n                DEBUG_HTTPtotalSize += frameHeaderLength;\n\n                if ( framePayloadLength > 0 ) {\n\n                    // console.log(\"About to extract\", framePayloadLength, frameEvt.stream_id, JSON.stringify(payloadRangesForStream) );\n                \n                    const payloadRanges = PacketizationPreprocessor.extractRanges( payloadRangesForStream, framePayloadLength );\n\n                    for ( const payloadRange of payloadRanges ) {\n                        HTTPData.push({\n                            isPayload: true,\n\n                            contentType: frameEvt.frame.frame_type,\n                            index: HTTPindex, \n                            lowerLayerIndex: QUICFrameIndex, // belongs to the \"previous\" TLS record // TODO: this is probably wrong... \n\n                            start: payloadRange!.start,\n                            size: payloadRange!.size,\n\n                            color: ( HTTPindex % 2 === 0 ) ? \"blue\" : \"lightblue\",\n\n                            extra: {\n                                frame_length: frameHeaderLength + framePayloadLength,\n                            },\n\n                            rawPacket: frameEvt,\n                        });\n\n\n                        if ( frameEvt.stream_id !== undefined ) {\n                            const streamID = parseInt( frameEvt.stream_id, 10 );\n\n                            StreamData.push({\n                                isPayload: true,\n\n                                contentType: frameEvt.frame.frame_type,\n                                index: HTTPindex, \n                                lowerLayerIndex: QUICFrameIndex, // belongs to the \"previous\" TLS record // TODO: this is probably wrong... \n\n                                start: payloadRange!.start,\n                                size: payloadRange!.size,\n\n                                color: PacketizationDiagramDataHelper.StreamIDToColor( \"\" + streamID, \"HTTP3\" )[0],\n\n                                extra: {\n                                    frame_length: frameHeaderLength + framePayloadLength,\n                                },\n\n                                rawPacket: frameEvt,\n                            });\n                        }\n                    }\n\n                    if ( frameEvt.frame && frameEvt.frame.frame_type === qlog.HTTP3FrameTypeName.data ) {\n                        const streamID = parseInt( frameEvt.stream_id, 10 );\n                        if ( streamID !== 0 ) {\n                            if ( !HTTPStreamInfo.has(streamID) ) {\n                                console.error(\"PacketizationDiagram: trying to increase payload size sum, but streamID not yet known! Potentially Server Push (which we don't support yet)\", streamID, HTTPStreamInfo);\n                            }\n                            else {\n                                HTTPStreamInfo.get( streamID ).total_size += framePayloadLength;\n                            }\n                        }\n                    }\n\n                    if ( frameEvt.frame && \n                         (frameEvt.frame.frame_type === qlog.HTTP3FrameTypeName.data ||\n                          frameEvt.frame.frame_type === qlog.HTTP3FrameTypeName.headers) ) {\n                            HTTPpayloadSize += framePayloadLength;\n                    }\n\n                    DEBUG_HTTPtotalSize += framePayloadLength;\n                }\n\n                ++HTTPindex;\n            }\n        }; // end processHTTP3frames\n\n\n        for ( const eventRaw of connection.getEvents() ) {\n\n            const event = connection.parseEvent( eventRaw );\n            const data = event.data;\n\n            if ( event.name === QUICEventType ){ // packet_sent or _received\n\n                if ( !data.header.packet_size ) {\n                    console.error(\"PacketizationQUICPreProcessor: packet without header.packet_size set... ignoring\", QUICEventType, eventRaw);\n                    continue;\n                }\n\n                const totalPacketLength = parseInt( data.header.packet_size, 10 );\n                const trailerLength = 16; // default authentication tag size is 16 bytes // TODO: support GCM8?\n                let payloadLength = data.header.payload_length - trailerLength;\n                let headerLength = totalPacketLength - payloadLength;\n\n                // lane 1 : QUIC packets\n\n                // if not set/known explicitly: try to derive from header type\n                if ( !data.header.payload_length ) {\n\n                    if ( data.packet_type === qlog.PacketType.onertt ) {\n                        headerLength = Math.min(4, totalPacketLength); // TODO: actually calculate\n                    }\n                    else {\n                        headerLength = Math.min(4, totalPacketLength); // TODO: actually calculate\n                    }\n\n                    payloadLength = totalPacketLength - headerLength - trailerLength;\n                }\n\n                // QUIC packet header\n                QUICPacketData.push({\n                    index: QUICPacketIndex,\n                    isPayload: false,\n\n                    start: QUICmax,\n                    size: headerLength,\n\n                    color: ( QUICPacketIndex % 2 === 0 ) ? \"black\" : \"grey\",\n\n                    contentType: data.packet_type,\n\n                    lowerLayerIndex: -1,\n                    rawPacket: data,\n                });\n\n                // QUIC packet payload\n                QUICPacketData.push({\n                    index: QUICPacketIndex,\n                    isPayload: true,\n\n                    start: QUICmax + headerLength,\n                    size: payloadLength,\n\n                    color: ( QUICPacketIndex % 2 === 0 ) ? \"black\" : \"grey\",\n\n                    contentType: data.packet_type,\n\n                    lowerLayerIndex: -1,\n                    rawPacket: data,\n                });\n\n                // QUIC tailer (authentication tag)\n                QUICPacketData.push({\n                    index: QUICPacketIndex,\n                    isPayload: false,\n\n                    start: QUICmax + headerLength + payloadLength,\n                    size: trailerLength,\n\n                    color: ( QUICPacketIndex % 2 === 0 ) ? \"black\" : \"grey\",\n\n                    contentType: data.packet_type,\n\n                    lowerLayerIndex: -1,\n                    rawPacket: data,\n                });\n                \n                // lane 2 : QUIC frames\n                if ( data.frames ) {\n\n                    let frameStart = QUICmax + headerLength;\n\n                    const offset = PacketizationQUICPreProcessor.backfillFrameSizes( payloadLength, data.frames );\n                    // offset is needed when we try to guesstimate the frame sizes ourselves (if frame.frame_size isn't set)\n                    // if offset != 0, we've guesstimated wrong\n                    // deal with this by adding a bogus frame\n                    if ( offset !== 0 ) {\n                        const bogus = {\n                            header_size: offset,\n                            payload_size: 0,\n\n                            frame_type: \"qvis-injected FILLER (deal with incorrectly guesstimated frame size)\",\n\n                            qvis: { sequence: { hide: true } }, // make sure these don't show up in the sequence diagram\n                        };\n\n                        data.frames.unshift( bogus );\n \n                        // frameStart += offset; // no longer needed now we add the bogus frame\n                    }\n\n                    for ( const frame of data.frames ) {\n                        \n                        if ( frame.header_size > 0 ){\n                            // QUIC frame header\n                            QUICFrameData.push({\n                                index: (frame.frame_type.indexOf(\"qvis\") >= 0 ? -1 : QUICFrameIndex),\n                                isPayload: false,\n            \n                                start: frameStart,\n                                size: frame.header_size,\n            \n                                color: (frame.frame_type.indexOf(\"qvis\") >= 0 ? \"yellow\" : ( QUICFrameIndex % 2 === 0 ) ? \"red\" : \"pink\" ),\n            \n                                contentType: frame.frame_type,\n            \n                                lowerLayerIndex: QUICPacketIndex,\n                                rawPacket: frame,\n                            });\n                        }\n        \n                        if ( frame.payload_size > 0 ) {\n                            // QUIC frame payload\n                            QUICFrameData.push({\n                                index: QUICFrameIndex,\n                                isPayload: true,\n            \n                                start: frameStart + frame.header_size,\n                                size: frame.payload_size,\n            \n                                color: ( QUICFrameIndex % 2 === 0 ) ? \"red\" : \"pink\",\n            \n                                contentType: frame.frame_type,\n            \n                                lowerLayerIndex: QUICPacketIndex,\n                                rawPacket: frame,\n                            });\n\n                            if ( frame.frame_type === qlog.QUICFrameTypeName.stream ) {\n\n                                DEBUG_QUICpayloadSize += frame.payload_size;\n\n                                let ranges = QUICPayloadRangesPerStream.get( \"\" + frame.stream_id );\n                                if ( !ranges ) {\n                                    ranges = new Array<LightweightRange>();\n                                    QUICPayloadRangesPerStream.set( \"\" + frame.stream_id, ranges );\n                                }\n\n                                ranges.push( {start: frameStart + frame.header_size, size: frame.payload_size} );\n\n                                // if H3 frames are longer than their first QUIC frame, we don't get additional events for them in many logs\n                                // (proper form would be to log data_moved for them, but no-one is doing this correctly yet)\n                                // so... simply re-check everytime we add more payload ranges if H3 frames we were holding back can be processed now\n                                const outstandingFrames = HTTP3OutstandingFramesPerStream.get( \"\" + frame.stream_id );\n                                if ( outstandingFrames && outstandingFrames.length > 0 ) {\n                                    processHTTP3Frames( outstandingFrames, ranges );\n                                }\n\n                                if ( frame.stream_id !== undefined && frame.stream_id % 2 !== 0 ) {\n                                    // unidirectional stream\n                                    console.log(\"PacketizationPreProcessor: data seen on unidirectional stream: \", frame.stream_id, frame, data );\n                                }\n                            }\n                        }\n\n                        frameStart += frame.header_size + frame.payload_size;\n\n                        if ( frame.frame_type.indexOf(\"qvis\") < 0 ) {\n                            ++QUICFrameIndex;\n                        }\n                    }\n                }\n\n                QUICmax += totalPacketLength;\n                ++QUICPacketIndex;\n\n                QUICtotalSize += totalPacketLength;\n            } // end checking for QUIC events\n\n            else if ( event.name === HTTPEventType ) { // frame_created or _parsed\n                \n                if ( !data.byte_length ) {\n                    console.error(\"H3 frame didn't have byte_length set! skipping...\", data);\n                    continue;\n                }\n\n                const payloadRangesForStream = QUICPayloadRangesPerStream.get( \"\" + data.stream_id );\n\n                let skipProcessing = false;\n\n                if ( !payloadRangesForStream ) {\n                    if ( direction === PacketizationDirection.sending ) {\n                        // when sending, frames are created before they are sent, so frame_created events happen before packet_sent and so also before QUICPayloadRangesPerStream is filled for this stream\n                        // since we already had the setup with the HTTP3OutstandingFramesPerStream to deal with frame_parsed only happening once, even if the full frame hadn't been received yet\n                        // we re-use this here for \"too early\" frame_created events as well\n                        // the frames are added to outstandingFrames, but not yet processed, which is called when the packet_sent actually happens above\n                        skipProcessing = true;\n                    } \n                    else {\n                        console.error(\"No payload ranges known for this stream_id, skipping...\", payloadRangesForStream, data.stream_id, JSON.stringify(QUICPayloadRangesPerStream) );\n                        continue;\n                    }\n                }\n\n                let outstandingFrames = HTTP3OutstandingFramesPerStream.get( \"\" + data.stream_id );\n                if ( !outstandingFrames ) {\n                    outstandingFrames = new Array<qlog.IEventH3FrameCreated>();\n                    HTTP3OutstandingFramesPerStream.set( \"\" + data.stream_id, outstandingFrames );\n                }\n\n                // H3 frames can be much longer than 1 QUIC packet, but are typically logged after the first QUIC packet they appear in (where the frame header is in)\n                // so, we hold back frames until they can be fully filled in the payload ranges\n                outstandingFrames.push( data );\n\n                if ( !skipProcessing ) {\n                    processHTTP3Frames( outstandingFrames, payloadRangesForStream! );\n                }\n\n            } // end checking for HTTP3 events\n\n            \n            if ( event.name === HTTPHeadersSentEventType && event.data.frame.frame_type === qlog.HTTP3FrameTypeName.headers ) {\n                // want to link HTTP stream IDs to resource URLs that are transported over the stream\n                const streamID = parseInt( event.data.stream_id, 10 );\n                if ( !HTTPStreamInfo.has(streamID) ) {\n                    HTTPStreamInfo.set( streamID, { headers: event.data.frame.headers, total_size: 0 } );\n                }\n                else {\n                    console.error(\"PacketizationQUICPreprocessor: HTTPStreamInfo already had an entry for this stream\", streamID, HTTPStreamInfo, event.data);\n                }\n            }\n\n            if ( event.name === qlog.TransportEventType.parameters_set ) {\n                if ( data.owner && data.owner === \"local\" ) {\n                    if ( data.max_packet_size ) {\n                        max_packet_size_local = data.max_packet_size;\n                    }\n                }\n                else if ( data.owner && data.owner === \"remote\" ) {\n                    if ( data.max_packet_size ) {\n                        max_packet_size_remote = data.max_packet_size;\n                    }\n                }\n            }\n        } // end looping over all events\n\n        let controlStreamData = 0;\n        for ( const entry of QUICPayloadRangesPerStream.entries() ) {\n\n            // 0, 4, 8 and 1, 5, 9, etc. are normal bidirectional data streams\n            // 3, 7, 11 and 2,6,10 etc. are typically unidirectional control streams and implementations don't always log frames for them (e.g., QPACK control messages)\n            // so for these, it's \"normal\" to have leftover data, we check for that below with DEBUG_HTTPTotalSize\n            const streamID = parseInt(entry[0], 10);\n            if ( (streamID + 1) % 4 === 0 ) { // 3, 7, 11, ...\n                for ( const range of entry[1] ) {\n                    controlStreamData += range.size;\n                }\n            }\n            else if ( (streamID + 2) % 4 === 0 ) { // 2, 6, 10, ...\n                for ( const range of entry[1] ) {\n                    controlStreamData += range.size;\n                }\n            }\n            else {\n                if ( entry[1].length !== 0 ) {\n                    console.error( \"PacketizationQUICPreprocessor: Not all QUIC payload ranges were used up!\", entry[0], JSON.stringify(entry[1]), HTTP3OutstandingFramesPerStream.get(\"\" + entry[0]) );\n                }\n            }\n        }\n\n        for ( const entry of HTTP3OutstandingFramesPerStream.entries() ) {\n            if ( entry[1].length !== 0 ) {\n                console.error( \"PacketizationQUICPreprocessor: Not all HTTP3 frames found a home!\", entry[0], JSON.stringify(entry[1]) );\n            }\n        }\n\n        if ( DEBUG_QUICpayloadSize !== DEBUG_HTTPtotalSize ) {\n            const adjustedHTTPsizeForControlStreams = DEBUG_HTTPtotalSize + controlStreamData;\n\n            if ( DEBUG_QUICpayloadSize !== adjustedHTTPsizeForControlStreams ) {\n                console.error(\"QUIC payload size != HTTP3 payload size\", \"QUIC: \", DEBUG_QUICpayloadSize, \n                                                                         \"HTTP: \", DEBUG_HTTPtotalSize, \n                                                                         \"HTTP leftover on control streams: \", controlStreamData, \n                                                                         \"Diff : \", Math.abs(DEBUG_QUICpayloadSize - DEBUG_HTTPtotalSize) );\n            }\n        }\n        // else {\n        //     console.log(\"QUIC and HTTP3 payload sizes were equal! as they should be!\", DEBUG_QUICpayloadSize, DEBUG_HTTPtotalSize);\n        // }\n\n        const efficiency = HTTPpayloadSize / QUICtotalSize;\n\n        output.push( { name: \"QUIC packets\",         CSSClassName: \"quicpacket\",      ranges: QUICPacketData,     rangeToString: PacketizationQUICPreProcessor.quicRangeToString, max_size_local: max_packet_size_local, max_size_remote: max_packet_size_remote, efficiency: efficiency } );\n        output.push( { name: \"QUIC frames\",          CSSClassName: \"quicframe\",       ranges: QUICFrameData,      rangeToString: PacketizationQUICPreProcessor.quicFrameRangeToString } );\n        output.push( { name: \"HTTP/3\",               CSSClassName: \"httpframe\",       ranges: HTTPData,           rangeToString: (r:PacketizationRange) => { return PacketizationQUICPreProcessor.httpFrameRangeToString(r, HTTPStreamInfo); } } );\n        output.push( { name: \"Stream IDs\",           CSSClassName: \"streampacket\",    ranges: StreamData,         rangeToString: (r:PacketizationRange) => { return PacketizationQUICPreProcessor.streamRangeToString(r, HTTPStreamInfo); }, heightModifier: 0.6 } );\n        \n        return output;\n    }\n\n\n    public static quicRangeToString(data:PacketizationRange) {\n\n        let text = \"QUIC \";\n\n        text += ( data.isPayload ? \"Payload #\" : (data.size === 16 ? \"Trailer (authentication tag) #\" : \"Header #\")) + data.index + \" : size \" + data.size + \"<br/>\";\n        text += \"Packet type : \" + data.contentType + \", Packet nr : \" + data.rawPacket.header.packet_number + \"<br/>\";\n\n        return text;\n    };\n\n    public static quicFrameRangeToString(data:PacketizationRange) {\n\n        let text = \"QUIC Frame #\" + data.index + \" : size \" + data.size + \"<br/>\";\n        text += \"Frame type : \" + data.contentType + \", stream ID: \" + (data.rawPacket && data.rawPacket.stream_id !== undefined ? data.rawPacket.stream_id : \"none\") + \"<br/>\";\n        if ( data.rawPacket && data.rawPacket.fin === true ) {\n            text += \"<b>FIN BIT SET</b>\";\n        }\n\n        return text;\n    };\n\n    public static httpFrameRangeToString(data:PacketizationRange, HTTPStreamInfo:Map<number, any>) {\n\n        let text = \"H3 \";\n        text += ( data.isPayload ? \"Payload #\" : \"Header #\") + data.index + \" (QUIC frame index: \" + data.lowerLayerIndex + \") : frame size \" + data.extra.frame_length + \", partial size : \" + data.size + \"<br/>\";\n        text += \"frame type: \" + data.rawPacket.frame.frame_type + \", streamID: \" + data.rawPacket.stream_id;\n\n        const streamInfo = HTTPStreamInfo.get( parseInt(data.rawPacket.stream_id, 10) );\n        if ( streamInfo ) {\n            text += \"<br/>\";\n            let method = \"\";\n            let path = \"\";\n            for ( const header of streamInfo.headers ) {\n                if ( header.name === \":method\" ) {\n                    method = header.value;\n                }\n                else if ( header.name === \":path\" ) {\n                    path = header.value;\n                }\n            }\n            text += \"\" + method + \": \" + path + \"<br/>\";\n            text += \"total resource size: \" + streamInfo.total_size + \"<br/>\";\n        }\n\n        return text;\n    };\n\n    public static streamRangeToString(data:PacketizationRange, HTTPStreamInfo:Map<number, any>) {\n\n        let text = \"H3 \";\n        text += \"streamID: \" + data.rawPacket.stream_id;\n\n        const streamInfo = HTTPStreamInfo.get( parseInt(data.rawPacket.stream_id, 10) );\n        if ( streamInfo ) {\n            text += \"<br/>\";\n            let method = \"\";\n            let path = \"\";\n            for ( const header of streamInfo.headers ) {\n                if ( header.name === \":method\" ) {\n                    method = header.value;\n                }\n                else if ( header.name === \":path\" ) {\n                    path = header.value;\n                }\n            }\n            text += \"\" + method + \": \" + path + \"<br/>\";\n            text += \"total resource size: \" + streamInfo.total_size + \"<br/>\";\n        }\n\n        return text;\n    };\n\n    protected static frameSizeErrorShown:boolean = false;\n\n    // payloadLength : amount of bytes to distributed across the frames\n    protected static backfillFrameSizes( payloadLength:number, frames:Array<any> ):number {\n\n        let offset = 0;\n\n        // before draft-02, the .frame_size field wasn't specced in qlog... so try to backfill it if it isn't there, but use it if it is\n        // (we assume that if one frame has frame_size set, they all have)\n        if ( frames[0].frame_size ) { // normal case \n\n            let totalFrameLength = 0;\n            for ( const frame of frames ) {\n                totalFrameLength += frame.frame_size;\n            }\n\n            offset += (payloadLength - totalFrameLength);\n\n            if ( offset !== 0 ){\n                console.error(\"PacketizationQUICPreProcessor: frame_sizes don't fill the entire packet payload!\", offset);\n            }\n        }\n        else {\n\n            if ( !PacketizationQUICPreProcessor.frameSizeErrorShown ) {\n                console.error(\"PacketizationQUICPreProcessor: qlog trace does not have frame_size fields set properly. We -guesstimate- them here, so exact frame sizes are expected to be off!\");\n                PacketizationQUICPreProcessor.frameSizeErrorShown = true;\n            }\n\n            let simulatedPayloadLength = 0;\n            const fakeFrameHeaderSize = 1; // pretend all (STREAM) frames have a header of size 1 (totally wrong, but ok for now)\n\n            // set the new frame.frame_size property on all frames, representing the TOTAL frame size (so header + payload)\n            // we don't know the actual size of the frames, so we start with the ones that we do know (STREAM) and then distribute the leftover size over the rest\n            let otherFrameCount = 0;\n            for ( const frame of frames ) {\n                if ( frame.frame_type === qlog.QUICFrameTypeName.stream ) {\n                    if ( frame.length !== undefined ) {\n                        frame.frame_size = fakeFrameHeaderSize + parseInt(frame.length, 10);// TODO: consider re-transmissions/overlapping data/etc. with .offset\n                        simulatedPayloadLength += frame.frame_size; \n                    }\n                    else {\n                        console.error(\"PacketizationQUICPreProcessor: stream frame with no length attribute! skipping...\", frame);\n                    }\n                }\n                if ( frame.frame_type === qlog.QUICFrameTypeName.max_streams ) {\n                    // did strange things to googlevideo endpoint, so hack something that looks more plausible here\n                    frame.frame_size = fakeFrameHeaderSize + 4;\n                }\n                else {\n                    otherFrameCount++;\n                }\n            }\n\n            const leftoverLength = payloadLength - simulatedPayloadLength;\n            if ( leftoverLength < 0 ) {\n                console.error(\"PacketizationQUICPreProcessor: something went wrong calculating frame sizes!\", payloadLength, simulatedPayloadLength, frames);\n                \n                return 0;\n            }\n\n            const lengthPerOtherFrame = Math.floor(leftoverLength / otherFrameCount);\n            for ( const frame of frames ) {\n                if ( frame.frame_type !== qlog.QUICFrameTypeName.stream ) {\n                    frame.frame_size = lengthPerOtherFrame;\n                    simulatedPayloadLength += frame.frame_size;\n                }\n            }\n\n            if ( payloadLength - simulatedPayloadLength < 0 ) {\n                console.error(\"PacketizationQUICPreProcessor: payload is longer than payload! Shouldn't happen!\", payloadLength, simulatedPayloadLength, lengthPerOtherFrame, frames );\n            }\n\n            offset += (payloadLength - simulatedPayloadLength); // have some rounding errors potentially from the Math.floor, so account for that here \n        }\n\n\n        // header_size and payload_size aren't in qlog, but we calculate it here for ease of use below\n        for ( const frame of frames ) {\n            if ( frame.length ) { // STREAM and CRYPTO for now\n                frame.header_size = frame.frame_size - frame.length;\n                frame.payload_size = parseInt( frame.length, 10 );\n            }\n            else {\n                frame.header_size = frame.frame_size;\n                frame.payload_size = 0;\n            }\n        }\n\n        return offset;\n    }\n}\n","import QlogConnection from '@/data/Connection';\nimport * as qlog from '@quictools/qlog-schema';\nimport * as d3 from 'd3';\nimport PacketizationDiagramDataHelper from './PacketizationDiagramDataHelper';\nimport PacketizationTCPPreProcessor from './PacketizationTCPPreProcessor';\nimport TCPToQlog from '@/components/filemanager/pcapconverter/tcptoqlog';\nimport { PreSpecEventParser } from '@/data/QlogLoader';\nimport PacketizationQUICPreProcessor from './PacketizationQUICPreProcessor';\nimport { PacketizationDirection } from './PacketizationDiagramModels';\n\n\nexport default class PacketizationDiagramD3Renderer {\n\n    public containerID:string;\n    public axisLocation:\"top\"|\"bottom\" = \"bottom\";\n\n    // public svgID:string;\n    public rendering:boolean = false;\n\n    protected svg!:any;\n    protected tooltip!:any;\n    protected connection!:QlogConnection;\n    protected direction!:PacketizationDirection;\n\n    protected totalHeight = 100;\n\n    private dimensions:any = {};\n\n    constructor(containerID:string) {\n        this.containerID = containerID;\n    }\n\n    public getDirection() { return this.direction; }  \n   \n    public async render(connection:QlogConnection, direction:PacketizationDirection ):Promise<boolean> {\n        if ( this.rendering ) {\n            return false;\n        }\n\n        console.log(\"PacketizationDiagramD3Renderer:render\", connection);\n\n        this.rendering = true;\n\n        const canContinue:boolean = this.setup(connection, direction);\n\n        if ( !canContinue ) {\n            this.rendering = false;\n\n            return false;\n        }\n\n        await this.renderLive();\n        this.rendering = false;\n\n        return true;\n    }\n\n    protected setup(connection:QlogConnection, direction:PacketizationDirection){\n        this.connection = connection;\n        this.connection.setupLookupTable();\n\n        this.direction = direction;\n\n        const container:HTMLElement = document.getElementById(this.containerID)!;\n\n        this.dimensions.margin = {top: 30, right: Math.round(container.clientWidth * 0.05), bottom: 20, left: 100};\n        if ( this.axisLocation === \"top\" ){\n            this.dimensions.margin.top = 30;\n        }\n        else {\n            this.dimensions.margin.bottom = 40;\n        }\n\n        // width and height are the INTERNAL widths (so without the margins)\n        this.dimensions.width = container.clientWidth - this.dimensions.margin.left - this.dimensions.margin.right;\n        this.dimensions.height = this.totalHeight;\n\n\n        // clear old rendering\n        d3.select( \"#\" + this.containerID ).selectAll(\"*\").remove();\n\n        this.svg = d3.select(\"#\" + this.containerID)\n            .append(\"svg\")\n                .attr(\"width\", this.dimensions.width + this.dimensions.margin.left + this.dimensions.margin.right)\n                .attr(\"height\", this.dimensions.height + this.dimensions.margin.top + this.dimensions.margin.bottom)\n                // .attr(\"viewBox\", [0, 0, this.dimensions.width, this.dimensions.height])\n                .attr(\"xmlns\", \"http://www.w3.org/2000/svg\")\n                .attr(\"xmlns:xlink\", \"http://www.w3.org/1999/xlink\")\n                .attr(\"font-family\", \"Trebuchet-ms\")\n            .append(\"g\")\n                .attr(\"transform\",\n                    \"translate(\" + this.dimensions.margin.left + \",\" + this.dimensions.margin.top + \")\");\n\n        this.tooltip = d3.select(\"#packetization-packet-tooltip\")\n            .style(\"opacity\", 0)\n            .style(\"position\", \"absolute\")\n            .style(\"padding\", \"5px\")\n            .style(\"pointer-events\", \"none\") // crucial! \n            .style(\"background\", \"lightsteelblue\");\n\n        return true;\n    }\n\n    \n\n    protected async renderLive() {\n        console.log(\"Rendering packetization diagram\");\n\n        // const parser = this.connection.getEventParser();\n\n        // want total millisecond range in this trace, so last - first\n        // const xMSRange = parser.load(this.connection.getEvents()[ this.connection.getEvents().length - 1 ]).absoluteTime - \n        //                parser.load(this.connection.getEvents()[0]).absoluteTime;\n\n        // console.log(\"DEBUG MS range for this trace: \", xMSRange);\n\n        let lanes = [];\n\n        if ( this.connection.commonFields && this.connection.commonFields.protocol_type === \"TCP_HTTP2\" ) {\n            lanes = PacketizationTCPPreProcessor.process(this.connection, this.direction);\n        }\n        else { // assuming QUIC_H3\n            lanes = PacketizationQUICPreProcessor.process(this.connection, this.direction);\n        }\n\n\n        let xMax = 0;\n        if ( lanes.length > 0 && lanes[0].ranges && lanes[0].ranges.length > 0 ) {\n            const bottomRanges = lanes[0].ranges;\n            xMax = bottomRanges[ bottomRanges.length - 1 ].start + bottomRanges[ bottomRanges.length - 1 ].size;\n        }\n\n        console.log(\"PacketizationDiagram: rendering data\", lanes);\n\n        const clip = this.svg.append(\"defs\").append(\"SVG:clipPath\")\n            .attr(\"id\", \"clip\")\n            .append(\"SVG:rect\")\n            .attr(\"width\", this.dimensions.width )\n            .attr(\"height\", this.dimensions.height )\n            .attr(\"x\", 0 )\n            .attr(\"y\", 0);\n\n        const rects = this.svg.append('g')\n            .attr(\"clip-path\", \"url(#clip)\");\n\n\n        const packetSidePadding = 0.3;\n\n        const xDomain = d3.scaleLinear()\n            .domain([0, xMax])\n            .range([ 0, this.dimensions.width ]);\n\n        const xAxis = this.svg.append(\"g\");\n        \n        if ( this.axisLocation === \"top\" ) {\n            xAxis\n                .call(d3.axisTop(xDomain));\n        }\n        else {\n            xAxis\n                .attr(\"transform\", \"translate(0,\" + this.dimensions.height + \")\")\n                .call(d3.axisBottom(xDomain));\n        }\n\n        // https://bl.ocks.org/d3noob/a22c42db65eb00d4e369\n        const mouseOver = (toString:any, data:any, index:number) => {\n\n            this.tooltip.transition()\n                .duration(100)\n                .style(\"opacity\", .95);\n\n            const text = toString(data);\n\n            this.tooltip\n                .html( text )\n                .style(\"left\", (d3.event.pageX + 15) + \"px\")\n                .style(\"top\", (d3.event.pageY - 75) + \"px\");\n        };\n\n        const mouseOut = (data:any, index:number) => {\n            this.tooltip.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", 0);\t\n        };\n\n        const packetHeight = this.totalHeight * (1 / lanes.length);\n\n        // goal: a string like \".packet,.tlspacket,.httppacket,.streampacket\", to be used when zooming to select all elements at once\n        const allClassNames = lanes.reduce( (prev, cur) => { prev.push( \".\" + cur.CSSClassName ); return prev; }, new Array<string>()).join(\",\");\n\n        for ( const [index, lane] of lanes.entries() ) {\n\n            // in the lanes array, the bottom range (e.g., TCP) is on index 0, the one above that (e.g., TLS) on index 1, etc.\n            // however, when rendering, our y=0 is on the TOP left, instead of bottom left (so e.g., the Stream info need to be on index 0, TCP on index 3)\n            // so we have to invert the range to accurately calculate y positions\n            const yOffsetMultiplier = (lanes.length - index) - 1; // e.g., index 3 (last in a range of 4) gets: (4 - 3) - 1 = 0, which is the top of the graph, as expected\n\n            const heightModifier = (lane.heightModifier !== undefined) ? lane.heightModifier : 1;\n\n            rects\n                .selectAll(\"rect.\" + lane.CSSClassName )\n                .data(lane.ranges)\n                .enter()\n                .append(\"rect\")\n                    .attr(\"x\", (d:any) => xDomain(d.start) - packetSidePadding )\n                    .attr(\"y\", (d:any) => (packetHeight * yOffsetMultiplier) + packetHeight * (d.isPayload ? 0 : 0.40) )\n                    .attr(\"fill\", (d:any) => d.color )\n                    .style(\"opacity\", 1)\n                    .attr(\"class\",  lane.CSSClassName)\n                    .attr(\"width\", (d:any) => xDomain(d.start + d.size) - xDomain(d.start) + packetSidePadding * 2)\n                    .attr(\"height\", (d:any) => heightModifier * (packetHeight * (d.isPayload ? 1 : 0.60)))\n                    .style(\"pointer-events\", \"all\")\n                    .on(\"mouseover\", (data:any, index:any) => { return mouseOver( lane.rangeToString, data, index ); })\n                    .on(\"mouseout\", mouseOut );\n\n            this.svg.append('g')\n                // text\n                .append(\"text\")\n                    .attr(\"x\", -5 )\n                    .attr(\"y\", (packetHeight * yOffsetMultiplier) + (packetHeight / 1.75) ) // 1.75 should be 2, but eyeballing says 1.75 is better\n                    .attr(\"dominant-baseline\", \"middle\")\n                    .style(\"text-anchor\", \"end\")\n                    .style(\"font-size\", \"14\")\n                    .style(\"font-family\", \"Trebuchet MS\")\n                    .attr(\"fill\", \"#000000\")\n                    .text( lane.name ); \n\n        }\n\n        // legend\n        this.svg.append('g')\n            // text\n            .append(\"text\")\n                .attr(\"x\", xDomain(xMax / 2) )\n                .attr(\"y\", this.dimensions.height + this.dimensions.margin.bottom - 10 )\n                .attr(\"dominant-baseline\", \"baseline\")\n                .style(\"text-anchor\", \"middle\")\n                .style(\"font-size\", \"14\")\n                .style(\"font-family\", \"Trebuchet MS\")\n                // .style(\"font-weight\", \"bold\")\n                .attr(\"fill\", \"#000000\")\n                .text( \"Bytes \" + (this.direction === PacketizationDirection.sending ? \"sent\" : \"received\") ); \n\n        if ( lanes[0].max_size_local ) {\n\n            const localname = (this.connection.vantagePoint && this.connection.vantagePoint.type === qlog.VantagePointType.server) ? \"server\" : \"client\";\n            const remotename = (localname === \"client\") ? \"server\" : \"client\";\n\n            this.svg.append('g')\n                // text\n                .append(\"text\")\n                    .attr(\"x\", xDomain(xMax) - 450 )\n                    .attr(\"y\", this.dimensions.height + this.dimensions.margin.bottom - 10 )\n                    .attr(\"dominant-baseline\", \"baseline\")\n                    .style(\"text-anchor\", \"start\")\n                    .style(\"font-size\", \"14\")\n                    .style(\"font-family\", \"Trebuchet MS\")\n                    // .style(\"font-weight\", \"bold\")\n                    .attr(\"fill\", \"#000000\")\n                    .text( \"max receiving size \" + localname + \": \" + lanes[0].max_size_local );\n\n            this.svg.append('g')\n                // text\n                .append(\"text\")\n                    .attr(\"x\", xDomain(xMax) )\n                    .attr(\"y\", this.dimensions.height + this.dimensions.margin.bottom - 10 )\n                    .attr(\"dominant-baseline\", \"baseline\")\n                    .style(\"text-anchor\", \"end\")\n                    .style(\"font-size\", \"14\")\n                    .style(\"font-family\", \"Trebuchet MS\")\n                    // .style(\"font-weight\", \"bold\")\n                    .attr(\"fill\", \"#000000\")\n                    .text( \"max receiving size \" + remotename + \": \" + lanes[0].max_size_remote );\n        }\n\n        if ( lanes[0].efficiency ) {\n\n            this.svg.append('g')\n                // text\n                .append(\"text\")\n                    .attr(\"x\", xDomain(0) )\n                    .attr(\"y\", this.dimensions.height + this.dimensions.margin.bottom - 10 )\n                    .attr(\"dominant-baseline\", \"baseline\")\n                    .style(\"text-anchor\", \"start\")\n                    .style(\"font-size\", \"14\")\n                    .style(\"font-family\", \"Trebuchet MS\")\n                    // .style(\"font-weight\", \"bold\")\n                    .attr(\"fill\", \"#000000\")\n                    .text( \"efficiency \" + (lanes[0].efficiency * 100).toFixed(2) + \"%\" );\n        }\n\n        let flowLabel = \"\";\n        if ( this.connection.vantagePoint && this.connection.vantagePoint.type === qlog.VantagePointType.server ) { \n            if ( this.direction === PacketizationDirection.sending ) {\n                flowLabel = \"Data sent from server to client (trace vantagepoint = server)\";\n            }\n            else {\n                flowLabel = \"Data received by server from client (trace vantagepoint = server)\";\n            }\n        }\n        else if ( this.connection.vantagePoint && this.connection.vantagePoint.type === qlog.VantagePointType.client ) {\n            if ( this.direction === PacketizationDirection.sending ) {\n                flowLabel = \"Data sent from client to server (trace vantagepoint = client)\";\n            }\n            else {\n                flowLabel = \"Data received by client from server (trace vantagepoint = client)\";\n            }\n        }\n        \n        this.svg.append('g')\n            // text\n            .append(\"text\")\n                .attr(\"x\", xDomain(xMax / 2) )\n                .attr(\"y\", -10 ) // eyeballed\n                .attr(\"dominant-baseline\", \"baseline\")\n                .style(\"text-anchor\", \"middle\")\n                .style(\"font-size\", \"14\")\n                .style(\"font-family\", \"Trebuchet MS\")\n                // .style(\"font-weight\", \"bold\")\n                .attr(\"fill\", \"#000000\")\n                .text( flowLabel );\n\n        const updateChart = () => {\n\n            // recover the new scale\n            const newX = d3.event.transform.rescaleX(xDomain);\n\n            // update axes with these new boundaries\n            // xAxis./*transition().duration(200).*/call(d3.axisBottom(newX));\n            if ( this.axisLocation === \"top\" ){\n                xAxis.call(d3.axisTop(newX));\n            }\n            else {\n                xAxis.call(d3.axisBottom(newX));\n            }\n\n            // update position\n            rects\n                .selectAll( allClassNames )\n                // .transition().duration(200)\n                .attr(\"x\", (d:any) => newX(d.start) - packetSidePadding )\n                // .attr(\"y\", (d:any) => { return 50; } )\n                .attr(\"width\", (d:any) => newX(d.start + d.size) - newX(d.start) + packetSidePadding * 2)\n\n            // this.byteRangeRenderer.zoom( newX );\n        };\n        \n        const zoom = d3.zoom()\n            .scaleExtent([1, 2000])  // This control how much you can unzoom (x0.5) and zoom (x50)\n            .translateExtent([[0, 0], [this.dimensions.width, this.dimensions.height]])\n            .extent([[0, 0], [this.dimensions.width, this.dimensions.height]])\n            .on(\"zoom\", updateChart);\n        \n        this.svg.call(zoom);\n\n        // if ( dataSent.length > 0 ) {\n        //     this.byteRangeRenderer.render( dataSent, 0 );\n        // }\n    }\n}\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue, Prop, Watch } from \"vue-property-decorator\";\nimport PacketizationDiagramConfig from \"./data/PacketizationDiagramConfig\";\nimport PacketizationDiagramD3Renderer from \"./renderer/PacketizationDiagramD3Renderer\";\nimport { PacketizationDirection } from \"./renderer/PacketizationDiagramModels\";\n\n@Component\nexport default class PacketizationDiagramRenderer extends Vue {\n    @Prop()\n    public config!: PacketizationDiagramConfig;\n\n    public eventDetail: string = '';\n\n    protected get connections(){\n        return this.config.connections;\n    }\n\n    protected rendererTop:      PacketizationDiagramD3Renderer | undefined = undefined;\n    protected rendererBottom:   PacketizationDiagramD3Renderer | undefined = undefined;\n\n    public created(){\n        this.rendererTop    = new PacketizationDiagramD3Renderer(\"packetization-diagram-top\");\n        this.rendererBottom = new PacketizationDiagramD3Renderer(\"packetization-diagram-bottom\");\n    }\n\n    public mounted(){\n        // mainly for when we switch away, and then back to the PacketizationDiagram\n        if ( this.config && this.rendererTop && this.rendererBottom && this.config.connections.length > 0 ) {\n            this.rendererTop.render(    this.config.connections[0], PacketizationDirection.receiving ); \n            this.rendererBottom.render( this.config.connections[0], PacketizationDirection.sending ); \n        }\n    }\n\n    // Note: we could use .beforeUpdate or use an explicit event or a computed property as well\n    // however, this feels more explicit\n    @Watch('config', { immediate: true, deep: true })\n    protected async onConfigChanged(newConfig: PacketizationDiagramConfig, oldConfig: PacketizationDiagramConfig) {\n        console.log(\"PacketizationDiagramRenderer:onConfigChanged : \", newConfig, oldConfig);\n\n        if ( this.rendererTop && this.rendererBottom ) {\n\n            // Because of the Vue reactivity, we come into this function multiple times but we just want to do the first\n            // so the .rendering var helps deal with that\n            // TODO: fix this OR bring this logic into this component, rather than on the renderer\n            if ( !this.rendererTop.rendering ){\n\n                if ( newConfig.connections && newConfig.connections[0].getEvents().length > 10000 ){\n                    Vue.notify({\n                        group: \"default\",\n                        title: \"Trace might take long to render\",\n                        type: \"warn\",\n                        text: \"Some large traces can take a long time to render. Please be patient.\",\n                    });\n\n                    // give time to show the warning\n                    await new Promise( (resolve) => setTimeout(resolve, 200));\n                }\n\n                this.rendererTop.render( newConfig.connections[0], PacketizationDirection.receiving ).then( (rendered:boolean) => {\n\n                    if ( !rendered ) {\n                        Vue.notify({\n                            group: \"default\",\n                            title: \"Trace could not be rendered\",\n                            type: \"error\",\n                            text: \"This trace could not be rendered. There could be an error or a previous file was still rendering.<br/>See the JavaScript devtools for more information.\",\n                        });\n                    }\n                });\n\n                this.rendererBottom.render( newConfig.connections[0], PacketizationDirection.sending ).then( (rendered:boolean) => {\n\n                    if ( !rendered ) {\n                        Vue.notify({\n                            group: \"default\",\n                            title: \"Trace could not be rendered\",\n                            type: \"error\",\n                            text: \"This trace could not be rendered. There could be an error or a previous file was still rendering.<br/>See the JavaScript devtools for more information.\",\n                        });\n                    }\n                });\n            }\n        }\n    }\n\n} \n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PacketizationDiagramRenderer.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PacketizationDiagramRenderer.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./PacketizationDiagramRenderer.vue?vue&type=template&id=63c01cba&\"\nimport script from \"./PacketizationDiagramRenderer.vue?vue&type=script&lang=ts&\"\nexport * from \"./PacketizationDiagramRenderer.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\nimport { getModule } from \"vuex-module-decorators\";\nimport { Component, Vue } from \"vue-property-decorator\";\n\nimport PacketizationDiagramConfig from \"./data/PacketizationDiagramConfig\"; \nimport PacketizationDiagramConfigurator from \"./PacketizationDiagramConfigurator.vue\";\nimport PacketizationDiagramRenderer from \"./PacketizationDiagramRenderer.vue\"; \n\nimport ConfigurationStore from \"@/store/ConfigurationStore\";\nimport ConnectionGroup from \"@/data/ConnectionGroup\";\n\n\n@Component({\n    components: {\n        PacketizationDiagramConfigurator,\n        PacketizationDiagramRenderer,\n    },\n})\n\nexport default class PacketizationDiagramContainer extends Vue {\n\n    protected store:ConfigurationStore = getModule(ConfigurationStore, this.$store);\n    protected config:PacketizationDiagramConfig = this.store.packetizationDiagramConfig;\n} \n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PacketizationDiagramContainer.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PacketizationDiagramContainer.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./PacketizationDiagramContainer.vue?vue&type=template&id=dca5e1ce&\"\nimport script from \"./PacketizationDiagramContainer.vue?vue&type=script&lang=ts&\"\nexport * from \"./PacketizationDiagramContainer.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\nimport { Component, Vue } from \"vue-property-decorator\";\nimport PacketizationDiagramContainer from \"@/components/packetizationdiagram/PacketizationDiagramContainer.vue\";\n\n@Component({\n    components: {\n        PacketizationDiagramContainer,\n    },\n})\nexport default class PacketizationDiagram extends Vue {} \n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PacketizationDiagram.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PacketizationDiagram.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./PacketizationDiagram.vue?vue&type=template&id=2b8e531a&\"\nimport script from \"./PacketizationDiagram.vue?vue&type=script&lang=ts&\"\nexport * from \"./PacketizationDiagram.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('CongestionGraphContainer')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"home\"},[_c('CongestionGraphConfigurator',{attrs:{\"config\":_vm.config}}),_vm._m(0),_c('CongestionGraphRenderer',{attrs:{\"config\":_vm.config}})],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"position\":\"absolute\",\"display\":\"none\",\"z-index\":\"100\",\"padding\":\"5px\",\"border\":\"1px solid black\",\"background-color\":\"white\"},attrs:{\"id\":\"packetInfo\"}},[_c('p',{attrs:{\"id\":\"timestamp\"}}),_c('p',{attrs:{\"id\":\"packetNr\"}}),_c('p',{attrs:{\"id\":\"packetSize\"}}),_c('p',{attrs:{\"id\":\"ackedFrom\"}}),_c('p',{attrs:{\"id\":\"ackedTo\"}})])}]\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"background-color\":\"#d4edda\",\"padding\":\"0px 10px\"}},[_c('b-container',{attrs:{\"fluid\":\"\"}},[_c('b-row',{attrs:{\"align-h\":\"center\"}},[_c('p',{staticStyle:{\"margin-top\":\"10px\"}},[_vm._v(\"Select a trace via the dropdown(s) below to visualize it in the congestion graph\")])]),_c('b-row',{attrs:{\"align-h\":\"center\"}},[(_vm.config.connection !== undefined)?_c('ConnectionConfigurator',{attrs:{\"allGroups\":_vm.store.groups,\"connection\":_vm.config.connection,\"canBeRemoved\":false,\"onConnectionSelected\":_vm.onConnectionSelected}}):_vm._e()],1),_c('b-row',{attrs:{\"align-h\":\"center\"}},[_c('b-button',{on:{\"click\":function($event){return _vm.resetZoom()}}},[_vm._v(\"Reset zoom\")]),_c('b-button',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover\",modifiers:{\"hover\":true}}],attrs:{\"title\":\"Click this button, then drag and drop a horizontal time range to zoom in on.\"},on:{\"click\":function($event){return _vm.useBrushX()}}},[_vm._v(\"Zoom timerange\")]),_c('b-button',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover\",modifiers:{\"hover\":true}}],attrs:{\"title\":\"Click this button, then drag and drop a rectangular area to zoom in on.\"},on:{\"click\":function($event){return _vm.useBrush2d()}}},[_vm._v(\"Zoom area\")]),_c('b-button',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover\",modifiers:{\"hover\":true}}],attrs:{\"title\":\"Click this button or press R, then drag and drop a line to see the time and byte ranges it spans\"},on:{\"click\":function($event){return _vm.useRuler()}}},[_vm._v(\"Ruler (press R)\")]),_c('b-button',{on:{\"click\":function($event){return _vm.toggleCongestionGraph()}}},[_vm._v(\"Toggle congestion info\")])],1),(this.store.outstandingRequestCount === 0 && this.store.groups.length === 0)?_c('b-alert',{attrs:{\"show\":\"\",\"variant\":\"danger\"}},[_vm._v(\"Please load a trace file to visualize it\")]):(this.store.groups.length === 0)?_c('b-alert',{attrs:{\"show\":\"\",\"variant\":\"warning\"}},[_vm._v(\"Loading files...\")]):_vm._e()],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { getModule } from \"vuex-module-decorators\";\nimport { Component, Vue, Prop } from \"vue-property-decorator\";\nimport CongestionGraphConfig from \"./data/CongestionGraphConfig\";\nimport * as qlog from '@quictools/qlog-schema';\n\nimport ConnectionConfigurator from \"@/components/shared/ConnectionConfigurator.vue\";\nimport ConnectionStore from \"@/store/ConnectionStore\";\nimport ConnectionGroup from \"@/data/ConnectionGroup\";\nimport Connection from \"@/data/Connection\";\n\n@Component({\n    components: {\n        ConnectionConfigurator,\n    },\n})\nexport default class CongestionGraphConfigurator extends Vue {\n    @Prop()\n    public config!: CongestionGraphConfig;\n\n    public store:ConnectionStore = getModule(ConnectionStore, this.$store);\n\n    public onConnectionSelected(connection:Connection) {\n        console.log(\"CongestionGraphConfigurator:onConnectionSelected : \", this.config, connection);\n\n        this.config.connection = connection;\n    }\n\n    public resetZoom(){\n        // TODO hook up properly\n        this.config.renderer.resetZoom();\n    }\n\n    public useBrushX(){\n        // TODO hook up properly\n        this.config.renderer.useBrushX();\n    }\n\n    public useBrush2d(){\n        // TODO hook up properly\n        this.config.renderer.useBrush2d();\n    }\n\n    public useRuler(evt:any = undefined) {\n        if ( evt ){\n            // console.error( \" KEYUP \", evt );\n            if ( evt.code !== \"KeyR\" ){\n                return;\n            }\n        }\n\n        console.log(\"CongestionGraphConfigurator: Using ruler\");\n\n        this.config.renderer.useRuler();\n    }\n\n    public toggleCongestionGraph(){\n        // TODO hook up properly\n        this.config.renderer.toggleCongestionGraph();\n    }\n\n    public togglePerspective(){\n        // TODO hook up properly\n        this.config.renderer.togglePerspective();\n    }\n\n    protected get isClientSideTrace(){\n        return  this.config && \n                this.config.connection && \n                this.config.connection.vantagePoint && \n                (this.config.connection.vantagePoint.type === qlog.VantagePointType.client || this.config.connection.vantagePoint.flow === qlog.VantagePointType.client);\n    }\n\n    public mounted(){\n        if ( this.config.connection === undefined && this.store.groups.length > 0 ){\n            this.selectDefault();\n        }\n\n        document.addEventListener('keyup', this.useRuler);\n    }\n\n    public beforeDestroy() {\n        document.removeEventListener(\"keyup\", this.useRuler);\n    }\n\n    public updated(){\n        if ( this.config.connection === undefined && this.store.groups.length > 0 ){\n            this.selectDefault();\n        }\n    }\n\n    protected selectDefault(){\n        console.log(\"selectDefault: adding new default connection configurator\", this.store.groups);\n        this.config.connection = ( this.store.groups[0].getConnections()[0] );\n    }\n}\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CongestionGraphConfigurator.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CongestionGraphConfigurator.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./CongestionGraphConfigurator.vue?vue&type=template&id=ee54e634&scoped=true&\"\nimport script from \"./CongestionGraphConfigurator.vue?vue&type=script&lang=ts&\"\nexport * from \"./CongestionGraphConfigurator.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./CongestionGraphConfigurator.vue?vue&type=style&index=0&id=ee54e634&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ee54e634\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticStyle:{\"width\":\"100%\",\"border\":\"5px solid #d4edda\",\"min-height\":\"200px\",\"position\":\"relative\"},attrs:{\"id\":\"congestion-graph\"}},[_c('div',{staticStyle:{\"padding\":\"5px\",\"border\":\"1px solid black\",\"background-color\":\"white\",\"position\":\"absolute\",\"top\":\"10px\",\"left\":\"80px\",\"z-index\":\"100\"},attrs:{\"id\":\"legendPackets\"},on:{\"mouseenter\":_vm.hideLegend,\"mouseleave\":_vm.showLegend}},[_vm._m(0),_vm._m(1),_vm._m(2),_vm._m(3),_vm._m(4)]),_c('div',{staticStyle:{\"padding\":\"5px\",\"border\":\"1px solid black\",\"background-color\":\"white\",\"position\":\"absolute\",\"top\":\"440px\",\"right\":\"50px\",\"z-index\":\"100\"},attrs:{\"id\":\"legendMetrics\"},on:{\"mouseenter\":_vm.hideLegend,\"mouseleave\":_vm.showLegend}},[_vm._m(5),_vm._m(6)]),_c('div',{staticStyle:{\"padding\":\"5px\",\"border\":\"1px solid black\",\"background-color\":\"white\",\"position\":\"absolute\",\"top\":\"795px\",\"right\":\"50px\",\"z-index\":\"100\"},attrs:{\"id\":\"legendRTT\"},on:{\"mouseenter\":_vm.hideLegend,\"mouseleave\":_vm.showLegend}},[_vm._m(7),_vm._m(8),_vm._m(9)])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticStyle:{\"padding\":\"0\",\"margin\":\"10px 0\"}},[_c('span',{staticStyle:{\"width\":\"12px\",\"height\":\"8px\",\"background-color\":\"blue\",\"display\":\"inline-block\",\"margin-right\":\"1px\",\"vertical-align\":\"middle\"}}),_vm._v(\" \\n                : Data sent (includes retransmits)\\n            \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticStyle:{\"padding\":\"0\",\"margin\":\"10px 0\"}},[_c('span',{staticStyle:{\"width\":\"12px\",\"height\":\"8px\",\"background-color\":\"#6B8E23\",\"display\":\"inline-block\",\"margin-right\":\"1px\",\"vertical-align\":\"middle\"}}),_vm._v(\" \\n                : Data acknowledged\\n            \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticStyle:{\"padding\":\"0\",\"margin\":\"10px 0\"}},[_c('span',{staticStyle:{\"width\":\"12px\",\"height\":\"8px\",\"background-color\":\"red\",\"display\":\"inline-block\",\"margin-right\":\"1px\",\"vertical-align\":\"middle\"}}),_vm._v(\" \\n                : Data lost\\n            \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticStyle:{\"padding\":\"0\",\"margin\":\"10px 0\"}},[_c('span',{staticStyle:{\"width\":\"12px\",\"height\":\"8px\",\"background-color\":\"#a80f3a\",\"display\":\"inline-block\",\"margin-right\":\"1px\",\"vertical-align\":\"middle\"}}),_vm._v(\" \\n                : Connection flow control limit\\n            \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticStyle:{\"padding\":\"0\",\"margin\":\"10px 0\"}},[_c('span',{staticStyle:{\"width\":\"12px\",\"height\":\"8px\",\"background-color\":\"#ff69b4\",\"display\":\"inline-block\",\"margin-right\":\"1px\",\"vertical-align\":\"middle\"}}),_vm._v(\" \\n                : Sum of stream flow control limits\\n            \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticStyle:{\"padding\":\"0\",\"margin\":\"10px 0\"}},[_c('span',{staticStyle:{\"width\":\"12px\",\"height\":\"8px\",\"background-color\":\"#8A2BE2\",\"display\":\"inline-block\",\"margin-right\":\"1px\",\"vertical-align\":\"middle\"}}),_vm._v(\" \\n                : Congestion window\\n            \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticStyle:{\"padding\":\"0\",\"margin\":\"10px 0\"}},[_c('span',{staticStyle:{\"width\":\"12px\",\"height\":\"8px\",\"background-color\":\"#808000\",\"display\":\"inline-block\",\"margin-right\":\"1px\",\"vertical-align\":\"middle\"}}),_vm._v(\" \\n                : Bytes in flight\\n            \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticStyle:{\"padding\":\"0\",\"margin\":\"3px 15px\",\"display\":\"inline\"}},[_c('span',{staticStyle:{\"width\":\"32px\",\"height\":\"8px\",\"background-color\":\"#C96480\",\"display\":\"inline-block\",\"margin-right\":\"1px\",\"vertical-align\":\"middle\"}}),_vm._v(\"\\n                : Min RTT\\n            \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticStyle:{\"padding\":\"0\",\"margin\":\"3px 15px\",\"display\":\"inline\"}},[_c('span',{staticStyle:{\"width\":\"32px\",\"height\":\"8px\",\"background-color\":\"#ff9900\",\"display\":\"inline-block\",\"margin-right\":\"1px\",\"vertical-align\":\"middle\"}}),_vm._v(\"\\n                : Latest RTT\\n            \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticStyle:{\"padding\":\"0\",\"margin\":\"3px 15px\",\"display\":\"inline\"}},[_c('span',{staticStyle:{\"width\":\"32px\",\"height\":\"8px\",\"background-color\":\"#8a554a\",\"display\":\"inline-block\",\"margin-right\":\"1px\",\"vertical-align\":\"middle\"}}),_vm._v(\"\\n                : Smoothed RTT\\n            \")])}]\n\nexport { render, staticRenderFns }","import { ScaleLinear, Axis, Selection, BaseType, BrushBehavior } from \"d3\";\n\nexport class MainGraphState {\n    /* Fields */\n    public eventBus: HTMLSpanElement | null = null; // A dummy DOM element which is used to fire off custom events\n    /*\n        Events:\n            - packetSelectionEvent\n            - packetPickEvent\n    */\n\n    public outerWidth = window.innerWidth;\n    public outerHeight = 600;\n    public margins = {\n        top: 20,\n        bottom: 60,\n        left: 70,\n        right: 70,\n    };\n    public innerWidth: number;\n    public innerHeight: number;\n\n    public graphSvg: Selection<SVGGElement, unknown, HTMLElement, any> | null = null;\n    public canvas: Selection<HTMLCanvasElement, unknown, HTMLElement, any> | null = null;\n    public canvasContext: CanvasRenderingContext2D | null = null;\n    public mouseHandlerPanningSvg: Selection<BaseType, unknown, HTMLElement, any> | null = null;\n    public mouseHandlerBrushXSvg: Selection<BaseType, unknown, HTMLElement, any> | null = null;\n    public mouseHandlerBrush2dSvg: Selection<BaseType, unknown, HTMLElement, any> | null = null;\n    public mouseHandlerSelectionSvg: Selection<BaseType, unknown, HTMLElement, any> | null = null;\n    public mouseHandlerPickSvg: Selection<BaseType, unknown, HTMLElement, any> | null = null;\n    public mouseHandlerRulerSvg: Selection<BaseType, unknown, HTMLElement, any> | null = null;\n    public brushX: BrushBehavior<unknown> | null = null;\n    public brushXElement: Selection<SVGGElement, unknown, HTMLElement, any> | null = null;\n    public brush2d: BrushBehavior<unknown> | null = null;\n    public brush2dElement: Selection<SVGGElement, unknown, HTMLElement, any> | null = null;\n    public selectionBrush: BrushBehavior<unknown> | null = null;\n    public packetInformationDiv: Selection<BaseType, unknown, HTMLElement, any> | null = null;\n    public congestionGraphEnabled = true;\n\n    public useSentPerspective = true;\n\n    public gxAxis: Selection<SVGGElement, unknown, HTMLElement, any> | null = null;\n    public gyAxis: Selection<SVGGElement, unknown, HTMLElement, any> | null = null;\n    public gyCongestionAxis: Selection<SVGGElement, unknown, HTMLElement, any> | null = null;\n\n    public congestionAxisText: Selection<SVGTextElement, unknown, HTMLElement, any> | null = null;\n\n    // Perspective in which packet_sent events play the main role\n    public sent!: IPerspectiveInfo;\n\n    // Perspective in which packet_received events play the main role\n    // As recovery/congestion information is not available from this perspective, it is more limited than the 'sent' perspective\n    public received!: IPerspectiveInfo;\n\n    public metricUpdateLines!: {\n        bytes: Array<[number, number]>,\n        cwnd: Array<[number, number]>,\n        minRTT: Array<[number, number]>,\n        smoothedRTT: Array<[number, number]>,\n        lastRTT: Array<[number, number]>,\n    };\n\n    public flowControlLines!: {\n        application: Array<[number, number]>,\n        stream: Array<[number, number]>,\n    }\n\n    /* Methods */\n    public constructor() {\n        this.innerWidth = this.outerWidth - this.margins.left - this.margins.right;\n        this.innerHeight = this.outerHeight - this.margins.top - this.margins.bottom;\n        this.reset();\n    }\n\n    public currentPerspective() {\n        return this.useSentPerspective ? this.sent : this.received;\n    };\n\n    public reset() {\n        this.sent = {\n            xScale: null,\n            yScale: null, // Used for packet_sent, packet_acked and packet_lost\n            yCongestionScale: null, // Used for congestion window and bytes in flight\n            xAxis: null,\n            yAxis: null,\n            yCongestionAxis: null,\n            rangeX: [0, 0], // [minX, maxX]\n            rangeY: [0, 0], // [minY, maxY]\n            congestionRangeY: [0, 0], // [minY, maxY]\n            originalRangeX: [0, 0], // [minX, maxX]\n            originalRangeY: [0, 0], // [minY, maxY]\n            originalCongestionRangeY: [0, 0], // [minY, maxY]\n\n            drawScaleX: 1,\n            drawScaleY: 1,\n        };\n        this.received = {\n            xScale: null,\n            yScale: null, // Used for packet_sent, packet_acked and packet_lost\n            xAxis: null,\n            yAxis: null,\n            rangeX: [0, 0], // [minX, maxX]\n            rangeY: [0, 0], // [minY, maxY]\n            originalRangeX: [0, 0], // [minX, maxX]\n            originalRangeY: [0, 0], // [minY, maxY]\n\n            drawScaleX: 1,\n            drawScaleY: 1,\n        };\n        this.metricUpdateLines = {\n            bytes: new Array<[number, number]>(),\n            cwnd: new Array<[number, number]>(),\n            minRTT: new Array<[number, number]>(),\n            smoothedRTT: new Array<[number, number]>(),\n            lastRTT: new Array<[number, number]>(),\n        };\n        this.flowControlLines = {\n            application: new Array<[number, number]>(),\n            stream: new Array<[number, number]>(),\n        }\n    }\n};\n\ninterface IPerspectiveInfo {\n    xScale: ScaleLinear<number, number> | null;\n    yScale: ScaleLinear<number, number> | null; // Used for packet_sent, packet_acked and packet_lost\n    yCongestionScale?: ScaleLinear<number, number> | null; // Used for congestion window and bytes in flight\n    xAxis: Axis<number | {valueOf(): number;}> | null;\n    yAxis: Axis<number | {valueOf(): number;}> | null;\n    yCongestionAxis?:Axis<number | {valueOf(): number;}> | null;\n    rangeX: [number, number]; // [minX, maxX]\n    rangeY: [number, number]; // [minY, maxY]\n    congestionRangeY?: [number, number]; // [minY, maxY]\n    originalRangeX: [number, number]; // [minX, maxX]\n    originalRangeY: [number, number], // [minY, maxY]\n    originalCongestionRangeY?: [number, number], // [minY, maxY]\n\n    drawScaleX: number,\n    drawScaleY: number,\n}\n","import { MainGraphState } from './MainGraphState';\nimport { Selection, Axis, ScaleLinear } from 'd3';\n\nexport class RecoveryGraphState {\n    // Fields\n    public outerWidth = window.innerWidth;\n    public outerHeight = 300;\n    public margins = {\n        top: 20,\n        bottom: 60,\n        left: 70,\n        right: 70,\n    };\n    public innerWidth: number;\n    public innerHeight: number;\n\n    public graphSvg: Selection<SVGGElement, unknown, HTMLElement, any> | null = null;\n    public canvas: Selection<HTMLCanvasElement, unknown, HTMLElement, any> | null = null;\n    public canvasContext: CanvasRenderingContext2D | null = null;\n\n    // Scales/Axii/Range data\n    public xAxis: Axis<number | {valueOf(): number;}> | null = null; // xScale is shared with main chart\n    public gxAxis: Selection<SVGGElement, unknown, HTMLElement, any> | null = null; // Graphical element for the x axis\n\n    public yScale: ScaleLinear<number, number> | null = null;\n    public yAxis: Axis<number | {valueOf(): number;}> | null = null;\n    public gyAxis: Selection<SVGGElement, unknown, HTMLElement, any> | null = null; // Graphical element for the y axis\n    public originalRangeY: [number, number] = [0, 0]; // [minY, maxY]\n    public rangeY: [number, number] = [0, 0]; // Current minY and maxY\n\n\n    /* Methods */\n    public constructor() {\n        this.innerWidth = this.outerWidth - this.margins.left - this.margins.right;\n        this.innerHeight = this.outerHeight - this.margins.top - this.margins.bottom;\n    }\n\n    public reset() {\n        this.xAxis = null;\n        this.yAxis = null;\n        this.yScale = null;\n        this.originalRangeY = [0, 0];\n        this.rangeY = [0, 0];\n    }\n}\n","import QlogConnection from '@/data/Connection';\nimport * as d3 from 'd3';\nimport * as qlog from '@quictools/qlog-schema';\nimport CongestionGraphConfig from '../data/CongestionGraphConfig';\nimport { MainGraphState } from './MainGraphState';\nimport { RecoveryGraphState } from './RecoveryGraphState';\nimport { Selection } from 'd3';\nimport { IEventTransportParametersSet } from '@quictools/qlog-schema/draft-01/QLog';\n\nexport default class CongestionGraphD3Renderer {\n\n    public containerID:string;\n    public rendering:boolean = false;\n\n    private config!:CongestionGraphConfig;\n    private mainGraphState!: MainGraphState; // Keeps track of everything contained in the main graph of the visualisation (data sent/received, congestion info)\n    private recoveryGraphState!: RecoveryGraphState; // Keeps track of data needed for the recovery graph of the visualisation (RTT)\n\n    private mainGraphContainer?: Selection<HTMLDivElement, unknown, HTMLElement, any>;\n    private recoveryGraphContainer?: Selection<HTMLDivElement, unknown, HTMLElement, any>;\n\n    // Stored for quick referencing instead of needing to use lookup every redraw\n    // Given that these lists only change on load of a new log, this should not be a problem\n    private packetsSent!: Array<Array<any>>;\n    private packetsReceived!: Array<Array<any>>;\n    private metricUpdates!: Array<Array<any>>;\n\n    private isInitialised: boolean = false;\n\n    private _startTimeOffset: number = 0;\n\n    // mouse coordinates of mouse move for panning\n    private previousMouseX: number | null = null;\n    private previousMouseY: number | null = null;\n\n    constructor(containerID:string){\n        this.containerID = containerID;\n    }\n\n    public useBrushX(){\n        this.mainGraphState.mouseHandlerBrush2dSvg!.style('z-index', 0);\n        this.mainGraphState.mouseHandlerBrushXSvg!.style('z-index', 1);\n        this.mainGraphState.mouseHandlerPanningSvg!.style('z-index', 0);\n        this.mainGraphState.mouseHandlerSelectionSvg!.style('z-index', 0);\n        this.mainGraphState.mouseHandlerPickSvg!.style('z-index', 0);\n        this.mainGraphState.mouseHandlerRulerSvg!.style('z-index', 0);\n    }\n\n    public useBrush2d(){\n        this.mainGraphState.mouseHandlerBrush2dSvg!.style('z-index', 1);\n        this.mainGraphState.mouseHandlerBrushXSvg!.style('z-index', 0);\n        this.mainGraphState.mouseHandlerPanningSvg!.style('z-index', 0);\n        this.mainGraphState.mouseHandlerSelectionSvg!.style('z-index', 0);\n        this.mainGraphState.mouseHandlerPickSvg!.style('z-index', 0);\n        this.mainGraphState.mouseHandlerRulerSvg!.style('z-index', 0);\n    }\n\n    public usePanning(){\n        this.mainGraphState.mouseHandlerBrush2dSvg!.style('z-index', 0);\n        this.mainGraphState.mouseHandlerBrushXSvg!.style('z-index', 0);\n        this.mainGraphState.mouseHandlerPanningSvg!.style('z-index', 1);\n        this.mainGraphState.mouseHandlerSelectionSvg!.style('z-index', 0);\n        this.mainGraphState.mouseHandlerPickSvg!.style('z-index', 0);\n        this.mainGraphState.mouseHandlerRulerSvg!.style('z-index', 0);\n    }\n\n    public useSelection(){\n        this.mainGraphState.mouseHandlerBrush2dSvg!.style('z-index', 0);\n        this.mainGraphState.mouseHandlerBrushXSvg!.style('z-index', 0);\n        this.mainGraphState.mouseHandlerPanningSvg!.style('z-index', 0);\n        this.mainGraphState.mouseHandlerSelectionSvg!.style('z-index', 1);\n        this.mainGraphState.mouseHandlerPickSvg!.style('z-index', 0);\n        this.mainGraphState.mouseHandlerRulerSvg!.style('z-index', 0);\n    }\n\n    public usePicker(){\n        this.mainGraphState.mouseHandlerBrush2dSvg!.style('z-index', 0);\n        this.mainGraphState.mouseHandlerBrushXSvg!.style('z-index', 0);\n        this.mainGraphState.mouseHandlerPanningSvg!.style('z-index', 0);\n        this.mainGraphState.mouseHandlerSelectionSvg!.style('z-index', 0);\n        this.mainGraphState.mouseHandlerPickSvg!.style('z-index', 1);\n        this.mainGraphState.mouseHandlerRulerSvg!.style('z-index', 0);\n    }\n\n    public useRuler() {\n        this.mainGraphState.mouseHandlerBrush2dSvg!.style('z-index', 0);\n        this.mainGraphState.mouseHandlerBrushXSvg!.style('z-index', 0);\n        this.mainGraphState.mouseHandlerPanningSvg!.style('z-index', 0);\n        this.mainGraphState.mouseHandlerSelectionSvg!.style('z-index', 0);\n        this.mainGraphState.mouseHandlerPickSvg!.style('z-index', 0);\n        this.mainGraphState.mouseHandlerRulerSvg!.style('z-index', 1);\n\n        document.body.style.cursor = \"pointer\";\n\n        const linePoints:any = {};\n        let line:any = undefined;\n        let lineHorizontal:any = undefined;\n        let lineVertical:any = undefined;\n        let textTime:any = undefined;\n        let textBytes:any = undefined;\n        let textRate:any = undefined;\n\n        const evtEmitter = (this.mainGraphState.mouseHandlerRulerSvg!.node()! as Element);\n        const startDrawing = (evt:any) => {\n\n            linePoints.x1 = evt.offsetX;\n            linePoints.y1 = evt.offsetY;\n            linePoints.x2 = evt.offsetX;\n            linePoints.y2 = evt.offsetY;\n\n            // the main (typically diagonal) line\n            line = this.mainGraphState.mouseHandlerRulerSvg!\n                .append(\"line\")\n                .attr(\"stroke\", \"pink\")\n                .attr(\"stroke-width\", 10)\n                .attr(\"x1\", \"\" + linePoints.x1 )\n                .attr(\"y1\", \"\" + linePoints.y1 )\n                .attr(\"x2\", \"\" + linePoints.x2 )\n                .attr(\"y2\", \"\" + linePoints.y2 )\n                .style(\"opacity\", \"0.7\")\n                .attr(\"class\", \"ruler\");\n\n            \n            lineHorizontal = this.mainGraphState.mouseHandlerRulerSvg!\n                .append(\"line\")\n                .attr(\"stroke\", \"black\")\n                .attr(\"stroke-width\", 2)\n                .attr(\"x1\", \"\" + linePoints.x1 )\n                .attr(\"y1\", \"\" + linePoints.y1 )\n                .attr(\"x2\", \"\" + linePoints.x2 )\n                .attr(\"y2\", \"\" + linePoints.y2 );\n            \n            lineVertical = this.mainGraphState.mouseHandlerRulerSvg!\n                .append(\"line\")\n                .attr(\"stroke\", \"black\")\n                .attr(\"stroke-width\", 2)\n                .attr(\"x1\", \"\" + linePoints.x1 )\n                .attr(\"y1\", \"\" + linePoints.y1 )\n                .attr(\"x2\", \"\" + linePoints.x2 )\n                .attr(\"y2\", \"\" + linePoints.y2 );\n\n            // text for the horizontal line\n            textTime = this.mainGraphState.mouseHandlerRulerSvg!\n                .append(\"text\")\n                .attr(\"dominant-baseline\", \"hanging\")\n                .style(\"text-anchor\", \"middle\")\n                .style(\"font-size\", \"14\")\n                .style(\"font-family\", \"Trebuchet MS\")\n                .style(\"font-style\", \"italic\")\n                .style(\"stroke\", \"white\")\n                .style(\"stroke-width\", 5)\n                .style(\"paint-order\", \"stroke\")\n                .attr(\"fill\", \"#000000\")\n                .text(\"\" + \"time\");\n\n            // text for the vertical line\n            textBytes = this.mainGraphState.mouseHandlerRulerSvg!\n                .append(\"text\")\n                .attr(\"dominant-baseline\", \"central\")\n                .style(\"text-anchor\", \"start\")\n                .style(\"font-size\", \"14\")\n                .style(\"font-family\", \"Trebuchet MS\")\n                .style(\"font-style\", \"italic\")\n                .style(\"stroke\", \"white\")\n                .style(\"stroke-width\", 5)\n                .style(\"paint-order\", \"stroke\")\n                .attr(\"fill\", \"#000000\")\n                .text(\"\" + \"bytes\");\n\n            // text for the diagonal line\n            textRate = this.mainGraphState.mouseHandlerRulerSvg!\n                .append(\"text\")\n                .attr(\"dominant-baseline\", \"hanging\")\n                .style(\"text-anchor\", \"middle\")\n                .style(\"font-size\", \"14\")\n                .style(\"font-family\", \"Trebuchet MS\")\n                .style(\"font-style\", \"italic\")\n                .style(\"stroke\", \"white\")\n                .style(\"stroke-width\", 5)\n                .style(\"paint-order\", \"stroke\")\n                .attr(\"fill\", \"#000000\")\n                .text(\"\" + \"rate\");\n\n            evtEmitter.addEventListener(\"mousemove\", handleDrawing);\n        };\n\n        const handleDrawing = (evt:any) => {\n\n            linePoints.x2 = evt.offsetX;\n            linePoints.y2 = evt.offsetY;\n\n            line\n                .attr(\"x2\", \"\" + linePoints.x2 )\n                .attr(\"y2\", \"\" + linePoints.y2 );\n\n            lineHorizontal\n                .attr(\"x2\", \"\" + linePoints.x2 )\n                .attr(\"y2\", \"\" + linePoints.y1 );\n\n            lineVertical\n                .attr(\"x1\", \"\" + linePoints.x2 )\n                .attr(\"x2\", \"\" + linePoints.x2 )\n                .attr(\"y2\", \"\" + linePoints.y2 );\n\n            const startTime = Math.round(this.mainGraphState.sent.xScale!.invert(linePoints.x1));\n            const endTime   = Math.round(this.mainGraphState.sent.xScale!.invert(linePoints.x2));\n            const timeDifference = (endTime - startTime);\n\n            const startBytes = Math.round(this.mainGraphState.sent.yScale!.invert(linePoints.y1));\n            const endBytes   = Math.round(this.mainGraphState.sent.yScale!.invert(linePoints.y2));\n            const bytesDifference = endBytes - startBytes;\n\n\n            let timeText =  timeDifference + \" ms\";\n            if ( timeDifference > 10000 ){\n                timeText = (timeDifference / 1000).toFixed(2) + \"s\";\n            }\n\n            let bytesText = bytesDifference + \" bytes\";\n            if ( bytesDifference > 2000000 ) { // larger than 2MB\n                bytesText = (bytesDifference / 1000000).toFixed(2) + \" MB\";\n            }\n            else if ( bytesDifference  > 10000 ) { // larger than 10 KB\n                bytesText = Math.round(bytesDifference / 1000) + \" KB\";\n            }\n\n            const bits = (endBytes - startBytes) * 8;\n            let rate = (bits / 1000) / ((endTime - startTime) / 1000); // have bits per millisecond, want Kilobits per second\n\n            let rateText = Math.round(rate) + \" Kbps\";\n\n            if ( rate > 1000 ) { // 1 Mbps\n                rate = ( bits / 1000000 ) / ((endTime - startTime) / 1000);\n                rateText = (rate).toFixed(2) + \" Mbps\";\n            }\n\n            const timeCenter  = Math.min( linePoints.x1, linePoints.x2 ) + Math.abs( linePoints.x1 - linePoints.x2 ) / 2;\n            const bytesCenter = Math.min( linePoints.y1, linePoints.y2 ) + Math.abs( linePoints.y1 - linePoints.y2 ) / 2;\n\n            const rateCenterX = (linePoints.x1 + linePoints.x2) / 2;\n            const rateCenterY = (linePoints.y1 + linePoints.y2) / 2;\n\n            textTime\n                .attr(\"x\", timeCenter)\n                // .attr(\"y\", Math.max( linePoints.y1, linePoints.y2 ) + 12)\n                .attr(\"y\", linePoints.y1 + ( linePoints.y1 > linePoints.y2 ? 12 : -20 ))\n                .text( timeText )\n                \n            textBytes\n                .attr(\"x\", Math.max( linePoints.x1, linePoints.x2 ) + 12)\n                .attr(\"y\", bytesCenter)\n                .text( bytesText )\n                \n            textRate\n                // .attr(\"x\", timeCenter)\n                // .attr(\"y\", Math.max( linePoints.y1, linePoints.y2 ) - 50)\n                .attr(\"x\", rateCenterX)\n                .attr(\"y\", rateCenterY + ( linePoints.y1 > linePoints.y2 ? -30 : 20 ))\n                .text(\"\" + rateText);\n        };\n\n        evtEmitter.addEventListener(\"mousedown\", startDrawing, {once:true});\n\n        evtEmitter.addEventListener(\"mouseup\", (evt) => {\n            document.body.style.cursor = \"default\";\n\n            evtEmitter.removeEventListener( \"mousemove\", handleDrawing );\n\n            line.remove();\n            lineHorizontal.remove();\n            lineVertical.remove();\n            textTime.remove();\n            textBytes.remove();\n            textRate.remove();\n\n            this.usePanning();\n\n        }, {once: true});\n    }\n\n    public toggleCongestionGraph(){\n        this.mainGraphState.congestionGraphEnabled = this.mainGraphState.congestionGraphEnabled ? false : true;\n\n        this.redrawCanvas(\n            this.mainGraphState.currentPerspective().rangeX[0], \n            this.mainGraphState.currentPerspective().rangeX[1], \n            this.mainGraphState.currentPerspective().rangeY[0], \n            this.mainGraphState.currentPerspective().rangeY[1]);\n    }\n\n    public togglePerspective(){\n        this.setPerspective(this.mainGraphState.useSentPerspective ? false : true, true);\n    }\n\n    public resetZoom(){\n        this.mainGraphState.currentPerspective().rangeX = this.mainGraphState.currentPerspective().originalRangeX;\n        this.mainGraphState.currentPerspective().rangeY = this.mainGraphState.currentPerspective().originalRangeY;\n\n        this.redrawCanvas(\n            this.mainGraphState.currentPerspective().rangeX[0], \n            this.mainGraphState.currentPerspective().rangeX[1], \n            this.mainGraphState.currentPerspective().rangeY[0], \n            this.mainGraphState.currentPerspective().rangeY[1]);\n    }\n\n    public render(config:CongestionGraphConfig) {\n        if ( this.rendering ) {\n            return;\n        }\n\n        console.log(\"CongestionGraphRenderer:render\", config);\n\n        this.config = config;\n\n        if (!this.isInitialised) {\n            // Initialise the states for both the main and recovery graph\n            // This should only be done once as multiple components can be reused over multiple renders\n            this.mainGraphState = new MainGraphState();\n            this.recoveryGraphState = new RecoveryGraphState();\n            this.init();\n            this.isInitialised = true;\n        } else {\n            // Reset the scales, ranges, etc used by the previous render\n            this.mainGraphState.reset();\n            this.recoveryGraphState.reset();\n        }\n\n        this.rendering = true;\n\n        const canContinue:boolean = this.setup();\n\n        if ( !canContinue ) {\n            this.rendering = false;\n\n            return;\n        }\n\n        this.renderParts().then( () => {\n            this.rendering = false;\n        });\n\n    }\n\n    // Called on first render only\n    // Init elements that are used across multiple renders\n    protected init() {\n        // The eventBus can be used for firing events and listening to them\n        // It is currently used for clicking events on packets\n        // and transmits which packet has been clicked on\n        this.mainGraphState.eventBus = document.createElement(\"span\");\n\n        // Is used as a tooltip when hovering over events\n        this.mainGraphState.packetInformationDiv = d3.select(\"#packetInfo\");\n\n        // Create the containers for both the main graph and the graph displaying recovery (rtt) information\n        this.mainGraphContainer = d3.select(\"#\" + this.containerID).append(\"div\")\n            .attr(\"id\", \"mainGraphContainer\")\n            .style(\"height\", this.mainGraphState.outerHeight + \"px\")\n\n        this.recoveryGraphContainer = d3.select(\"#\" + this.containerID).append(\"div\")\n            .attr(\"id\", \"recoveryGraphContainer\")\n            .style(\"height\", this.recoveryGraphState.outerHeight + \"px\");\n\n\n        // Contains the chart axii, grid, labels\n        this.mainGraphState.graphSvg = this.mainGraphContainer\n            .append('svg:svg')\n            .attr('width', this.mainGraphState.outerWidth)\n            .attr('height', this.mainGraphState.outerHeight)\n            .style('position', \"absolute\")\n            .append('g')\n            .attr('transform', 'translate(' + this.mainGraphState.margins.left + ', ' + this.mainGraphState.margins.top + ')');\n\n        // Canvas on which the plots are drawn\n        this.mainGraphState.canvas = this.mainGraphContainer\n            .append('canvas')\n            .attr('width', this.mainGraphState.innerWidth)\n            .attr('height', this.mainGraphState.innerHeight)\n            .style('margin-left', this.mainGraphState.margins.left + \"px\")\n            .style('margin-top', this.mainGraphState.margins.top + \"px\")\n            .style('position', \"absolute\");\n\n        // The next few SVGs are used for the different tools/modes\n        // Based on which SVG is on top (highest z-level), a tool is selected\n        // Each layer has its own event triggers (initialised later) to enable/disable certain function\n        // for each mode. As an example, the panning layer has events hooked up for both panning and zooming\n        // while neither zoom-brushes are able to use panning (as the main mouse button is reserved for creating the brush area).\n        this.mainGraphState.mouseHandlerPanningSvg = this.mainGraphContainer\n            .append('svg:svg')\n            .attr('width', this.mainGraphState.innerWidth)\n            .attr('height', this.mainGraphState.innerHeight)\n            .style('margin-left', this.mainGraphState.margins.left + \"px\")\n            .style('margin-top', this.mainGraphState.margins.top + \"px\")\n            .style('z-index', 1) // Enabled by default\n            .style('position', \"absolute\");\n\n        this.mainGraphState.mouseHandlerBrushXSvg = this.mainGraphContainer\n            .append('svg:svg')\n            .attr('width', this.mainGraphState.innerWidth)\n            .attr('height', this.mainGraphState.innerHeight)\n            .style('margin-left', this.mainGraphState.margins.left + \"px\")\n            .style('margin-top', this.mainGraphState.margins.top + \"px\")\n            .style('z-index', 0) // Disabled by default\n            .style('position', \"absolute\");\n\n        this.mainGraphState.mouseHandlerBrush2dSvg = this.mainGraphContainer\n            .append('svg:svg')\n            .attr('width', this.mainGraphState.innerWidth)\n            .attr('height', this.mainGraphState.innerHeight)\n            .style('margin-left', this.mainGraphState.margins.left + \"px\")\n            .style('margin-top', this.mainGraphState.margins.top + \"px\")\n            .style('z-index', 0) // Disabled by default\n            .style('position', \"absolute\");\n\n        this.mainGraphState.mouseHandlerSelectionSvg = this.mainGraphContainer\n            .append('svg:svg')\n            .attr('width', this.mainGraphState.innerWidth)\n            .attr('height', this.mainGraphState.innerHeight)\n            .style('margin-left', this.mainGraphState.margins.left + \"px\")\n            .style('margin-top', this.mainGraphState.margins.top + \"px\")\n            .style('z-index', 0) // Disabled by default\n            .style('position', \"absolute\");\n\n        this.mainGraphState.mouseHandlerPickSvg = this.mainGraphContainer\n            .append('svg:svg')\n            .attr('width', this.mainGraphState.innerWidth)\n            .attr('height', this.mainGraphState.innerHeight)\n            .style('margin-left', this.mainGraphState.margins.left + \"px\")\n            .style('margin-top', this.mainGraphState.margins.top + \"px\")\n            .style('z-index', 0) // Disabled by default\n            .style('position', \"absolute\");\n\n        this.mainGraphState.mouseHandlerRulerSvg = this.mainGraphContainer\n            .append('svg:svg')\n            .attr('width', this.mainGraphState.innerWidth)\n            .attr('height', this.mainGraphState.innerHeight)\n            .style('margin-left', this.mainGraphState.margins.left + \"px\")\n            .style('margin-top', this.mainGraphState.margins.top + \"px\")\n            .style('z-index', 0) // Disabled by default\n            .style('position', \"absolute\");\n\n        this.recoveryGraphState.graphSvg = this.recoveryGraphContainer\n            .append('svg:svg')\n            .attr('width', this.recoveryGraphState.outerWidth)\n            .attr('height', this.recoveryGraphState.outerHeight)\n            .style('position', \"absolute\")\n            .append('g')\n            .attr('transform', 'translate(' + this.recoveryGraphState.margins.left + ', ' + this.recoveryGraphState.margins.top + ')');\n\n        this.recoveryGraphState.canvas = this.recoveryGraphContainer\n            .append('canvas')\n            .attr('width', this.recoveryGraphState.innerWidth)\n            .attr('height', this.recoveryGraphState.innerHeight)\n            .style('margin-left', this.recoveryGraphState.margins.left + \"px\")\n            .style('margin-top', this.recoveryGraphState.margins.top + \"px\")\n            .style('position', \"absolute\");\n\n        // Contexts for the canvas which will be used for drawing\n        this.mainGraphState.canvasContext = this.mainGraphState.canvas.node()!.getContext('2d');\n        this.recoveryGraphState.canvasContext = this.recoveryGraphState.canvas.node()!.getContext('2d');\n\n        // Graphical axii which are used for all renders\n        // Can be updated by calling it using an axis object and thus reused over multiple renders\n        this.mainGraphState.gxAxis = this.mainGraphState.graphSvg!.append('g')\n            .attr('transform', 'translate(0, ' + this.mainGraphState.innerHeight + ')')\n            .attr(\"class\", \"grid\");\n\n        this.mainGraphState.gyAxis = this.mainGraphState.graphSvg!.append('g')\n            .attr(\"class\", \"grid\");\n\n        this.mainGraphState.gyCongestionAxis = this.mainGraphState.graphSvg!.append('g')\n            .attr(\"class\", \"nogrid\");\n\n        this.recoveryGraphState.gxAxis = this.recoveryGraphState.graphSvg!.append('g')\n            .attr('transform', 'translate(0, ' + this.recoveryGraphState.innerHeight + ')')\n            .attr(\"class\", \"grid\");\n\n        this.recoveryGraphState.gyAxis = this.recoveryGraphState.graphSvg!.append('g')\n            .attr(\"class\", \"grid\");\n\n        /* Axis labels */\n        // Main y-axis\n        this.mainGraphState.graphSvg!.append('text')\n            .attr('x', '-' + (this.mainGraphState.innerHeight / 2))\n            .attr('dy', '-3.5em')\n            .attr('transform', 'rotate(-90)')\n            .text('Data (bytes)');\n\n        // X axis\n        this.mainGraphState.graphSvg!.append('text')\n            .attr('x', '' + (this.mainGraphState.innerWidth / 2))\n            .attr('y', '' + (this.mainGraphState.innerHeight + 40))\n            .text('Time (ms)');\n\n        // Congestion Y axis\n        this.mainGraphState.congestionAxisText = this.mainGraphState.graphSvg!.append('text')\n            .attr('transform', 'translate(' + (this.mainGraphState.innerWidth + this.mainGraphState.margins.right / 2) + ', ' + this.mainGraphState.innerHeight / 2 + '), rotate(-90)')\n            .text('Congestion info (bytes)');\n\n        // Recovery x axis\n        this.recoveryGraphState.graphSvg!.append('text')\n            .attr('x', '' + (this.recoveryGraphState.innerWidth / 2))\n            .attr('y', '' + (this.recoveryGraphState.innerHeight + 40))\n            .text('Time (ms)');\n\n        // Recovery y axis\n        this.recoveryGraphState.graphSvg!.append('text')\n            .attr('x', '-' + (this.recoveryGraphState.innerHeight / 2))\n            .attr('dy', '-3.5em')\n            .attr('transform', 'rotate(-90)')\n            .text('RTT (ms)');\n\n        // for our times on the x-axis, we cannot simply use eventParser.relativeTime or absoluteTime\n        // we have situations where the reference_time in the qlog is the start time of the server, while the trace is made hours or days afterwards\n        // that would give immensely large x-values with huge amounts of empty space up front\n        // so, we detect that situation here and use a custom time transformation function to deal with this. \n        if ( this.config && this.config.connection && this.config.connection.getEvents().length > 0 ) {\n            const firstEvent = this.config.connection.parseEvent( this.config.connection.getEvents()[0] );\n            if ( firstEvent.relativeTime > 3000 ){ // 3 seconds of nothing\n                this._startTimeOffset = -1 * (firstEvent.relativeTime - 200); // just 200ms of nothing, then we start plotting \n            }\n            else {\n                this._startTimeOffset = 0;\n            }\n        }\n    }\n\n    // runs once before each render. Used to bootstrap everything.\n    protected setup():boolean {\n        // Parse log file and prepare the data for drawing and interaction\n        this.parseQlog();\n        this.initSentSide({}); // FIXME pass settings with minX and maxX if needed\n        this.initReceivedSide({}); // FIXME pass settings with minX and maxX if needed\n\n        // Display the axii we just created in each corresponding graphical axis\n        this.mainGraphState.gxAxis!.call(this.mainGraphState.currentPerspective().xAxis!);\n        this.mainGraphState.gyAxis!.call(this.mainGraphState.currentPerspective().yAxis!);\n        this.mainGraphState.gyCongestionAxis!.call(this.mainGraphState.sent.yCongestionAxis!);\n        this.recoveryGraphState.gxAxis!.call(this.recoveryGraphState.xAxis!);\n        this.recoveryGraphState.gyAxis!.call(this.recoveryGraphState.yAxis!);\n\n        // Wrap class methods so we can pass them as event handlers\n        const self = this; // Self pointer is needed as 'this' changes in callbacks\n\n        const onZoom = () => {\n            self.onZoom();\n        };\n        const onPan = () => {\n            self.onPan();\n        }\n        const onHover = () => {\n            self.onHover();\n        }\n        const onPickerClick = () => {\n            self.onPickerClick();\n        }\n        const onBrushXEnd = () => {\n            self.onBrushXEnd();\n        }\n        const onBrush2dEnd = () => {\n            self.onBrush2dEnd();\n        }\n\n        // We have multiple layers of SVGs, each for a different mode\n        // Here we hook up the allowed events to each of the different modes\n        this.mainGraphState.mouseHandlerPanningSvg!.on(\"wheel\", onZoom)\n            .on(\"click\", onPickerClick)\n            .on(\"mousemove.pan\", onPan)\n            .on(\"mousemove.hover\", onHover);\n\n        this.mainGraphState.mouseHandlerPickSvg!.on(\"wheel\", onZoom)\n            .on(\"click\", onPickerClick)\n            .on(\"mousemove\", onHover);\n\n        this.mainGraphState.brushX = d3.brushX()\n            .extent([[0, 0], [this.mainGraphState.innerWidth, this.mainGraphState.innerHeight]])\n            .on(\"end\", onBrushXEnd);\n\n        this.mainGraphState.brushXElement = this.mainGraphState.mouseHandlerBrushXSvg!\n            .append(\"g\")\n            .attr(\"class\", \"brush\")\n            .call(this.mainGraphState.brushX)\n            .on(\"wheel\", onZoom)\n            .on(\"mousemove\", onHover);\n\n        this.mainGraphState.brush2d = d3.brush()\n            .extent([[0, 0], [this.mainGraphState.innerWidth, this.mainGraphState.innerHeight]])\n            .on(\"end\", onBrush2dEnd);\n\n        this.mainGraphState.brush2dElement = this.mainGraphState.mouseHandlerBrush2dSvg!\n            .append(\"g\")\n            .attr(\"class\", \"brush\")\n            .call(this.mainGraphState.brush2d)\n            .on(\"wheel\", onZoom)\n            .on(\"mousemove\", onHover);\n\n        // Commented out as the selection brush is no longer used\n        // Selection brush could be used to return all packets in a selection\n        // this.mainGraphState.selectionBrush = d3.brush()\n        //     .extent([[0, 0], [this.mainGraphState.innerWidth, this.mainGraphState.innerHeight]])\n        //     .on(\"end\", onSelection);\n\n        // this.mainGraphState.mouseHandlerSelectionSvg!\n        //     .append(\"g\")\n        //     .attr(\"class\", \"brush\")\n        //     .call(this.mainGraphState.selectionBrush)\n        //     .on(\"wheel\", onZoom)\n        //     .on(\"mousemove\", onHover);\n\n        // Set the perspective now that we are done setting up\n        // This allows us to only show elements that need to be shown in the current mode (packet_sent vs packet_received as main focus)\n        this.setPerspective(this.mainGraphState.useSentPerspective, false);\n\n        // Make the graphs visible\n        this.mainGraphContainer!.style(\"display\", \"block\");\n        this.recoveryGraphContainer!.style(\"display\", \"block\");\n\n        return true;\n    }\n\n    // Initialises data used for the \"packet_sent\" perspective\n    private initSentSide(settings: any){\n        // Save the current perspective as it will be changed during this method\n        const useSentPerspective: boolean = this.mainGraphState.useSentPerspective;\n\n        // Change to sent perspective as the extrema functions look for extrema in the current perspective\n        this.mainGraphState.useSentPerspective = true;\n\n        // Find the extrema for each axis which we can use for the domains of the scales\n        const [minCongestionY, maxCongestionY, minRTT, maxRTT] = this.findMetricUpdateExtrema();\n        const [localXMin, localXMax] = [settings.minX && settings.minX > 0 ? settings.minX : 0, \n                                        settings.maxX && settings.maxX < this.mainGraphState.sent.originalRangeX[1] ? settings.maxX : this.mainGraphState.sent.originalRangeX[1]];\n        const [localMinY, localMaxY] = this.findYExtrema(localXMin, localXMax);\n\n        // Make the congestion graph take up only 1/3 of the vertical screen space\n        const scaledMaxCongestionY = maxCongestionY * 3;\n\n        // Create the scales with domains based on the extrema we just found\n        this.mainGraphState.sent.xScale = d3.scaleLinear()\n            .domain([localXMin, localXMax])\n            .range([0, this.mainGraphState.innerWidth]);\n\n        this.mainGraphState.sent.yScale = d3.scaleLinear()\n            .domain([localMinY, localMaxY])\n            .range([this.mainGraphState.innerHeight, 0]);\n\n        this.mainGraphState.sent.yCongestionScale = d3.scaleLinear()\n            .domain([0, scaledMaxCongestionY])\n            .range([this.mainGraphState.innerHeight, 0])\n            .nice();\n\n        this.recoveryGraphState.yScale = d3.scaleLinear()\n            .domain([0, maxRTT])\n            .range([this.recoveryGraphState.innerHeight, 0]);\n\n        this.mainGraphState.sent.xAxis = d3.axisBottom(this.mainGraphState.sent.xScale)\n            .tickSize(-this.mainGraphState.innerHeight)\n            .scale(this.mainGraphState.sent.xScale);\n\n        // Custom labeling so that big numbers are nicely rounded using a 'k' postfix\n        this.mainGraphState.sent.yAxis = d3.axisLeft(this.mainGraphState.sent.yScale)\n            .tickFormat( ( val ) => {\n                const nr: number = val.valueOf !== undefined ? val.valueOf() : val as number;\n                if (nr > 1000 || nr < -1000) {\n                    // 12000 -> 12k\n                    // 12010 -> 12010\n                    if ( Math.round(nr) % 1000 === 0 ){\n                        const k = Math.round(nr / 1000);\n\n                        return k + \"K\";\n                    } else {\n                        return Math.round(nr).toString();\n                    }\n                } else {\n                    return Math.round(nr).toString();\n                }\n            })\n            .tickSize(-this.mainGraphState.innerWidth)\n            .scale(this.mainGraphState.sent.yScale)\n\n        this.mainGraphState.sent.yCongestionAxis = d3.axisRight(this.mainGraphState.sent.yCongestionScale)\n            .tickFormat( ( val ) => {\n                const nr: number = val.valueOf !== undefined ? val.valueOf() : val as number;\n                if (nr > 1000 || nr < -1000) {\n                    // 12000 -> 12k\n                    // 12010 -> 12010\n                    if (Math.round(nr) % 1000 === 0 ) {\n                        const k = Math.round(nr / 1000);\n\n                        return k + \"K\";\n                    }\n                    else{\n                        return Math.round(nr).toString();\n                    }\n                }\n                else {\n                    return Math.round(nr).toString();\n                }\n            })\n            .tickSize(this.mainGraphState.innerWidth)\n            .scale(this.mainGraphState.sent.yCongestionScale)\n\n        // The recovery x axis uses the same x scale as the main graph's x axis\n        // so that panning/zooming/etc also applies to the recovery graph\n        this.recoveryGraphState.xAxis = d3.axisBottom(this.mainGraphState.sent.xScale)\n            .tickSize(-this.recoveryGraphState.innerHeight)\n            .scale(this.mainGraphState.sent.xScale);\n\n        this.recoveryGraphState.yAxis = d3.axisLeft(this.recoveryGraphState.yScale!)\n            .tickSize(-this.recoveryGraphState.innerWidth)\n            .scale(this.recoveryGraphState.yScale!);\n\n        // Set the new current domains\n        this.mainGraphState.sent.rangeX = [localXMin, localXMax];\n        this.mainGraphState.sent.rangeY = [localMinY, localMaxY];\n        this.mainGraphState.sent.congestionRangeY = this.mainGraphState.sent.originalCongestionRangeY;\n        this.recoveryGraphState.rangeY = this.recoveryGraphState.originalRangeY;\n\n        // Change the perspective back to what it originally was\n        this.mainGraphState.useSentPerspective = useSentPerspective;\n    }\n\n    // Initialises data used for the \"packet_sent\" perspective\n    private initReceivedSide(settings: any){\n        // Save the current perspective as it will be changed during this method\n        const useSentPerspective: boolean = this.mainGraphState.useSentPerspective;\n\n        // Change to sent perspective as the extrema functions look for extrema in the current perspective\n        this.mainGraphState.useSentPerspective = false;\n\n        // Find the extrema for each axis which we can use for the domains of the scales\n        const [localXMin, localXMax] = [settings.minX && settings.minX > 0 ? settings.minX : 0, \n                                        settings.maxX && settings.maxX < this.mainGraphState.received.originalRangeX[1] ? settings.maxX : this.mainGraphState.received.originalRangeX[1]];\n        const [localMinY, localMaxY] = this.findYExtrema(localXMin, localXMax);\n\n        // Create the scales with domains based on the extrema we just found\n        this.mainGraphState.received.xScale = d3.scaleLinear()\n            .domain([localXMin, localXMax])\n            .range([0, this.mainGraphState.innerWidth]);\n\n        this.mainGraphState.received.yScale = d3.scaleLinear()\n            .domain([localMinY, localMaxY])\n            .range([this.mainGraphState.innerHeight, 0]);\n\n        this.mainGraphState.received.xAxis = d3.axisBottom(this.mainGraphState.received.xScale)\n            .tickSize(-this.mainGraphState.innerHeight)\n            .scale(this.mainGraphState.received.xScale);\n\n        // Custom labeling so that big numbers are nicely rounded using a 'k' postfix\n        this.mainGraphState.received.yAxis = d3.axisLeft(this.mainGraphState.received.yScale)\n            .tickFormat( ( val ) => {\n                const nr: number = val.valueOf !== undefined ? val.valueOf() : val as number;\n                if (nr > 1000 || nr < -1000) {\n                    // 12000 -> 12k\n                    // 12010 -> 12010\n                    if ( Math.round(nr) % 1000 === 0 ){\n                        const k = Math.round(nr / 1000);\n\n                        return k + \"K\";\n                    } else {\n                        return Math.round(nr).toString();\n                    }\n                } else {\n                    return Math.round(nr).toString();\n                }\n            })\n            .tickSize(-this.mainGraphState.innerWidth)\n            .scale(this.mainGraphState.received.yScale)\n\n        // Set the new current domains\n        this.mainGraphState.received.rangeX = [localXMin, localXMax];\n        this.mainGraphState.received.rangeY = [localMinY, localMaxY];\n\n        // Change the perspective back to what it originally was\n        this.mainGraphState.useSentPerspective = useSentPerspective;\n    }\n\n    // Redraw canvas using the current set boundaries (stored in rangeX and rangeY for the current perspective)\n    private async renderParts(){\n        this.redrawCanvas(this.mainGraphState.currentPerspective().rangeX[0], \n                          this.mainGraphState.currentPerspective().rangeX[1], \n                          this.mainGraphState.currentPerspective().rangeY[0], \n                          this.mainGraphState.currentPerspective().rangeY[1]);\n    }\n\n    // Y corresponds to coordinates for data sent/received in bytes\n    // Y scale for congestion info and recovery info is static and can not be changed\n    private redrawCanvas(minX: number, maxX: number, minY: number, maxY: number) {\n        // currentPerspective gives easy access to the variables of the current perspective\n        // This way we can cover both perspectives without having to use a lot conditions\n        const currentPerspective = this.mainGraphState.currentPerspective();\n\n        // The width of a single event, before scaling applied\n        const rectWidth = 3;\n\n        // Set the domain of the scales\n        currentPerspective.xScale = d3.scaleLinear()\n            .domain([minX, maxX])\n            .range([0, this.mainGraphState.innerWidth]);\n\n        currentPerspective.yScale = d3.scaleLinear()\n            .domain([minY, maxY])\n            .range([this.mainGraphState.innerHeight, 0]);\n\n        // And update the graphical axii to display these new scales\n        this.mainGraphState.gxAxis!.call(currentPerspective.xAxis!.scale(currentPerspective.xScale));\n        this.mainGraphState.gyAxis!.call(currentPerspective.yAxis!.scale(currentPerspective.yScale));\n\n        // Clear before drawing\n        this.mainGraphState.canvasContext!.clearRect(0, 0, this.mainGraphState.innerWidth, this.mainGraphState.innerHeight);\n\n        if (this.mainGraphState.useSentPerspective) {\n            // In case we're using the 'sent-perspective' we want to update the recoverygraph's graphical axis as well\n            this.recoveryGraphState.gxAxis!.call(currentPerspective.xAxis!.scale(currentPerspective.xScale));\n            // And clear its canvas\n            this.recoveryGraphState.canvasContext!.clearRect(0, 0, this.recoveryGraphState.innerWidth, this.recoveryGraphState.innerHeight);\n        }\n\n        // The drawscales differ between x and y and are used for scaling when zooming in/out\n        // The X drawscale increases asymptotically to a maximum value using a modified sigmoid function\n        //     This cap ensures that events do not become overly large when zoomed in\n        // The Y scaling function scales values down to, going up to 1 asymptotically\n        //     This is necessary as we want Y values to be precise when zoomed in while we still want them to be visible when zoomed out\n        currentPerspective.drawScaleX = this.xScalingFunction((currentPerspective.originalRangeX[1] - currentPerspective.originalRangeX[0]) / (maxX - minX));\n        currentPerspective.drawScaleY = this.yScalingFunction((currentPerspective.originalRangeY[1] - currentPerspective.originalRangeY[0]) / (maxY - minY));\n\n        // We then iterate over either the list of packets sent or received, based on the current perspective\n        const packetList = this.mainGraphState.useSentPerspective ? this.packetsSent : this.packetsReceived;\n\n        for (const packet of packetList) {\n            // Draw the packets and their corresponding ack and loss events\n            const parsedPacket = this.config.connection!.parseEvent(packet);\n            const extraData = ((packet as any) as IEventExtension).qvis.congestion;\n\n            const height = currentPerspective.yScale(extraData.to) - currentPerspective.yScale(extraData.from);\n            const x = currentPerspective.xScale( this.transformTime(parsedPacket.relativeTime) );\n            const y = currentPerspective.yScale(extraData.to);\n\n            // Only draw within bounds\n            if (x + rectWidth >= 0 && x <= this.mainGraphState.innerWidth && y + height >= 0 && y <= this.mainGraphState.innerHeight) {\n                this.drawRect(this.mainGraphState.canvasContext!, x, y, rectWidth, height, \"#0000FF\");\n            }\n\n            // Draw the packet's ACK, if it has one\n            if (extraData.correspondingAck) {\n                const parsedAck = this.config.connection!.parseEvent(extraData.correspondingAck);\n\n                const ackX = currentPerspective.xScale( this.transformTime(parsedAck.relativeTime) );\n\n                // Only draw within bounds\n                if (ackX + rectWidth >= 0 && x <= this.mainGraphState.innerWidth && y + height >= 0 && y <= this.mainGraphState.innerHeight) {\n                    this.drawRect(this.mainGraphState.canvasContext!, ackX, y, rectWidth, height, \"#6B8E23\");\n                }\n            }\n\n            // And its loss event, if it has one\n            if (extraData.correspondingLoss) {\n                const parsedLoss = this.config.connection!.parseEvent(extraData.correspondingLoss);\n\n                const lossX = currentPerspective.xScale( this.transformTime(parsedLoss.relativeTime) );\n\n                // Only draw within bounds\n                if (lossX + rectWidth >= 0 && x <= this.mainGraphState.innerWidth && y + height >= 0 && y <= this.mainGraphState.innerHeight) {\n                    this.drawRect(this.mainGraphState.canvasContext!, lossX, y, rectWidth, height, \"#FF0000\");\n                }\n            }\n        }\n\n        // When using the sent perspective we also want to draw congestion and RTT info\n        // These are visualised using lines instead of rects/points\n        if (this.mainGraphState.useSentPerspective) {\n            // Congestion\n            if (this.mainGraphState.congestionGraphEnabled) {\n                this.drawLines(this.mainGraphState.canvasContext!, this.mainGraphState.metricUpdateLines.bytes.map((point) => {\n                    return [ this.mainGraphState.sent.xScale!(point[0]), this.mainGraphState.sent.yCongestionScale!(point[1]) ];\n                }), \"#808000\", this.drawCircle);\n\n                this.drawLines(this.mainGraphState.canvasContext!, this.mainGraphState.metricUpdateLines.cwnd.map((point) => {\n                    return [ this.mainGraphState.sent.xScale!(point[0]), this.mainGraphState.sent.yCongestionScale!(point[1]) ];\n                }), \"#8A2BE2\", this.drawCross);\n\n\n                this.drawLines(this.mainGraphState.canvasContext!, this.mainGraphState.flowControlLines.application.map((point) => {\n                    return [ this.mainGraphState.sent.xScale!(point[0]), this.mainGraphState.sent.yScale!(point[1]) ];\n                }), \"#a80f3a\", this.drawCross);\n\n                this.drawLines(this.mainGraphState.canvasContext!, this.mainGraphState.flowControlLines.stream.map((point) => {\n                    return [ this.mainGraphState.sent.xScale!(point[0]), this.mainGraphState.sent.yScale!(point[1]) ];\n                }), \"#ff69b4\", this.drawCross);\n            }\n\n            // RTT\n            this.drawLines(this.recoveryGraphState.canvasContext!, this.mainGraphState.metricUpdateLines.minRTT.map((point) => {\n                return [ this.mainGraphState.sent.xScale!(point[0]), this.recoveryGraphState.yScale!(point[1]) ];\n            }), \"#C96480\", undefined);\n\n            this.drawLines(this.recoveryGraphState.canvasContext!, this.mainGraphState.metricUpdateLines.smoothedRTT.map((point) => {\n                return [ this.mainGraphState.sent.xScale!(point[0]), this.recoveryGraphState.yScale!(point[1]) ];\n            }), \"#8a554a\", undefined);\n\n            this.drawLines(this.recoveryGraphState.canvasContext!, this.mainGraphState.metricUpdateLines.lastRTT.map((point) => {\n                return [ this.mainGraphState.sent.xScale!(point[0]), this.recoveryGraphState.yScale!(point[1]) ];\n            }), \"#ff9900\", undefined);\n        }\n\n        // Update the ranges to their new values\n        currentPerspective.rangeX = [minX, maxX];\n        currentPerspective.rangeY = [minY, maxY];\n    }\n\n    private drawRect(canvasContext: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, color: string){\n        canvasContext.beginPath();\n        canvasContext.fillStyle = color;\n        // seems like things with height < 0.05 don't actually get drawn... so clamp it.\n        //  this is less accurate at max zoomed-out for large traces, but at least draws something\n\n        // TODO: this was added as a quick fix. Figure out why height is sometimes negative and sometimes positive (should always be one of both...)\n        if ( height < 0 ) {\n            canvasContext.rect(x, y, width * this.mainGraphState.currentPerspective().drawScaleX, Math.max(0.05, -height * this.mainGraphState.currentPerspective().drawScaleY));\n        }\n        else {\n            canvasContext.rect(x, y, width * this.mainGraphState.currentPerspective().drawScaleX, Math.min(-0.05, -height * this.mainGraphState.currentPerspective().drawScaleY));\n        }\n        canvasContext.fill();\n    }\n\n    private drawLines(\n        canvasContext: CanvasRenderingContext2D, \n        pointList: Array<[number, number]>, \n        color: string, \n        tickDrawFunction: ((canvasContext: CanvasRenderingContext2D, x: number, y: number, color: string) => void) | undefined,\n    ) {\n        canvasContext.lineWidth = 1 * this.mainGraphState.currentPerspective().drawScaleX;\n        if (pointList.length > 0) {\n            canvasContext.beginPath();\n            canvasContext.strokeStyle = color;\n            const startX = pointList[0][0];\n            const startY = pointList[0][1];\n            canvasContext.moveTo(startX, startY);\n            for (let i = 1; i < pointList.length; ++i) {\n                const pointX = pointList[i][0];\n                const pointY = pointList[i][1];\n                canvasContext.lineTo(pointX, pointY);\n            }\n            canvasContext.stroke();\n            for (let i = 1; i < pointList.length; ++i) {\n                const pointX = pointList[i][0];\n                const pointY = pointList[i][1];\n                if (tickDrawFunction) {\n                    tickDrawFunction(canvasContext, pointX, pointY, color);\n                }\n            }\n        }\n    }\n\n    private drawCross(canvasContext: CanvasRenderingContext2D, centerX: number, centerY: number, color: string){\n        const radius = 2;\n        canvasContext.strokeStyle = color;\n        // Top left to bottom right\n        canvasContext.beginPath();\n        canvasContext.moveTo(centerX - radius, centerY - radius);\n        canvasContext.lineTo(centerX + radius, centerY + radius);\n        canvasContext.stroke();\n\n        // Top right to bottom left\n        canvasContext.beginPath();\n        canvasContext.moveTo(centerX + radius, centerY - radius);\n        canvasContext.lineTo(centerX - radius, centerY + radius);\n        canvasContext.stroke();\n    }\n\n    private drawCircle(canvasContext: CanvasRenderingContext2D, centerX: number, centerY: number, color: string){\n        const radius = 2;\n        canvasContext.fillStyle = color;\n\n        canvasContext.beginPath();\n        canvasContext.arc(centerX, centerY, radius, 0, 360);\n        canvasContext.fill();\n    }\n\n    // Changes the perspective by either hiding/showing certain elements exclusive to the sent perspective\n    private setPerspective(useSentPerspective: boolean, redraw: boolean){\n        this.mainGraphState.useSentPerspective = useSentPerspective;\n\n        if (!this.mainGraphState.useSentPerspective) {\n            this.mainGraphState.congestionAxisText!.style(\"display\", \"none\");\n            this.mainGraphState.gyCongestionAxis!.style(\"display\", \"none\");\n            this.recoveryGraphState.graphSvg!.style(\"display\", \"none\");\n            this.recoveryGraphState.canvas!.style(\"display\", \"none\");\n        } else {\n            this.mainGraphState.congestionAxisText!.style(\"display\", \"block\");\n            this.mainGraphState.gyCongestionAxis!.style(\"display\", \"block\");\n            this.recoveryGraphState.graphSvg!.style(\"display\", \"block\");\n            this.recoveryGraphState.canvas!.style(\"display\", \"block\");\n        }\n\n        if (redraw) {\n            this.redrawCanvas(\n                this.mainGraphState.currentPerspective().rangeX[0], \n                this.mainGraphState.currentPerspective().rangeX[1], \n                this.mainGraphState.currentPerspective().rangeY[0], \n                this.mainGraphState.currentPerspective().rangeY[1] );\n        }\n    }\n\n    // Parses the log file and modifies packets so that there are easy links from each packet to their corresponding acks and/or losses\n    private parseQlog() {\n        // Keep track of extrema as we'll be going over all packets anyway\n        const sent = {\n            xMin: Infinity,\n            xMax: 0,\n            yMin: Infinity,\n            yMax: 0,\n            minCongestionY: Infinity,\n            maxCongestionY: 0,\n            minRTT: Infinity,\n            maxRTT: 0,\n        }\n        const received = {\n            xMin: Infinity,\n            xMax: 0,\n            yMin: Infinity,\n            yMax: 0,\n        }\n\n        // Init the lookup table as we'll be retrieving our lists of packets from there\n        this.config.connection!.setupLookupTable();\n\n        const packetsSent = this.config.connection!.lookup(qlog.EventCategory.transport, qlog.TransportEventType.packet_sent);\n        const packetsReceived = this.config.connection!.lookup(qlog.EventCategory.transport, qlog.TransportEventType.packet_received);\n        const packetsLost = this.config.connection!.lookup(qlog.EventCategory.recovery, qlog.RecoveryEventType.packet_lost);\n        const metricUpdates = this.config.connection!.lookup(qlog.EventCategory.recovery, qlog.RecoveryEventType.metrics_updated);\n        const transportParams = this.config.connection!.lookup(qlog.EventCategory.transport, qlog.TransportEventType.parameters_set);\n\n        const packetSentList = [];\n        const packetReceivedList = [];\n\n        let totalSentByteCount = 0;\n        let totalReceivedByteCount = 0;\n\n        for (const params of transportParams ) {\n            const parsedPacket = this.config.connection!.parseEvent(params);\n            const data = parsedPacket.data as IEventTransportParametersSet;\n            const timestamp = this.transformTime( parsedPacket.relativeTime );\n\n            if ( data.owner && data.owner === \"remote\" ) {\n                if ( data.initial_max_data ) {\n                    this.mainGraphState.flowControlLines.application.push([timestamp, parseFloat(data.initial_max_data)]);\n                }\n                if ( data.initial_max_stream_data_bidi_remote ) {\n                    this.mainGraphState.flowControlLines.stream.push([timestamp, parseFloat(data.initial_max_stream_data_bidi_remote)]);\n                }\n            }\n        }\n\n        let DEBUG_packetsWithInvalidSize = 0;\n        for (const packet of packetsSent) {\n            const parsedPacket = this.config.connection!.parseEvent(packet)\n            const data = parsedPacket.data;\n            const timestamp = this.transformTime( parsedPacket.relativeTime );\n\n            // Create a private namespace where we can plug in additional data -> corresponding acks, losses and from-to range\n            this.createPrivateNamespace(packet);\n            const extraData = ((packet as any) as IEventExtension).qvis.congestion;\n\n            if (!data.header.packet_size || data.header.packet_size === 0) {\n                ++DEBUG_packetsWithInvalidSize;\n                continue;\n            }\n\n            const packetOffsetStart = totalSentByteCount + 1;\n            totalSentByteCount += data.header.packet_size;\n\n            extraData.from = packetOffsetStart;\n            extraData.to = totalSentByteCount;\n\n            // Store temporarily so we can link the ACK to this packet later in packet.qviscongestion.correspondingAck\n            packetSentList[ parseInt( data.header.packet_number, 10 ) ] = packet;\n\n            // Update extrema\n            sent.xMin = sent.xMin > timestamp ? timestamp : sent.xMin;\n            sent.xMax = sent.xMax < timestamp ? timestamp : sent.xMax;\n            sent.yMin = sent.yMin > packetOffsetStart ? packetOffsetStart : sent.yMin;\n            sent.yMax = sent.yMax < totalSentByteCount ? totalSentByteCount : sent.yMax;\n\n            received.xMin = received.xMin > timestamp ? timestamp : received.xMin;\n            received.xMax = received.xMax < timestamp ? timestamp : received.xMax;\n        }\n\n        if ( DEBUG_packetsWithInvalidSize > 0 ){\n            console.error(\"CongestionGraphD3Renderer:parseQlog : There were \" + DEBUG_packetsWithInvalidSize + \" sent packets with invalid size! They were not used!\");\n        }\n\n        const streamFCMap:Map<string, number> = new Map<string, number>();\n        DEBUG_packetsWithInvalidSize = 0;\n        for (const packet of packetsReceived) {\n            const parsedPacket = this.config.connection!.parseEvent(packet)\n            const data = parsedPacket.data;\n            const timestamp = this.transformTime( parsedPacket.relativeTime );\n\n            // Create a private namespace where we can plug in additional data -> corresponding acks, losses and from-to range\n            this.createPrivateNamespace(packet);\n            const extraData = ((packet as any) as IEventExtension).qvis.congestion;\n\n            if (data.header.packet_size && data.header.packet_size !== 0) {\n                const packetOffsetStart = totalReceivedByteCount + 1;\n                totalReceivedByteCount += data.header.packet_size;\n\n                extraData.from = packetOffsetStart;\n                extraData.to = totalReceivedByteCount;\n\n                packetReceivedList[ parseInt( data.header.packet_number, 10 ) ] = packet; // Store temporarily so we can link the ACK to this packet later in packet.qviscongestion.correspondingAck\n\n                // Update extrema\n                received.xMin = received.xMin > timestamp ? timestamp : received.xMin;\n                received.xMax = received.xMax < timestamp ? timestamp : received.xMax;\n                received.yMin = received.yMin > packetOffsetStart ? packetOffsetStart : received.yMin;\n                received.yMax = received.yMax < totalReceivedByteCount ? totalReceivedByteCount : received.yMax;\n\n                sent.xMin = sent.xMin > timestamp ? timestamp : sent.xMin;\n                sent.xMax = sent.xMax < timestamp ? timestamp : sent.xMax;\n\n            } else {\n                ++DEBUG_packetsWithInvalidSize;\n            }\n\n            // List of received packets also contains all ACKs this endpoint has received\n            // so let's iterate over the ACKs and link them to their respective packets\n\n            // Make sure the packet contains frames\n            if (!data.frames) {\n                continue;\n            }\n\n            const ackFrames = [];\n            for (const frame of data.frames) {\n                if (frame.frame_type === qlog.QUICFrameTypeName.ack) {\n                    ackFrames.push(frame);\n                }\n                else if ( frame.frame_type === qlog.QUICFrameTypeName.max_data ) {\n                    if ( (frame as qlog.IMaxDataFrame).maximum !== undefined ){\n                        // TODO: make sure the axis limits accomodate this? However, if someone sends massively huge FC, this will mess with normal rendering\n                        // for now: only render FC updates that are within range of the total sent data (otherwhise, they're not useful either way)\n                        this.mainGraphState.flowControlLines.application.push([timestamp, parseFloat(frame.maximum)]);\n                    }\n                }\n                else if ( frame.frame_type === qlog.QUICFrameTypeName.max_stream_data ) {\n                    if ( (frame as qlog.IMaxStreamDataFrame).maximum !== undefined ) {\n                        // we cannot keep a rolling sum, as the changes are not cumulative but absolute\n                        // so keep track of each absolute value per-stream and sum them up each time something changes\n                        const streamID = \"\" + (frame as qlog.IMaxStreamDataFrame).stream_id;\n                        streamFCMap.set( streamID, parseFloat(frame.maximum) );\n                        \n                        let streamFCSum = 0;\n                        for ( const val of streamFCMap.values() ){\n                            streamFCSum += val;\n                        }\n                        \n                        // TODO: make sure the axis limits accomodate this? However, if someone sends massively huge FC, this will mess with normal rendering\n                        // for now: only render FC updates that are within range of the total sent data (otherwhise, they're not useful either way)\n                        this.mainGraphState.flowControlLines.stream.push([timestamp, streamFCSum]);\n                    }\n                }\n            }\n\n            if (ackFrames.length === 0) {\n                continue;\n            }\n\n            // now we have the ACK frames. These are composed of ACK blocks, each ACKing a range of packet numbers\n            // we go over them all, look them up individually, and add them to packetAckedList\n            let DEBUG_packetsNotSent:number = 0;\n\n            for (const frame of ackFrames) {\n                if ( !frame.acked_ranges ) {\n                    continue;\n                }\n                for (const range of frame.acked_ranges) {\n\n                    let from = -1;\n                    let to = -1;\n                    if ( range.length === 2 ){\n                        from = parseInt(range[0], 10);\n                        to = parseInt(range[1], 10); // up to and including\n                    }\n                    else { // just logs a single packet number, not a full range\n                        from = parseInt(range[0], 10);\n                        to = from;\n                    }\n\n                    // ackedNr will be the ACKed packet number of one of our SENT packets here\n                    for (let ackedNr = from; ackedNr <= to; ++ackedNr) {\n                        // find the originally sent packet\n                        const sentPacket = packetSentList[ ackedNr ];\n                        if (!sentPacket){\n                            // console.error(\"Packet was ACKed that we didn't send... ignoring\", ackedNr, frame, packet);\n                            ++DEBUG_packetsNotSent;\n                            continue;\n                        }\n\n                        // packets can be acked multiple times across received ACKs (duplicate ACKs).\n                        // This is quite normal in QUIC.\n                        // We only want to show the FIRST time a packet was acked, so if the acked number already exists\n                        // we do not overwrite it with a later timestamp\n                        // TODO: MAYBE it's interesting to show duplicate acks as well, since this gives an indication of how long it took the peer to catch up\n                        // e.g., if we have a long vertical line of acks, it means the peer might be sending too large ACK packets\n                        if ( !((sentPacket as any) as IEventExtension).qvis.congestion.correspondingAck ) {\n                            // Store references to the corresponding ack but also store the sending packet in the ACK packet so that it can be retrieved both ways\n                            ((sentPacket as any) as IEventExtension).qvis.congestion.correspondingAck = packet;\n                            extraData.correspondingPackets.push(sentPacket); // Array of corresponding packets as ACKs can refer to multiple packets\n                        }\n                    }\n                }\n            }\n\n            if ( DEBUG_packetsNotSent > 0 ){\n                if ( this.config.connection!.commonFields && this.config.connection!.commonFields.protocol_type !== \"TCP\" ){\n                    console.error(\"CongestionGraphD3Renderer:parseQlog : There were \" + DEBUG_packetsNotSent + \" packets acked that we didn't send. If this is a TCP trace with SACKs, that is expected for now.\");\n                }\n            }\n        }\n\n        if ( DEBUG_packetsWithInvalidSize > 0 ){\n            console.error(\"CongestionGraphD3Renderer:parseQlog : There were \" + DEBUG_packetsWithInvalidSize + \" received packets with invalid size! They were not used!\");\n        }\n\n        // Loop over sent packets once more now that we have a list in which we can look up received packets\n        for ( const packet of packetsSent ) {\n            const parsedPacket = this.config.connection!.parseEvent(packet);\n            const data = parsedPacket.data;\n            const extraData = ((packet as any) as IEventExtension).qvis.congestion; // Already has private namespace made in previous loop over packetsSent\n\n            // List of sent packets also contains all ACKs this endpoint has sent\n            // so let's iterate over the ACKs and link them to their respective packets\n\n            // Make sure the packet contains frames\n            if (!data.frames) {\n                continue;\n            }\n\n            const ackFrames = [];\n            for (const frame of data.frames) {\n                if (frame.frame_type === qlog.QUICFrameTypeName.ack) {\n                    ackFrames.push(frame);\n                }\n            }\n\n            if (ackFrames.length === 0) {\n                continue;\n            }\n\n            // now we have the ACK frames. These are composed of ACK blocks, each ACKing a range of packet numbers\n            // we go over them all, look them up individually, and add them to packetAckedList\n            for (const frame of ackFrames) {\n                if ( !frame.acked_ranges ) {\n                    continue;\n                }\n                for (const range of frame.acked_ranges) {\n                    let from = -1;\n                    let to = -1;\n                    if ( range.length === 2 ){\n                        from = parseInt(range[0], 10);\n                        to = parseInt(range[1], 10); // up to and including\n                    }\n                    else { // just logs a single packet number, not a full range\n                        from = parseInt(range[0], 10);\n                        to = from;\n                    }\n\n                    // ackedNr will be the ACKed packet number of one of our RECEIVED packets here\n                    for (let ackedNr = from; ackedNr <= to; ++ackedNr) {\n                        // find the originally received packet\n                        const receivedPacket = packetReceivedList[ ackedNr ];\n                        if (!receivedPacket) {\n                            console.error(\"Packet was ACKed that we didn't receive... ignoring\", ackedNr, frame, packet);\n                            continue;\n                        }\n\n                        // packets can be acked multiple times across received ACKs (duplicate ACKs).\n                        // This is quite normal in QUIC.\n                        // We only want to show the FIRST time a packet was acked, so if the acked number already exists\n                        // we do not overwrite it with a later timestamp\n                        // TODO: MAYBE it's interesting to show duplicate acks as well, since this gives an indication of how long it took the peer to catch up\n                        // e.g., if we have a long vertical line of acks, it means the peer might be sending too large ACK packets\n                        if ( !((receivedPacket as any) as IEventExtension).qvis.congestion.correspondingAck ) {\n                            // Store references to the corresponding ack but also store the receiving packet in the ACK packet so that it can be retrieved both ways\n                            ((receivedPacket as any) as IEventExtension).qvis.congestion.correspondingAck = packet;\n                            extraData.correspondingPackets.push(receivedPacket);\n                        }\n                    }\n                }\n            }\n        }\n\n        for (const packet of packetsLost) {\n            const parsedPacket = this.config.connection!.parseEvent(packet);\n            const data = parsedPacket.data;\n            this.createPrivateNamespace(packet);\n\n            if ( data.packet_number === undefined ) {\n                console.error(\"Packet was LOST that didn't contain a packet_number field...\", packet);\n                continue;\n            }\n\n            const lostPacketNumber = parseInt( data.packet_number, 10 );\n            const sentPacket = packetSentList[ lostPacketNumber ];\n            if (!sentPacket) {\n                console.error(\"Packet was LOST that we didn't send... ignoring\", lostPacketNumber, packet);\n                continue;\n            }\n\n            // Store references to the corresponding loss but also store the sending packet in the loss packet so that it can be retrieved both ways\n            ((sentPacket as any) as IEventExtension).qvis.congestion.correspondingLoss = packet;\n            ((packet as any) as IEventExtension).qvis.congestion.correspondingPackets.push(sentPacket);\n        }\n\n        // Iterate over the metric updates in order to sort each type into their respective lists\n        for (const update of metricUpdates) {\n            const parsedUpdate = this.config.connection!.parseEvent(update);\n            const data = parsedUpdate.data;\n            const timestamp = this.transformTime( parsedUpdate.relativeTime );\n\n            if (data.bytes_in_flight) {\n                const y = data.bytes_in_flight;\n                sent.minCongestionY = sent.minCongestionY > y ? y : sent.minCongestionY;\n                sent.maxCongestionY = sent.maxCongestionY < y ? y : sent.maxCongestionY;\n                this.mainGraphState.metricUpdateLines.bytes.push([timestamp, y]);\n            }\n            if (data.cwnd) {\n                const y = data.cwnd;\n                sent.minCongestionY = sent.minCongestionY > y ? y : sent.minCongestionY;\n                sent.maxCongestionY = sent.maxCongestionY < y ? y : sent.maxCongestionY;\n                this.mainGraphState.metricUpdateLines.cwnd.push([timestamp, y]);\n            }\n            else if (data.congestion_window) {\n                const y = data.congestion_window;\n                sent.minCongestionY = sent.minCongestionY > y ? y : sent.minCongestionY;\n                sent.maxCongestionY = sent.maxCongestionY < y ? y : sent.maxCongestionY;\n                this.mainGraphState.metricUpdateLines.cwnd.push([timestamp, y]);\n            }\n            if (data.min_rtt) {\n                // Time can be in microseconds so make sure to convert it to ms\n                const y = parsedUpdate.timeToMilliseconds(data.min_rtt);\n                sent.minRTT = sent.minRTT > y ? y : sent.minRTT;\n                sent.maxRTT = sent.maxRTT < y ? y : sent.maxRTT;\n                this.mainGraphState.metricUpdateLines.minRTT.push([timestamp, y]);\n            }\n            if (data.smoothed_rtt) {\n                // Time can be in microseconds so make sure to convert it to ms\n                const y = parsedUpdate.timeToMilliseconds(data.smoothed_rtt);\n                sent.minRTT = sent.minRTT > y ? y : sent.minRTT;\n                sent.maxRTT = sent.maxRTT < y ? y : sent.maxRTT;\n                this.mainGraphState.metricUpdateLines.smoothedRTT.push([timestamp, y]);\n            }\n            if (data.latest_rtt) {\n                // Time can be in microseconds so make sure to convert it to ms\n                const y = parsedUpdate.timeToMilliseconds(data.latest_rtt);\n                sent.minRTT = sent.minRTT > y ? y : sent.minRTT;\n                sent.maxRTT = sent.maxRTT < y ? y : sent.maxRTT;\n                this.mainGraphState.metricUpdateLines.lastRTT.push([timestamp, y]);\n            }\n        }\n\n        // Store these for easy access later so we don't have to do a lookup every redraw\n        // Given that they will only change when loading in a new log we do not have to worry about that\n        this.packetsSent = packetsSent;\n        this.packetsReceived = packetsReceived;\n        this.metricUpdates = metricUpdates;\n\n        // Set the max ranges for each axis\n        this.mainGraphState.sent.originalRangeX = [0, sent.xMax];\n        this.mainGraphState.sent.originalRangeY = [0, sent.yMax];\n        this.mainGraphState.sent.originalCongestionRangeY = [0, sent.maxCongestionY];\n        this.recoveryGraphState.originalRangeY = [0, sent.maxRTT];\n\n        this.mainGraphState.received.originalRangeX = [0, received.xMax];\n        this.mainGraphState.received.originalRangeY = [0, received.yMax];\n\n        // Store the lines so they can easily be drawn later\n        this.mainGraphState.metricUpdateLines.bytes         = this.fixMetricUpdates(this.mainGraphState.metricUpdateLines.bytes);\n        this.mainGraphState.metricUpdateLines.cwnd          = this.fixMetricUpdates(this.mainGraphState.metricUpdateLines.cwnd);\n        this.mainGraphState.metricUpdateLines.minRTT        = this.fixMetricUpdates(this.mainGraphState.metricUpdateLines.minRTT);\n        this.mainGraphState.metricUpdateLines.smoothedRTT   = this.fixMetricUpdates(this.mainGraphState.metricUpdateLines.smoothedRTT);\n        this.mainGraphState.metricUpdateLines.lastRTT       = this.fixMetricUpdates(this.mainGraphState.metricUpdateLines.lastRTT);\n\n        this.mainGraphState.flowControlLines.application    = this.fixMetricUpdates(this.mainGraphState.flowControlLines.application); \n        this.mainGraphState.flowControlLines.stream         = this.fixMetricUpdates(this.mainGraphState.flowControlLines.stream); \n    }\n\n    /* Zooming is based on x position of the cursor\n    * Both the left and right side of the cursor should be scaled equally\n    * so that the x value under the cursor stays unchanged\n    *\n    * If 2/3 of the graph is to the left of the cursor's x value before zooming,\n    * then 2/3 of the graph should still be to the left of that x value\n    * | 1 2 3 4 * 1 2 | -> | 3 4 * 1 |\n    *\n    */\n    private onZoom() {\n        // Prevent page from scrolling\n        d3.event.preventDefault();\n\n        // Clear all ackarrows\n        this.mainGraphState.graphSvg!.selectAll(\".ackArrow\").remove();\n\n        // Clear packet info\n        this.clearPacketInfoWidget();\n\n        // Zoomfactor is inverted based on direction scrolled\n        const zoomFactor = d3.event.deltaY > 0 ? 1 / 1.5 : 1.5;\n\n        const mouseX = this.mainGraphState.currentPerspective().xScale!.invert(d3.mouse(d3.event.currentTarget)[0]);\n        const leftX = this.mainGraphState.currentPerspective().rangeX[0];\n        const rightX = this.mainGraphState.currentPerspective().rangeX[1];\n\n        const zoomedLeftPortion = ((mouseX - leftX) / zoomFactor);\n        const zoomedRightPortion = ((rightX - mouseX) / zoomFactor);\n\n        // Cap at full fit\n        const newLeftX = mouseX - zoomedLeftPortion >= 0 ? mouseX - zoomedLeftPortion : 0;\n        const newRightX = mouseX + zoomedRightPortion <= this.mainGraphState.currentPerspective().originalRangeX[1] \n                            ? mouseX + zoomedRightPortion \n                            : this.mainGraphState.currentPerspective().originalRangeX[1];\n\n        const [newTopY, newBottomY] = this.findYExtrema(newLeftX, newRightX);\n\n        // Repaint using new domains\n        this.redrawCanvas(newLeftX, newRightX, newTopY, newBottomY);\n    }\n\n    private onPan() {\n        // tslint:disable-next-line:no-bitwise\n        if (d3.event.buttons & 1) { // Primary button pressed and moving\n            // Transform mouse coordinates to graph coordinates\n            const graphX = this.mainGraphState.currentPerspective().xScale!.invert(d3.mouse(d3.event.currentTarget)[0]);\n            const graphY = this.mainGraphState.currentPerspective().yScale!.invert(d3.mouse(d3.event.currentTarget)[1]);\n\n            // If not yet set, set them for next event\n            if (this.previousMouseX === null || this.previousMouseY === null) {\n                this.previousMouseX = graphX;\n                this.previousMouseY = graphY;\n\n                return;\n            }\n\n            const panAmountX = (this.mainGraphState.currentPerspective().rangeX[1] - this.mainGraphState.currentPerspective().rangeX[0]) / this.mainGraphState.innerWidth;\n            const panAmountY = (this.mainGraphState.currentPerspective().rangeY[1] - this.mainGraphState.currentPerspective().rangeY[0]) / this.mainGraphState.innerHeight;\n\n            const deltaX = d3.event.movementX * panAmountX * -1;// graphX - previousX;\n            const deltaY = d3.event.movementY * panAmountY;// graphY - previousY;\n\n            this.panCanvas(deltaX, deltaY);\n\n            this.previousMouseX = graphX;\n            this.previousMouseX = graphY;\n        }\n    }\n\n    private clearPacketInfoWidget() {\n        // Clear the packet information and hide it\n        this.mainGraphState.packetInformationDiv!.style(\"display\", \"none\");\n        this.mainGraphState.packetInformationDiv!.select(\"#timestamp\").text(\"\");\n        this.mainGraphState.packetInformationDiv!.select(\"#packetNr\").text(\"\");\n        this.mainGraphState.packetInformationDiv!.select(\"#packetSize\").text(\"\");\n        this.mainGraphState.packetInformationDiv!.select(\"#ackedFrom\").text(\"\");\n        this.mainGraphState.packetInformationDiv!.select(\"#ackedTo\").text(\"\");\n    }\n\n    \n\n    \n    // Hovering over a packet gives a tooltip displaying information about the packet\n    // Hovering over an ACK packet also draws an indicator towards the corresponding packets it has ACKed\n    // Picking is done based on y coordinate of the cursor and the color of the pixel the mouse hovers over\n    private onHover() {\n        // Remove any dangling ACK arrows\n        this.mainGraphState.graphSvg!.selectAll(\".ackArrow\").remove();\n        this.clearPacketInfoWidget();\n\n        if (d3.event.buttons !== 0) {\n            return;\n        }\n\n        const svgHoverCoords = d3.mouse(d3.event.currentTarget);\n        const graphCoords = [this.mainGraphState.currentPerspective().xScale!.invert(svgHoverCoords[0]), this.mainGraphState.currentPerspective().yScale!.invert(svgHoverCoords[1])];\n\n        const pixelData = this.mainGraphState.canvasContext!.getImageData(svgHoverCoords[0], svgHoverCoords[1], 1, 1).data;\n        const pixelColor = [ pixelData[0], pixelData[1], pixelData[2] ];\n\n        // No event found\n        if (pixelColor[0] === 0 && pixelColor[1] === 0 && pixelColor[2] === 0) {\n            return;\n        }\n\n        // Loop over the relevant list of packets and search for a packet with a matching y value\n        const packetList = this.mainGraphState.useSentPerspective ? this.packetsSent : this.packetsReceived;\n\n        for (const packet of packetList) {\n            const parsedPacket = this.config.connection!.parseEvent(packet); // parsedPacket will change if parseEvent is called again, only saves last parsedEvent so make sure to save vars we need\n            const parsedPacketTime = this.transformTime( parsedPacket.relativeTime );\n            const parsedPacketData = parsedPacket.data;\n            const extraDetails = ((packet as any) as IEventExtension).qvis.congestion;\n\n            // Match found based on y value\n            //  -> Given that packet x values are in increasing order and a \"regular\" packet comes before its ack or loss,\n            //      we first match with the \"regular\" packet which has the same y value as its loss and ack packets\n            //  -> Using this packet we can find the corresponding loss or ack if needed, as these are stored in\n            //      packet.qvis.congestion.correspondingAck and packet.qvis.congestion.correspondingLoss\n            //  -> We determine which packet we want based on the colour the mouse is hovering over\n            if (extraDetails.from <= graphCoords[1] && extraDetails.to >= graphCoords[1]) {\n                if (pixelColor[0] === 0 && pixelColor[1] === 0 && pixelColor[2] === 255 ) {\n                    // Packet was of type 'packet_sent/packet_received' => display contents of current packet\n                    this.mainGraphState.packetInformationDiv!.style(\"display\", \"block\");\n                    this.mainGraphState.packetInformationDiv!.style(\"margin-left\", (svgHoverCoords[0] + this.mainGraphState.margins.left + 10) + \"px\");\n                    this.mainGraphState.packetInformationDiv!.style(\"margin-top\", (svgHoverCoords[1] + this.mainGraphState.margins.top + 10) + \"px\");\n                    this.mainGraphState.packetInformationDiv!.select(\"#timestamp\").text(\"Timestamp: \" + parsedPacketTime);\n                    this.mainGraphState.packetInformationDiv!.select(\"#packetNr\").text(\"PacketNr: \" + parsedPacketData.header.packet_number);\n                    // this.mainGraphState.packetInformationDiv!.select(\"#packetSize\").text(\"PacketSize: \" + parsedPacketData.header.packet_size);\n                    \n                    let packetText = \"PacketSize: \" + parsedPacketData.header.packet_size;\n\n                    for ( let i = 0; i < this.mainGraphState.metricUpdateLines.cwnd.length - 2; ++i ){\n                        const a = this.mainGraphState.metricUpdateLines.cwnd[i];\n                        const b = this.mainGraphState.metricUpdateLines.cwnd[i + 1];\n                        // [0] is timestamp, [1] is value\n                        if ( a[0] <= parsedPacketTime && b[0] > parsedPacketTime ) {\n                            packetText += \"<br/>\";\n                            packetText += \"CWND: \" + a[1] + \" bytes\";\n                        }\n                    }\n\n                    for ( let i = 0; i < this.mainGraphState.metricUpdateLines.bytes.length - 2; ++i ){\n                        const a = this.mainGraphState.metricUpdateLines.bytes[i];\n                        const b = this.mainGraphState.metricUpdateLines.bytes[i + 1];\n                        // [0] is timestamp, [1] is value\n                        if ( a[0] <= parsedPacketTime && b[0] > parsedPacketTime ) {\n                            packetText += \"<br/>\";\n                            packetText += \"In flight: \" + a[1] + \" bytes\";\n                        }\n                    }\n\n                    for ( let i = 0; i < this.mainGraphState.metricUpdateLines.lastRTT.length - 2; ++i ){\n                        const a = this.mainGraphState.metricUpdateLines.lastRTT[i];\n                        const b = this.mainGraphState.metricUpdateLines.lastRTT[i + 1];\n                        // [0] is timestamp, [1] is value\n                        if ( a[0] <= parsedPacketTime && b[0] > parsedPacketTime ) {\n                            packetText += \"<br/>\";\n                            packetText += \"RTT: \" + a[1] + \" ms\";\n                        }\n                    }\n\n                    for ( let i = 0; i < this.mainGraphState.metricUpdateLines.smoothedRTT.length - 2; ++i ){\n                        const a = this.mainGraphState.metricUpdateLines.smoothedRTT[i];\n                        const b = this.mainGraphState.metricUpdateLines.smoothedRTT[i + 1];\n                        // [0] is timestamp, [1] is value\n                        if ( a[0] <= parsedPacketTime && b[0] > parsedPacketTime ) {\n                            packetText += \"<br/>\";\n                            packetText += \"sRTT: \" + a[1] + \" ms\";\n                        }\n                    }\n\n\n                    this.mainGraphState.packetInformationDiv!.select(\"#packetSize\").html(packetText);\n\n                    return;\n                } else if (pixelColor[0] === 107 && pixelColor[1] === 142 && pixelColor[2] === 35 ) {\n                    // Packet was of type 'ack' => extract the ack packet from the 'packet_sent/packet_received'-packet (stored in var packet/parsedPacket)\n                    const ackPacket = extraDetails.correspondingAck!;\n                    const parsedAckPacket = this.config.connection!.parseEvent(ackPacket);\n\n                    this.mainGraphState.packetInformationDiv!.style(\"display\", \"block\");\n                    this.mainGraphState.packetInformationDiv!.style(\"margin-left\", (svgHoverCoords[0] + this.mainGraphState.margins.left + 10) + \"px\");\n                    this.mainGraphState.packetInformationDiv!.style(\"margin-top\", (svgHoverCoords[1] + this.mainGraphState.margins.top + 10) + \"px\");\n                    this.mainGraphState.packetInformationDiv!.select(\"#timestamp\").text(\"Timestamp: \" + this.transformTime( parsedAckPacket.relativeTime ));\n                    this.mainGraphState.packetInformationDiv!.select(\"#ackedFrom\").text(\"Acked from: \" + extraDetails.from);\n                    this.mainGraphState.packetInformationDiv!.select(\"#ackedTo\").text(\"Acked to: \" + extraDetails.to);\n\n                    let leftX = this.mainGraphState.currentPerspective().xScale!(parsedPacketTime);\n                    leftX = leftX > 0 ? leftX : 0;\n\n                    const topY = this.mainGraphState.currentPerspective().yScale!(extraDetails.from);\n                    const bottomY = this.mainGraphState.currentPerspective().yScale!(extraDetails.to);\n                    const height = (topY - bottomY) * this.mainGraphState.currentPerspective().drawScaleY;\n                    const width = this.mainGraphState.currentPerspective().xScale!( this.transformTime(parsedAckPacket.relativeTime) ) - \n                                    this.mainGraphState.currentPerspective().xScale!(parsedPacketTime);\n\n                    this.mainGraphState.graphSvg!\n                        .append(\"rect\")\n                        .attr(\"class\", \"ackArrow\")\n                        .attr(\"x\", leftX)\n                        .attr(\"width\", width)\n                        .attr(\"y\", bottomY)\n                        .attr(\"height\", height)\n                        .attr(\"fill\", \"#fff\")\n                        .attr(\"stroke-width\", \"2px\")\n                        .attr(\"stroke\", \"#686868\");\n\n                    return;\n                } else if (pixelColor[0] === 255 && pixelColor[1] === 0 && pixelColor[2] === 0 ) {\n                        // Packet was of type 'lost' => extract the lost packet from the 'packet_sent/packet_received'-packet (stored in var packet/parsedPacket)\n                        const lostPacked = extraDetails.correspondingLoss!;\n                        const parsedLostPacket = this.config.connection!.parseEvent(lostPacked);\n\n                        this.mainGraphState.packetInformationDiv!.style(\"display\", \"block\");\n                        this.mainGraphState.packetInformationDiv!.style(\"margin-left\", (svgHoverCoords[0] + this.mainGraphState.margins.left + 10) + \"px\");\n                        this.mainGraphState.packetInformationDiv!.style(\"margin-top\", (svgHoverCoords[1] + this.mainGraphState.margins.top + 10) + \"px\");\n                        this.mainGraphState.packetInformationDiv!.select(\"#timestamp\").text(\"Timestamp: \" + this.transformTime(parsedLostPacket.relativeTime));\n                        this.mainGraphState.packetInformationDiv!.select(\"#packetNr\").text(\"PacketNr: \" + parsedLostPacket.data.header.packet_number);\n                        this.mainGraphState.packetInformationDiv!.select(\"#packetSize\").text(\"PacketSize: \" + parsedLostPacket.data.header.packet_size);\n\n                        return;\n                }\n            }\n        }\n    }\n\n    private panCanvas(deltaXin: number, deltaYin: number){\n        let deltaX = deltaXin;\n        let deltaY = deltaYin;\n\n        // Check if pan stays within boundaries\n        // If not, set the delta to snap to boundary instead of passing it\n        if (this.mainGraphState.currentPerspective().rangeX[0] + deltaX < 0) {\n            deltaX = 0 - this.mainGraphState.currentPerspective().rangeX[0];\n        } else if (this.mainGraphState.currentPerspective().rangeX[1] + deltaX > this.mainGraphState.currentPerspective().originalRangeX[1]) {\n            deltaX = this.mainGraphState.currentPerspective().originalRangeX[1] - this.mainGraphState.currentPerspective().rangeX[1];\n        }\n        if (this.mainGraphState.currentPerspective().rangeY[0] + deltaY < 0) {\n            deltaY = 0 - this.mainGraphState.currentPerspective().rangeY[0];\n        } else if (this.mainGraphState.currentPerspective().rangeY[1] + deltaY > this.mainGraphState.currentPerspective().originalRangeY[1]) {\n            deltaY = this.mainGraphState.currentPerspective().originalRangeY[1] - this.mainGraphState.currentPerspective().rangeY[1];\n        }\n\n        const newLeftX =  this.mainGraphState.currentPerspective().rangeX[0] + deltaX;\n        const newRightX = this.mainGraphState.currentPerspective().rangeX[1] + deltaX;\n\n        const newTopY = this.mainGraphState.currentPerspective().rangeY[0] + deltaY;\n        const newBottomY =  this.mainGraphState.currentPerspective().rangeY[1] + deltaY;\n\n        this.redrawCanvas(newLeftX, newRightX, newTopY, newBottomY);\n    }\n\n    private onBrushXEnd(){\n        const selection = d3.event.selection;\n\n        // Convert screen-space coordinates to graph coords\n        const dragStartX = this.mainGraphState.currentPerspective().xScale!.invert(selection[0]);\n        const dragStopX = this.mainGraphState.currentPerspective().xScale!.invert(selection[1]);\n\n        // New dimensions\n        const [minX, maxX] = dragStartX < dragStopX ? [dragStartX, dragStopX] : [dragStopX, dragStartX];\n        const [minY, maxY] = this.findYExtrema(minX, maxX);\n\n        this.redrawCanvas(minX, maxX, minY, maxY);\n\n        this.usePanning(); // Switch back to panning mode\n        this.mainGraphState.brushXElement!.call(this.mainGraphState.brushX!.move, null); // Clear brush highlight\n    }\n\n    private onBrush2dEnd(){\n        const selection = d3.event.selection;\n\n        // Convert screen-space coordinates to graph coords\n        const dragStartX = this.mainGraphState.currentPerspective().xScale!.invert(selection[0][0]);\n        const dragStopX = this.mainGraphState.currentPerspective().xScale!.invert(selection[1][0]);\n        const dragStartY = this.mainGraphState.currentPerspective().yScale!.invert(selection[0][1]);\n        const dragStopY = this.mainGraphState.currentPerspective().yScale!.invert(selection[1][1]);\n\n        // New dimensions\n        const [minX, maxX] = dragStartX < dragStopX ? [dragStartX, dragStopX] : [dragStopX, dragStartX];\n        const [minY, maxY] = dragStartY < dragStopY ? [dragStartY, dragStopY] : [dragStopY, dragStartY];\n\n        this.redrawCanvas(minX, maxX, minY, maxY);\n\n        this.usePanning(); // Switch back to panning mode\n        this.mainGraphState.brush2dElement!.call(this.mainGraphState.brush2d!.move, null); // Clear brush highlight\n    }\n\n    private onPickerClick(){\n        const svgClickCoords = d3.mouse(d3.event.currentTarget);\n        const graphCoords = [this.mainGraphState.currentPerspective().xScale!.invert(svgClickCoords[0]), this.mainGraphState.currentPerspective().yScale!.invert(svgClickCoords[1])];\n\n        const pixelData = this.mainGraphState.canvasContext!.getImageData(svgClickCoords[0], svgClickCoords[1], 1, 1).data;\n        const pixelColor = [ pixelData[0], pixelData[1], pixelData[2] ];\n\n        this.mainGraphState.eventBus!.dispatchEvent(new CustomEvent('packetPickEvent', {\n            detail: {\n                x: graphCoords[0],\n                y: graphCoords[1],\n                pixelColor: pixelColor,\n            },\n        }));\n    }\n\n    // Sigmoid-like\n    private xScalingFunction(x: number): number {\n        return (1 / (1 + Math.exp(-(x - 2) ))) + 1.2;\n    }\n\n    // Asymptotic towards 1\n    private yScalingFunction(y: number): number {\n        return (1 / y) + 1;\n    }\n\n    // Searches for the min and max Y values (data sent/received) in a range\n    private findYExtrema(minX: number, maxX: number): [number, number] {\n        let min = Infinity;\n        let max = 0;\n\n        const packetList = this.mainGraphState.useSentPerspective ? this.packetsSent : this.packetsReceived;\n\n        for (const packet of packetList) {\n            const parsedPacket = this.config.connection!.parseEvent(packet);\n            const extraData = ((packet as any) as IEventExtension).qvis.congestion;\n            const timestamp = this.transformTime( parsedPacket.relativeTime );\n\n            if (minX <= timestamp && timestamp <= maxX) {\n                min = min > extraData.to ? extraData.to : min;\n                max = max < extraData.to ? extraData.to : max;\n            }\n        }\n\n        return [min, max];\n    }\n\n    // Returns [minCongestionY, maxCongestionY, minRTT, maxRTT];\n    // Optionally, a range of [minX, maxX] can be passed within which the y extrema must be located\n    private findMetricUpdateExtrema(range?: [number, number]): [number, number, number, number] {\n        let minCongestionY = 0;\n        let maxCongestionY = 0;\n        let minRTT = 0;\n        let maxRTT = 0;\n\n        const minX = range !== undefined ? range[0] : this.mainGraphState.currentPerspective().originalRangeX[0];\n        const maxX = range !== undefined ? range[1] : this.mainGraphState.currentPerspective().originalRangeX[1];\n\n        const metricUpdates = this.metricUpdates;\n\n        for (const update of metricUpdates) {\n            const parsedUpdate = this.config.connection!.parseEvent(update);\n            const data = parsedUpdate.data;\n\n            const timestamp = this.transformTime( parsedUpdate.relativeTime );\n\n            if (data.bytes_in_flight && minX <= timestamp && timestamp <= maxX) {\n                const y = parseInt(data.bytes_in_flight, 10);\n                minCongestionY = minCongestionY > y ? y : minCongestionY;\n                maxCongestionY = maxCongestionY < y ? y : maxCongestionY;\n            }\n            if (data.cwnd && minX <= timestamp && timestamp <= maxX) {\n                const y = parseInt(data.cwnd, 10);\n                minCongestionY = minCongestionY > y ? y : minCongestionY;\n                maxCongestionY = maxCongestionY < y ? y : maxCongestionY;\n            }\n            else if (data.congestion_window && minX <= timestamp && timestamp <= maxX) {\n                const y = parseInt(data.congestion_window, 10);\n                minCongestionY = minCongestionY > y ? y : minCongestionY;\n                maxCongestionY = maxCongestionY < y ? y : maxCongestionY;\n            }\n            if (data.min_rtt && minX <= timestamp && timestamp <= maxX) {\n                const y = parsedUpdate.timeToMilliseconds(data.min_rtt);\n                minRTT = minRTT > y ? y : minRTT;\n                maxRTT = maxRTT < y ? y : maxRTT;\n            }\n            if (data.smoothed_rtt && minX <= timestamp && timestamp <= maxX) {\n                const y = parsedUpdate.timeToMilliseconds(data.smoothed_rtt);\n                minRTT = minRTT > y ? y : minRTT;\n                maxRTT = maxRTT < y ? y : maxRTT;\n            }\n            if (data.latest_rtt && minX <= timestamp && timestamp <= maxX) {\n                const y = parsedUpdate.timeToMilliseconds(data.latest_rtt);\n                minRTT = minRTT > y ? y : minRTT;\n                maxRTT = maxRTT < y ? y : maxRTT;\n            }\n        }\n\n        return [minCongestionY, maxCongestionY, minRTT, maxRTT];\n    }\n\n    private createPrivateNamespace(obj: any): void {\n        if (obj.qvis === undefined) {\n            Object.defineProperty(obj, \"qvis\", { enumerable: false, value: {} });\n        }\n\n        if (obj.qvis.congestion === undefined ) {\n            obj.qvis.congestion = {\n                correspondingPackets: [],\n            };\n        }\n    }\n\n    private fixMetricUpdates(originalUpdates: Array<[number, number]>) {\n        const output: Array<[number, number]> = [];\n\n        if ( originalUpdates.length === 0 ) {\n            return output;\n        }\n\n        let lastValue = 0;\n        for ( const point of originalUpdates ){\n            if ( originalUpdates.length > 0 ) {\n                output.push( [point[0], lastValue] );\n            }\n\n            output.push( point );\n            lastValue = point[1];\n        }\n        // the final point should go all the way to the right\n        output.push( [ this.mainGraphState.currentPerspective().originalRangeX[1] + 1,  output[ output.length - 1 ][1] ] );\n        // output[0][0] = 0; // let's it start at the 0-point of the x-axis\n\n        return output;\n    }\n\n    private transformTime( relativeTime:number ){\n        if ( this._startTimeOffset === undefined ){\n            console.error(\"CongestionGraphD3Renderer:transformTime : _startTimeOffset was not set. We need this here!\");\n\n            return relativeTime;\n        }\n\n        return relativeTime + this._startTimeOffset;\n    }\n}\n\ninterface IEventExtension {\n    qvis: {\n        congestion: {\n            from: number,\n            to: number,\n            correspondingPackets: Array<Array<any>>, // List of pointers to the packets the loss or ack refers to\n            correspondingAck?: Array<any>, // Pointer to the ack event\n            correspondingLoss?: Array<any>, // Pointer to the loss event\n        },\n    },\n}\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue, Prop, Watch } from \"vue-property-decorator\";\nimport CongestionGraphConfig from \"./data/CongestionGraphConfig\";\nimport CongestionGraphD3Renderer from \"./renderer/CongestionGraphD3Renderer\";\n\n@Component\nexport default class CongestionGraphRenderer extends Vue {\n    @Prop()\n    public config!: CongestionGraphConfig;\n\n    protected get connection(){\n        return this.config.connection;\n    }\n\n    protected renderer: CongestionGraphD3Renderer | undefined = undefined;\n\n    public created(){\n        this.renderer = new CongestionGraphD3Renderer(\"congestion-graph\");\n        this.config.renderer = this.renderer;\n    }\n\n    public mounted(){\n        // mainly for when we switch away, and then back to the congestionGraph\n        if ( this.config && this.renderer && this.config.connection !== undefined ) {\n            this.renderer.render( this.config );\n        }\n    }\n\n    protected hideLegend(evt:any) {\n        evt.target.classList.add(\"hiddenLegend\");\n    }\n\n    protected showLegend(evt:any) {\n        evt.target.classList.remove(\"hiddenLegend\");\n    }\n\n    // Note: we could use .beforeUpdate or use an explicit event or a computed property as well\n    // however, this feels more explicit\n    @Watch('config', { immediate: true, deep: true })\n    protected onConfigChanged(newConfig: CongestionGraphConfig, oldConfig: CongestionGraphConfig) {\n        console.log(\"CongestionGraphRenderer:onConfigChanged : \", newConfig, oldConfig);\n\n        if ( this.renderer && newConfig.connection !== undefined ) {\n            this.renderer.render( newConfig );\n        }\n    }\n\n}\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CongestionGraphRenderer.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CongestionGraphRenderer.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./CongestionGraphRenderer.vue?vue&type=template&id=722acc06&\"\nimport script from \"./CongestionGraphRenderer.vue?vue&type=script&lang=ts&\"\nexport * from \"./CongestionGraphRenderer.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./CongestionGraphRenderer.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { getModule } from \"vuex-module-decorators\";\nimport { Component, Vue } from \"vue-property-decorator\";\n\nimport CongestionGraphConfig from \"./data/CongestionGraphConfig\";\nimport CongestionGraphConfigurator from \"./CongestionGraphConfigurator.vue\";\nimport CongestionGraphRenderer from \"./CongestionGraphRenderer.vue\";\n\nimport ConfigurationStore from \"@/store/ConfigurationStore\";\nimport ConnectionGroup from \"@/data/ConnectionGroup\";\n\n\n@Component({\n    components: {\n        CongestionGraphConfigurator,\n        CongestionGraphRenderer,\n    },\n})\n\nexport default class CongestionGraphContainer extends Vue {\n\n    protected store:ConfigurationStore = getModule(ConfigurationStore, this.$store);\n    // tslint:disable-next-line:member-ordering\n    public config:CongestionGraphConfig = this.store.congestionGraphConfig;\n\n    public created(){\n        console.log(\"container created\", this.config);\n    }\n\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CongestionGraphContainer.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CongestionGraphContainer.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./CongestionGraphContainer.vue?vue&type=template&id=0f1d4c20&\"\nimport script from \"./CongestionGraphContainer.vue?vue&type=script&lang=ts&\"\nexport * from \"./CongestionGraphContainer.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\nimport { Component, Vue } from \"vue-property-decorator\";\nimport CongestionGraphContainer from \"@/components/congestiongraph/CongestionGraphContainer.vue\";\n\n@Component({\n    components: {\n        CongestionGraphContainer,\n    },\n})\nexport default class CongestionGraph extends Vue {}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CongestionGraph.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CongestionGraph.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./CongestionGraph.vue?vue&type=template&id=4c13a28b&\"\nimport script from \"./CongestionGraph.vue?vue&type=script&lang=ts&\"\nexport * from \"./CongestionGraph.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('MultiplexingGraphContainer')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"home\"},[_c('MultiplexingGraphConfigurator',{attrs:{\"config\":_vm.config}}),_c('MultiplexingGraphRenderer',{attrs:{\"config\":_vm.config}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"background-color\":\"#d1ecf1\",\"padding\":\"0px 10px\"}},[_c('b-container',{attrs:{\"fluid\":\"\"}},[_c('b-row',{attrs:{\"align-h\":\"center\"}},[_c('p',{staticStyle:{\"margin-top\":\"10px\"}},[_vm._v(\"Select a trace via the dropdown(s) below to visualize it in the stream graph\")])]),_c('b-row',{attrs:{\"align-h\":\"center\"}},[(_vm.config.connections.length > 0)?_c('ConnectionConfigurator',{attrs:{\"allGroups\":_vm.store.groups,\"connection\":_vm.config.connections[0],\"canBeRemoved\":false,\"onConnectionSelected\":_vm.onConnectionSelected}}):_vm._e()],1),_c('b-row',{attrs:{\"align-h\":\"center\"}},[_c('b-form-checkbox',{staticClass:\"mr-3\",attrs:{\"id\":\"waterfall-checkbox\",\"name\":\"waterfall-checkbox\"},model:{value:(_vm.config.showwaterfall),callback:function ($$v) {_vm.$set(_vm.config, \"showwaterfall\", $$v)},expression:\"config.showwaterfall\"}},[_vm._v(\"\\n                Show waterfall\\n            \")]),_c('b-form-checkbox',{attrs:{\"id\":\"byteranges-checkbox\",\"name\":\"byteranges-checkbox\"},model:{value:(_vm.config.showbyteranges),callback:function ($$v) {_vm.$set(_vm.config, \"showbyteranges\", $$v)},expression:\"config.showbyteranges\"}},[_vm._v(\"\\n                Show byte ranges\\n            \")]),(_vm.allowSelectAll)?_c('b-button',{staticClass:\"ml-3\",attrs:{\"disabled\":_vm.config.connections.length === 0,\"variant\":\"primary\"},on:{\"click\":function($event){return _vm.selectAllConnections()}}},[_vm._v(\"Load all connections at once\")]):_vm._e()],1),(this.store.outstandingRequestCount === 0 && this.store.groups.length === 0)?_c('b-alert',{attrs:{\"show\":\"\",\"variant\":\"danger\"}},[_vm._v(\"Please load a trace file to visualize it\")]):(this.store.groups.length === 0)?_c('b-alert',{attrs:{\"show\":\"\",\"variant\":\"warning\"}},[_vm._v(\"Loading files...\")]):_vm._e()],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { getModule } from \"vuex-module-decorators\";\nimport { Component, Vue, Prop } from \"vue-property-decorator\";\nimport MultiplexingGraphConfig from \"./data/MultiplexingGraphConfig\";\nimport * as qlog from '@quictools/qlog-schema';\n\nimport ConnectionConfigurator from \"@/components/shared/ConnectionConfigurator.vue\";\nimport ConnectionStore from \"@/store/ConnectionStore\";\nimport ConnectionGroup from \"@/data/ConnectionGroup\";\nimport Connection from \"@/data/Connection\";\nimport QlogConnection from '@/data/Connection';\n\n@Component({\n    components: {\n        ConnectionConfigurator,\n    },\n})\nexport default class MultiplexingGraphConfigurator extends Vue {\n    @Prop()\n    public config!: MultiplexingGraphConfig;\n\n    public store:ConnectionStore = getModule(ConnectionStore, this.$store);\n\n    public onConnectionSelected(connection:Connection) {\n        console.log(\"MultiplexingGraphConfigurator:onConnectionSelected : \", this.config, connection);\n\n        this.config.connections = [ connection ];\n    }\n\n    public get allowSelectAll() : boolean {\n        return (window.location.toString().indexOf(\":8080\") >= 0 ); // only for local testing for now! // TODO: CLEAN UP\n    }\n\n    public selectAllConnections() {\n\n        // TODO: just for paper results, remove!\n        (window as any).holblockinfo = new Array<any>();\n\n        const conns = [];\n        for ( const group of this.store.groups ){\n            if ( group.filename.indexOf(\"DEMO\") < 0 ){\n                conns.push( ...group.getConnections() );\n            }\n        }\n\n        this.config.showwaterfall = false;\n        this.config.connections = conns;\n    }\n\n    public mounted(){\n        if ( this.config.connections.length === 0 && this.store.groups.length > 0 ){\n            this.selectDefault();\n        }\n    }\n\n    public updated(){\n        if ( this.config.connections.length === 0 && this.store.groups.length > 0 ){\n            this.selectDefault();\n        }\n    }\n\n    protected selectDefault(){\n        console.log(\"MultiplexingGraphConfigurator:selectDefault: adding new default connection configurator\", this.store.groups);\n        this.config.connections = [ this.store.groups[0].getConnections()[0] ];\n    }\n}\n\n","import QlogConnection from '@/data/Connection';\nimport * as d3 from 'd3';\nimport * as qlog from '@quictools/qlog-schema';\nimport StreamGraphDataHelper from './MultiplexingGraphDataHelper';\nimport MultiplexingGraphD3ByterangesRenderer from './MultiplexingGraphD3ByterangesRenderer';\nimport MultiplexingGraphD3WaterfallRenderer from './MultiplexingGraphD3WaterfallRenderer';\n\n\ninterface StreamRange {\n    currentHead:number, // up to and including where the stream has been moved to the HTTP layer\n    highestReceived:number, // up to where the stream has been received (with holes between currentHead and this if they're not equal)\n    holes:Array<Range>,\n    filled:Array<Range>,\n\n    cumulativeTimeDifference:number,\n    timeDifferenceSampleCount:number,\n\n    frameCount:number,\n}\n\ninterface Range {\n    time: number,\n    from: number,\n    to: number\n}\n\nenum FrameArrivalType {\n    Normal,\n    Future,\n    Duplicate,\n    Retransmit,\n    Reordered,\n    UNKNOWN,\n}\n\ninterface ArrivalInfo {\n    type: FrameArrivalType,\n    timeDifference: number,\n    createdHole:Array<number>|undefined\n}\n\nexport default class MultiplexingGraphD3CollapsedRenderer {\n\n    public containerID:string;\n    public axisLocation:\"top\"|\"bottom\" = \"bottom\";\n\n    public byteRangeRenderer!:MultiplexingGraphD3ByterangesRenderer;\n    public waterfallRenderer:MultiplexingGraphD3WaterfallRenderer|undefined = undefined; // set from outside. FIXME: dirty!\n\n    // public svgID:string;\n    public rendering:boolean = false;\n\n    protected svg!:any;\n    protected tooltip!:any;\n    protected connection!:QlogConnection;\n\n    protected barHeight = 70;\n\n    protected currentDomain:any = undefined;\n\n    private dimensions:any = {};\n\n    constructor(containerID:string, byteRangeContainerID:string) {\n        this.containerID = containerID;\n\n        this.byteRangeRenderer = new MultiplexingGraphD3ByterangesRenderer(byteRangeContainerID);\n    }\n   \n    public async render(connection:QlogConnection):Promise<boolean> {\n        if ( this.rendering ) {\n            return false;\n        }\n\n        console.log(\"MultiplexingGraphD3CollapsedRenderer:render\", connection);\n\n        this.rendering = true;\n\n        const canContinue:boolean = this.setup(connection);\n\n        if ( !canContinue ) {\n            this.rendering = false;\n\n            return false;\n        }\n\n        await this.renderLive();\n        this.rendering = false;\n\n        return true;\n    }\n\n    protected setup(connection:QlogConnection){\n        this.connection = connection;\n        this.connection.setupLookupTable();\n\n        const container:HTMLElement = document.getElementById(this.containerID)!;\n\n        this.dimensions.margin = {top: 0, right: 40, bottom: 20, left: 20};\n        // this.dimensions.margin = {top: 0, right: (this.waterfallRenderer as any).dimensions.margin.right, bottom: 20, left: 20};\n        if ( this.axisLocation === \"top\" ){\n            this.dimensions.margin.top = 20;\n        }\n        else {\n            this.dimensions.margin.bottom = 40;\n        }\n\n        // width and height are the INTERNAL widths (so without the margins)\n        this.dimensions.width = container.clientWidth - this.dimensions.margin.left - this.dimensions.margin.right;\n        this.dimensions.height = this.barHeight;\n\n\n        // clear old rendering\n        d3.select( \"#\" + this.containerID ).selectAll(\"*\").remove();\n\n        this.svg = d3.select(\"#\" + this.containerID)\n            .append(\"svg\")\n                .attr(\"width\", this.dimensions.width + this.dimensions.margin.left + this.dimensions.margin.right)\n                .attr(\"height\", this.dimensions.height + this.dimensions.margin.top + this.dimensions.margin.bottom)\n                // .attr(\"viewBox\", [0, 0, this.dimensions.width, this.dimensions.height])\n                .attr(\"xmlns\", \"http://www.w3.org/2000/svg\")\n                .attr(\"xmlns:xlink\", \"http://www.w3.org/1999/xlink\")\n                .attr(\"font-family\", \"Trebuchet-ms\")\n            .append(\"g\")\n                .attr(\"transform\",\n                    \"translate(\" + this.dimensions.margin.left + \",\" + this.dimensions.margin.top + \")\");\n\n        this.tooltip = d3.select(\"#multiplexing-packet-tooltip\")\n            .style(\"opacity\", 0)\n            .style(\"position\", \"absolute\")\n            .style(\"padding\", \"5px\")\n            .style(\"pointer-events\", \"none\") // crucial! \n            .style(\"background\", \"lightsteelblue\");\n\n        // this.svg.append(\"text\")\n        //     .attr(\"x\", 0)\n        //     .attr(\"y\", (this.barHeight / 2))\n        //     .attr(\"dominant-baseline\", \"central\")\n        //     .style(\"text-anchor\", \"end\")\n        //     .style(\"font-size\", \"12\")\n        //     .style(\"font-family\", \"Trebuchet MS\")\n        //     .style(\"font-style\", \"italic\")\n        //     .attr(\"fill\", \"#000000\")\n        //     .text(\"\" + \"COLLAPSED\");\n\n        return true;\n    }\n\n    protected async renderLive() {\n        console.log(\"Rendering multiplexinggraph\");\n\n        const parser = this.connection.getEventParser();\n\n        // want total millisecond range in this trace, so last - first\n        const xMSRange = parser.load(this.connection.getEvents()[ this.connection.getEvents().length - 1 ]).absoluteTime - \n                       parser.load(this.connection.getEvents()[0]).absoluteTime;\n\n        console.log(\"DEBUG MS range for this trace: \", xMSRange);\n\n        let frameCount = 1;\n        let packetIndex = 0;\n        const streamIDs:Set<number> = new Set<number>();\n\n\n        // clients receive data, servers send it\n        let eventType = qlog.TransportEventType.packet_received;\n        let directionText = \"received\";\n        if ( this.connection.vantagePoint && this.connection.vantagePoint.type === qlog.VantagePointType.server ){\n            eventType = qlog.TransportEventType.packet_sent;\n            directionText = \"sent\";\n        }\n\n        // const packets = this.connection.lookup( qlog.EventCategory.transport, eventType );\n\n\n        //         filled[0]                holes[0] filled[1] holes[1]   filled[2]\n        // .../////////////////////////////| _____ |/////////| _______ |/////////////|\n        //                                 ^                                         ^\n        //                           currentHead                               highestReceived\n\n\n        // we want to keep track of the filled ranges but also the holes and then especially: when those holes become filled! \n        // if it takes a long time for a hole to become filled, it indicates a retransmit. A short time indicates a re-order. \n        const streamRanges:Map<number, StreamRange> = new Map<number, StreamRange>();\n\n        // approach: only tracking holes gives a difficult algorithm in practice (I tried...)\n        // so, we do it differently: we keep track of the filled ranges and generate the holes from that on each step\n        // we track the timestamps between the new holes and the old holes\n        const calculateFrameArrivalType = (range:StreamRange, timestamp:number, from:number, to:number):ArrivalInfo => {\n\n            // console.log(\"TIMESTAMP: \", timestamp, from, to, range.currentHead, range.highestReceived);\n\n            // step 1: find hole where this new frame fits (if none found: this is a new packet: either Normal or Future!)\n            // step 2: add frame to filled list\n            // step 3: generate holes from filled list, backfilling the timestamps from the old holes\n\n            let outputType = FrameArrivalType.UNKNOWN;\n            let outputTimestampDifference = 0;\n            let outputHole:Range|undefined = undefined;\n\n            // 1.\n            let foundHole:Range|undefined = undefined;\n            for ( const hole of range.holes ) {\n                // ignore if we overlap 2 holes for now\n                if ( (from >= hole.from && from <= hole.to) || \n                     (to   >= hole.from && to   <= hole.to) ) {\n\n                    foundHole = hole;\n                    break;\n                }\n            }\n\n            if ( !foundHole ) {\n\n                // just checking to < range.currentHead only finds overlaps in the past\n                // if we are having spurious retransmits between currentHead and highestReceived, they are found by checking overlaps in filled instead \n                let foundFilled:Range|undefined = undefined;\n                for ( const filled of range.filled ) {\n                    if ( (from >= filled.from && from <= filled.to) || \n                         (to   >= filled.from && to   <= filled.to) ) {\n    \n                        foundFilled = filled;\n                        break;\n                    }\n                }\n\n                if ( foundFilled ) {\n                    console.error(\"DUPLICATE FOUND VIA FILLED!\", foundFilled, from, to);\n\n                    return { type: FrameArrivalType.Duplicate, timeDifference: 0, createdHole: undefined };\n                }\n                else if ( to < range.currentHead ) {\n                    // total duplicate, no need to update state\n                    // alert(\"DUPLICATE FOUND!\" + from + \"->\" + to); // never happened in our tests\n                    console.error(\"calculateFrameArrivalType : duplicate data found! Not really an error, but means spurious retransmissions.\", range.currentHead, from, to, timestamp);\n\n                    return { type: FrameArrivalType.Duplicate, timeDifference: 0, createdHole: undefined };\n                }\n                else if ( from > range.highestReceived + 1 ) { // creates a hole\n                    outputType = FrameArrivalType.Future;\n\n                    outputHole = { time: timestamp, from: range.highestReceived + 1, to: from };\n                }\n                else if ( from === range.highestReceived + 1 ){ // normal, everything arrives in-order without gaps\n                    outputType = FrameArrivalType.Normal;\n                }\n                else if ( to > range.highestReceived + 1 ) {\n                    // partial overlap at the end: from is < highestReceived, to is > : mark this as \"normal\" for now\n                    outputType = FrameArrivalType.Normal;\n                }\n                else {\n                    // 2 options: \n                    //  a) range \"spans\" a hole (starts overlapping with 1 filled, then covers hole, then ends in another filled)\n                    //  b) unknown situation we haven't seen before\n\n                    // a)\n                    // filled is sorted by .from, lowest to highest\n                    let spanning = false;\n                    for ( let i = 0; i < range.filled.length - 1; ++i ){\n                        const filled1 = range.filled[i];\n                        const filled2 = range.filled[i + 1];\n\n                        if ( from >= filled1.from && to > filled1.to &&\n                             to <= filled2.to ) {\n                                spanning = true;\n                             }\n                    }\n\n                    if ( spanning ){\n                        foundHole = undefined;\n                        for ( const hole of range.holes ) {\n                            // look for the hole we're spanning\n                            if ( (from < hole.from && to > hole.to) ) {\n                                foundHole = hole;\n                                break;\n                            }\n                        }\n\n                        if ( foundHole ){\n                            console.error(\"Found spanning frame, shouldn't happen in practice, only when debugging\", foundHole, from, to, range);\n                            outputTimestampDifference = timestamp - foundHole.time;\n                            outputType = FrameArrivalType.Retransmit;\n                        }\n                        else {\n                            console.error(\"calculateFrameArrivalType: Spanning frame, but not hole found... very weird\", from, to, range);\n                            outputType = FrameArrivalType.UNKNOWN;\n                        }\n                    }\n                    else {\n                        console.error(\"calculateFrameArrivalType: no hole found for frame, but also nowhere else we would expect it...\", from, to, range);\n                        outputType = FrameArrivalType.UNKNOWN;\n                    }\n                }\n            }\n            else {\n                outputTimestampDifference = timestamp - foundHole.time;\n                outputType = FrameArrivalType.Retransmit;\n            }\n\n            if ( outputType === FrameArrivalType.Retransmit ){\n                // TODO: maybe only decide it's a re-order if it fits perfectly in a hole? \n                ++range.timeDifferenceSampleCount;\n                range.cumulativeTimeDifference += outputTimestampDifference;\n\n                const avg = range.cumulativeTimeDifference / range.timeDifferenceSampleCount;\n                if ( outputTimestampDifference < 20 && outputTimestampDifference < avg * 0.3 ) { // lower than 20ms and within 30% of the current RTT estimate is -probably- reorder\n                    outputType = FrameArrivalType.Reordered;\n\n                    // console.log(\"REORDERED PACKET FOUND\", foundHole, from, to, outputTimestampDifference, avg);\n                }\n                // else {\n                //     console.log(\"RETRANSMITTED PACKET FOUND\", foundHole, from, to, outputTimestampDifference, avg);\n                // }\n            }\n\n            if ( to > range.highestReceived ) {\n                range.highestReceived = to;\n            }\n\n            // 2.\n            // https://www.geeksforgeeks.org/merging-intervals/\n            // https://algorithmsandme.com/arrays-merge-overlapping-intervals/\n            range.filled.push ( {from: from, to: to, time: timestamp} );\n            range.filled.sort( (a:Range, b:Range):number => {\n                return a.from - b.from;\n            }); // ascending order, just the way we like it\n\n            const stack = new Array<Range>();\n            stack.push( range.filled[0] );\n\n            for ( let i = 1; i < range.filled.length; ++i ){\n\n                const previousInterval = stack.pop();\n                const currentInterval = range.filled[i];\n\n\n                // If current interval's start time is less than end time of\n                // previous interval, find max of end times of two intervals\n                // and push new interval on to stack.\n                if ( previousInterval!.to + 1 >= currentInterval.from ) {\n                    const endTime = Math.max( previousInterval!.to, currentInterval.to );\n                    stack.push ( { from: previousInterval!.from, to : endTime, time: timestamp } );\n                }\n                else {\n                    stack.push ( previousInterval! );\n                    stack.push ( currentInterval );\n                }\n            }\n\n            range.filled = stack; // should also be sorted now!\n\n            // console.log( \"filled ranges are now \", JSON.stringify(range.filled) );\n\n\n            // 3.\n            const newHoles:Array<Range> = new Array<Range>();\n\n            for ( let i = 0; i < range.filled.length - 1; ++i ) {\n                const filled1 = range.filled[i];\n                const filled2 = range.filled[i + 1];\n\n                const newHole = { from: filled1.to + 1, to: filled2.from - 1, time: -666 };\n\n                let foundHole2:Range|undefined = undefined;\n\n                for ( const hole of range.holes ) {\n                    // ignore if we overlap 2 holes for now\n                    if ( (newHole.from >= hole.from && newHole.from <= hole.to) || \n                         (newHole.to   >= hole.from && newHole.to   <= hole.to) ) {\n                            \n                        foundHole2 = hole;\n                        break;\n                    }\n                }\n\n                if ( foundHole2 ){\n                    newHole.time = foundHole2.time;\n                }\n                else {\n                    newHole.time = timestamp; // new hole due to a future frame\n                }\n                \n                newHoles.push ( newHole );\n            }\n\n            range.holes = newHoles;\n\n            if ( range.holes.length > 0 ) {\n                range.currentHead = range.holes[0].from - 1;\n            }\n            else {\n                range.currentHead = range.filled[ range.filled.length - 1 ].to;\n            }\n\n            // console.log(\"Ended arrival algorithm \", FrameArrivalType[outputType], outputTimestampDifference, range.currentHead, range.highestReceived, range.holes, range.filled );\n            // console.log(\"--------------------------------------\");\n\n            return { type: outputType, timeDifference: outputTimestampDifference, createdHole: ((outputHole !== undefined) ? [outputHole.from, outputHole.to] : undefined) };\n        };\n\n        const dataSent:Array<any> = [];\n        const dataMoved:Array<any> = [];\n        for ( const eventRaw of this.connection.getEvents() ) {\n\n            const event = this.connection.parseEvent( eventRaw );\n            const data = event.data;\n\n            if ( event.name === eventType ){ // packet_sent or _received, the ones we want to plot\n\n                const streamFrames = new Array<any>();\n\n                if ( data.frames && data.frames.length > 0 ){\n                    for ( const frame of data.frames ) {\n\n                        if ( frame.stream_id === undefined || !StreamGraphDataHelper.isDataStream( \"\" + frame.stream_id )){\n                            // skip control streams like QPACK\n                            continue;\n                        }\n\n                        const streamID = parseInt( frame.stream_id, 10 );\n\n                        if ( frame.frame_type && frame.frame_type === qlog.QUICFrameTypeName.stream ){\n\n                            streamFrames.push ( frame );\n\n                            let ranges = streamRanges.get( streamID );\n                            if ( !ranges ){\n                                ranges = \n                                {currentHead:-1, highestReceived: -1, holes: new Array<Range>(), filled:new Array<Range>(), cumulativeTimeDifference: 0, timeDifferenceSampleCount: 0, frameCount: 0 };\n                                streamRanges.set( streamID, ranges );\n                            }\n\n                            const arrivalInfo:ArrivalInfo = \n                                calculateFrameArrivalType(ranges, event.relativeTime, parseInt(frame.offset, 10), parseInt(frame.offset, 10) + parseInt(frame.length, 10) - 1 );\n\n                            ranges.frameCount += 1;\n\n                            \n                            dataSent.push( {\n                                streamID: streamID, \n                                packetNumber: data.header.packet_number,\n                                index: packetIndex, \n                                size: frame.length, \n                                countStart: frameCount, \n                                countEnd: frameCount + 1,\n\n                                arrivalType: arrivalInfo.type, \n                                arrivalTimeDifference: arrivalInfo.timeDifference,\n                                arrivalCreatedHole: arrivalInfo.createdHole,\n\n                                offset: parseInt(frame.offset, 10),\n                                length: parseInt(frame.length, 10),\n                                time: event.relativeTime,\n                            });\n\n                            ++frameCount;\n                            ++packetIndex;\n\n                            streamIDs.add( streamID );\n                        }\n                    }\n                }\n            }\n            else if ( event.name === qlog.HTTP3EventType.data_moved ) {\n\n                if ( !StreamGraphDataHelper.isDataStream( \"\" + data.stream_id )){\n                    continue;\n                }\n\n                if ( data.from !== \"transport\" && data.to !== \"application\") { // only dealing with data bubbling up from the transport at the moment \n                    continue;\n                }\n\n                if ( dataSent.length === 0 ) {\n                    console.error(\"data moved but no stream frames seen yet... shouldn't happen!\", data);\n                    continue;\n                }\n\n                const movedOffset = parseInt( data.offset, 10 );\n                const movedLength = parseInt( data.length, 10 );\n\n                if ( movedLength === 0 ) {\n                    console.error(\"data_moved event with length 0, shouldn't happen! ignoring...\", data);\n                    continue;\n                }\n\n                // can't simply say dataSent[ dataSent.length - 1 ] is the STREAM frame we need, because multiple STREAM frames of different streams could be in a single packet\n                // as such, find the last STREAM frame of the stream the data_moved belongs to\n                // NOTE: if you e.g., have 15 small STREAM frames of the same stream in one packet (which is possible, but a bit odd)\n                // then this won't be 100% accurate, as the first data_moved was probably triggered by the first STREAM frame, not the 15th, though here we find the 15th\n                // we had older versions of this code looking for that, but the benefits didn't outweight the complexity in the end. \n                let foundFrame = undefined;\n                for ( let i = dataSent.length - 1; i >= 0; --i ) {\n                    if ( \"\" + dataSent[i].streamID === \"\" + data.stream_id ) {\n                        foundFrame = dataSent[i];\n                        break;\n                    }\n                }\n\n                if ( !foundFrame ) {\n                    console.error(\"Data moved but didn't start at previous stream's offset, impossible!!!\", foundFrame, event.relativeTime, data);\n                    continue;\n                }\n\n                dataMoved.push({\n                    streamID: parseInt(data.stream_id, 10),\n                    countStart: foundFrame.countStart,\n                    countEnd: foundFrame.countEnd,\n                    offset: movedOffset,\n                    length: movedLength,\n                });\n            }\n        }\n\n        for ( const [stream_id, range] of streamRanges ) {\n            if ( range.holes && range.holes.length !== 0 ) {\n                console.warn(\"MultiplexingGraphD3CollapsedRenderer : stream has holes, didn't finish completely! Did this connection end pre-maturely?\", stream_id, range.holes);\n            }\n        }\n\n        // console.log(\"IDs present \", dataSent.map( (d) => d.streamID).filter((item, i, ar) => ar.indexOf(item) === i));\n\n        const clip = this.svg.append(\"defs\").append(\"SVG:clipPath\")\n            .attr(\"id\", \"clip\")\n            .append(\"SVG:rect\")\n            .attr(\"width\", this.dimensions.width )\n            .attr(\"height\", this.dimensions.height )\n            .attr(\"x\", 0 )\n            .attr(\"y\", 0);\n\n        const rects = this.svg.append('g')\n            .attr(\"clip-path\", \"url(#clip)\");\n\n        // if ( streamIDs.size <= 1 || frameCount < 5 ){\n        //     rects\n        //     // text\n        //     .append(\"text\")\n        //         .attr(\"x\", 200 )\n        //         .attr(\"y\", 30 ) // + 1 is eyeballed magic number\n        //         .attr(\"dominant-baseline\", \"baseline\")\n        //         .style(\"text-anchor\", \"start\")\n        //         .style(\"font-size\", \"14\")\n        //         .style(\"font-family\", \"Trebuchet MS\")\n        //         // .style(\"font-weight\", \"bold\")\n        //         .attr(\"fill\", \"#000000\")\n        //         .text( \"This trace doesn't contain multiple independent streams (or has less than 5 STREAM frames), which is needed for this visualization.\" );\n\n        //     return;\n        // }\n\n\n        const packetSidePadding = 0.3;\n\n        const xDomain = d3.scaleLinear()\n            .domain([1, frameCount])\n            .range([ 0, this.dimensions.width ]);\n\n        this.currentDomain = xDomain;\n\n        const xAxis = this.svg.append(\"g\");\n        \n        if ( this.axisLocation === \"top\" ) {\n            xAxis\n                // .attr(\"transform\", \"translate(0,\" + this.dimensions.height + \")\")\n                .call(d3.axisTop(xDomain));\n        }\n        else {\n            xAxis\n                .attr(\"transform\", \"translate(0,\" + this.dimensions.height + \")\")\n                .call(d3.axisBottom(xDomain));\n        }\n\n        // https://bl.ocks.org/d3noob/a22c42db65eb00d4e369\n        const packetMouseOver = (data:any, index:number) => {\n\n            this.tooltip.transition()\n                .duration(100)\n                .style(\"opacity\", .95);\n\n            let text = \"\";\n            text += data.time + \"ms : stream \" + data.streamID + \" : packet number \" + data.packetNumber + \"<br/>\";\n            text += \"[\" + data.offset + \", \" + (data.offset + data.length - 1) + \"] (size: \" + data.length + \")\";\n            if ( data.arrivalType === FrameArrivalType.Retransmit || data.arrivalType === FrameArrivalType.Reordered ) {\n                text += \"<br/>\";\n                text += \"Fills gap that was created \" + data.arrivalTimeDifference + \"ms ago\";\n            }\n            else if ( data.arrivalCreatedHole !== undefined ){\n                text += \"<br/>\";\n                text += \"Creates gap from \" + data.arrivalCreatedHole[0] + \" to \" + data.arrivalCreatedHole[1] + \" (size: \" + (data.arrivalCreatedHole[1] - data.arrivalCreatedHole[0]) + \")\";\n            }\n\n            this.tooltip\n                .html( text )\n                .style(\"left\", (d3.event.pageX + 15) + \"px\")\n                .style(\"top\", (d3.event.pageY - 75) + \"px\");\n        };\n\n        const packetMouseOut = (data:any, index:number) => {\n\n            this.tooltip.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", 0);\t\n        };\n\n        const packetHeight = this.barHeight * 0.65;\n        const typeGap = this.barHeight * 0.05;\n        const typeHeight = this.barHeight * 0.275;\n\n        rects\n            .selectAll(\"rect.packet\")\n            .data(dataSent)\n            .enter()\n            .append(\"rect\")\n                .attr(\"x\", (d:any) => xDomain(d.countStart) - packetSidePadding )\n                .attr(\"y\", (d:any) => (d.index % 2 === 0 ? 0 : packetHeight * 0.05) )\n                .attr(\"fill\", (d:any) => StreamGraphDataHelper.StreamIDToColor(\"\" + d.streamID)[0] /*\"\" + colorDomain( \"\" + d.streamID )*/ )\n                .style(\"opacity\", 1)\n                .attr(\"class\", \"packet\")\n                .attr(\"width\", (d:any) => xDomain(d.countEnd) - xDomain(d.countStart) + packetSidePadding * 2)\n                .attr(\"height\", (d:any) => packetHeight * (d.index % 2 === 0 ? 1 : 0.90))\n                .style(\"pointer-events\", \"all\")\n                .on(\"mouseover\", packetMouseOver)\n                .on(\"mouseout\", packetMouseOut)\n                .on(\"click\", (d:any) => { this.byteRangeRenderer.render(dataSent, dataMoved, d.streamID); this.byteRangeRenderer.zoom( this.currentDomain ); });\n\n        rects\n            .selectAll(\"rect.retransmitPacket\")\n            .data( dataSent.filter( (d:any) => { return d.arrivalType === FrameArrivalType.Retransmit; } ) )\n            .enter()\n            .append(\"rect\")\n                .attr(\"x\", (d:any) => xDomain(d.countStart) - packetSidePadding )\n                .attr(\"y\", (d:any) => packetHeight + typeGap )\n                .attr(\"fill\", (d:any) => \"black\" )\n                .style(\"opacity\", 1)\n                .attr(\"class\", \"retransmitPacket\")\n                .attr(\"width\", (d:any) => xDomain(d.countEnd) - xDomain(d.countStart) + packetSidePadding * 2)\n                .attr(\"height\", (d:any) => typeHeight);\n\n        \n        rects\n            .selectAll(\"rect.reorderPacket\")\n            .data( dataSent.filter( (d:any) => { return d.arrivalType === FrameArrivalType.Reordered; } ) )\n            .enter()\n            .append(\"rect\")\n                .attr(\"x\", (d:any) => xDomain(d.countStart) - packetSidePadding )\n                .attr(\"y\", (d:any) => packetHeight + typeGap )\n                .attr(\"fill\", (d:any) => \"blue\" )\n                .style(\"opacity\", 1)\n                .attr(\"class\", \"reorderPacket\")\n                .attr(\"width\", (d:any) => xDomain(d.countEnd) - xDomain(d.countStart) + packetSidePadding * 2)\n                .attr(\"height\", (d:any) => typeHeight);\n\n        rects\n            .selectAll(\"rect.duplicatePacket\")\n            .data( dataSent.filter( (d:any) => { return d.arrivalType === FrameArrivalType.Duplicate; } ) )\n            .enter()\n            .append(\"rect\")\n                .attr(\"x\", (d:any) => xDomain(d.countStart) - packetSidePadding )\n                .attr(\"y\", (d:any) => packetHeight + typeGap )\n                .attr(\"fill\", (d:any) => \"red\" )\n                .style(\"opacity\", 1)\n                .attr(\"class\", \"duplicatePacket\")\n                .attr(\"width\", (d:any) => xDomain(d.countEnd) - xDomain(d.countStart) + packetSidePadding * 2)\n                .attr(\"height\", (d:any) => typeHeight);\n\n\n        rects\n            .selectAll(\"rect.futurePacket\")\n            .data( dataSent.filter( (d:any) => { return d.arrivalType === FrameArrivalType.Future; } ) )\n            .enter()\n            .append(\"rect\")\n                .attr(\"x\", (d:any) => xDomain(d.countStart) - packetSidePadding )\n                .attr(\"y\", (d:any) => packetHeight + typeGap )\n                .attr(\"fill\", (d:any) => \"purple\" )\n                .style(\"opacity\", 1)\n                .attr(\"class\", \"futurePacket\")\n                .attr(\"width\", (d:any) => xDomain(d.countEnd) - xDomain(d.countStart) + packetSidePadding * 2)\n                .attr(\"height\", (d:any) => typeHeight);\n\n        // legend\n        this.svg.append('g')\n            // text\n            .append(\"text\")\n                .attr(\"x\", xDomain(frameCount / 2) )\n                .attr(\"y\", this.dimensions.height + this.dimensions.margin.bottom - 10 ) // + 1 is eyeballed magic number\n                .attr(\"dominant-baseline\", \"baseline\")\n                .style(\"text-anchor\", \"middle\")\n                .style(\"font-size\", \"14\")\n                .style(\"font-family\", \"Trebuchet MS\")\n                // .style(\"font-weight\", \"bold\")\n                .attr(\"fill\", \"#000000\")\n                .text( \"Count of STREAM frames \" + directionText + \" (regardless of size, includes retransmits)\" ); \n\n        const updateChart = () => {\n\n            // recover the new scale\n            const newX = d3.event.transform.rescaleX(xDomain);\n\n            this.currentDomain = newX;\n\n            // update axes with these new boundaries\n            // xAxis./*transition().duration(200).*/call(d3.axisBottom(newX));\n            if ( this.axisLocation === \"top\" ){\n                xAxis.call(d3.axisTop(newX));\n            }\n            else {\n                xAxis.call(d3.axisBottom(newX));\n            }\n\n            // update position\n            rects\n                .selectAll(\".packet,.retransmitPacket,.reorderPacket,.duplicatePacket,.futurePacket\")\n                // .transition().duration(200)\n                .attr(\"x\", (d:any) => newX(d.countStart) - packetSidePadding )\n                // .attr(\"y\", (d:any) => { return 50; } )\n                .attr(\"width\", (d:any) => newX(d.countEnd) - newX(d.countStart) + packetSidePadding * 2)\n\n            this.byteRangeRenderer.zoom( newX );\n        };\n        \n        const zoom = d3.zoom()\n            .scaleExtent([1, 30])  // This control how much you can unzoom (x0.5) and zoom (x20)\n            .translateExtent([[0, 0], [this.dimensions.width, this.dimensions.height]])\n            .extent([[0, 0], [this.dimensions.width, this.dimensions.height]])\n            .on(\"zoom\", updateChart);\n        \n        this.svg.call(zoom);\n\n        if ( dataSent.length > 0 ) {\n            this.byteRangeRenderer.render( dataSent, dataMoved, 0 );\n        }\n\n\n        // make sure that if someone clicks on the waterfall renderer, it also updates the byteRangeRenderer\n        if ( this.waterfallRenderer !== undefined ){\n            this.waterfallRenderer.onStreamClicked = (streamID:string) => {\n                if ( this.byteRangeRenderer !== undefined ) {\n                    this.byteRangeRenderer.render( dataSent, dataMoved, parseInt(streamID, 0) );\n                    this.byteRangeRenderer.zoom( this.currentDomain );\n                }\n            };\n        }\n    }\n\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiplexingGraphConfigurator.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiplexingGraphConfigurator.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./MultiplexingGraphConfigurator.vue?vue&type=template&id=1eb2b106&scoped=true&\"\nimport script from \"./MultiplexingGraphConfigurator.vue?vue&type=script&lang=ts&\"\nexport * from \"./MultiplexingGraphConfigurator.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./MultiplexingGraphConfigurator.vue?vue&type=style&index=0&id=1eb2b106&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1eb2b106\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-container',{attrs:{\"fluid\":\"\"}},[_c('b-row',{attrs:{\"align-v\":\"center\"}},[_c('b-col',{attrs:{\"cols\":\"6\"}},[_c('div',{staticStyle:{\"width\":\"100%\"},attrs:{\"id\":\"multiplexing-stats\"}})]),_c('b-col',{attrs:{\"cols\":\"6\"}},[_c('div',{staticStyle:{\"width\":\"100%\"},attrs:{\"id\":\"multiplexing-stats-streams\"}})])],1)],1),_vm._l((this.config.connections),function(connection2,index){return [_c('MultiplexingGraphCollapsedRenderer',{key:index,staticStyle:{\"width\":\"100%\",\"border\":\"5px solid #d1ecf1\"},attrs:{\"connection\":connection2,\"showwaterfall\":_vm.config.showwaterfall,\"showbyteranges\":_vm.config.showbyteranges}})]}),_c('div',{attrs:{\"id\":\"multiplexing-packet-tooltip\"}})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',{staticStyle:{\"width\":\"100%\"},attrs:{\"id\":\"multiplexingToplevelContainer\",\"fluid\":\"\"}},[_c('b-row',{staticStyle:{\"text-align\":\"center\"},attrs:{\"align-v\":\"center\"}},[_c('b-col',{attrs:{\"cols\":\"12\"}},[_c('h4',[_vm._v(_vm._s((_vm.connection !== undefined) ? _vm.connection.parent.filename + \" : \" + _vm.connection.getLongName() : \"\"))])])],1),(_vm.showstreamdetail)?_c('b-row',{staticStyle:{\"width\":\"100%\"},attrs:{\"align-v\":\"center\"}},[_c('b-col',{attrs:{\"cols\":\"1\"}},[_vm._v(\"\\n            Selected stream's details\\n        \")]),_c('b-col',{attrs:{\"cols\":\"11\"}},[_c('div',[_c('span',{style:(_vm.streamDetail.style)},[_vm._v(\" \")]),_vm._v(\" Stream \"),_c('span',{staticClass:\"font-weight-bold\"},[_vm._v(_vm._s(_vm.streamDetail.stream_id))]),_vm._v(\" : Requested at \"+_vm._s(_vm.streamDetail.data.requestTime.toFixed(2))+\"ms. Transmitted from \"+_vm._s(_vm.streamDetail.data.startTime.toFixed(2))+\"ms to \"+_vm._s(_vm.streamDetail.data.endTime.toFixed(2))+\"ms (\"+_vm._s((_vm.streamDetail.data.endTime.toFixed(2) - _vm.streamDetail.data.startTime.toFixed(2)).toFixed(2))+\"ms). \"+_vm._s(_vm.streamDetail.data.totalData)+\" bytes spread over \"+_vm._s(_vm.streamDetail.data.frameCount)+\" frames (including retransmits). \")])])],1):_vm._e(),(_vm.showwaterfall)?_c('b-row',{staticStyle:{\"height\":\"165px\",\"width\":\"100%\"},attrs:{\"align-v\":\"center\"}},[_c('b-col',{attrs:{\"cols\":\"1\"}},[_vm._v(\"\\n            Waterfall\\n        \")]),_c('b-col',{attrs:{\"cols\":\"11\"}},[_c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"165px\",\"overflow-y\":\"auto\"}},[_c('div',{attrs:{\"id\":_vm.id_waterfall}})])])],1):_vm._e(),_c('b-row',{staticStyle:{\"height\":\"5px\"}}),_c('b-row',{staticStyle:{\"height\":\"70px\",\"width\":\"100%\",\"border\":\"1px solid red\",\"display\":\"none\"},attrs:{\"align-v\":\"center\"}},[_c('b-col',{attrs:{\"cols\":\"1\"}},[_vm._v(\"\\n            Simulated FIFO order\\n        \")]),_c('b-col',{attrs:{\"cols\":\"11\"}},[_c('div',{staticStyle:{\"width\":\"100%\"},attrs:{\"id\":_vm.id_fifo}})])],1),_c('b-row',{staticStyle:{\"height\":\"5px\"}}),_c('b-row',{staticStyle:{\"height\":\"110px\",\"width\":\"100%\"},attrs:{\"align-v\":\"center\"}},[_c('b-col',{attrs:{\"cols\":\"1\"}},[_vm._v(\"\\n            Multiplexed data flow\\n        \")]),_c('b-col',{attrs:{\"cols\":\"11\"}},[_c('div',{staticStyle:{\"width\":\"100%\"},attrs:{\"id\":_vm.id_data}})])],1),(_vm.showbyteranges)?_c('b-row',{staticStyle:{\"height\":\"520px\",\"width\":\"100%\",\"margin-bottom\":\"10px\"},attrs:{\"align-v\":\"center\"}},[_c('b-col',{attrs:{\"cols\":\"1\"}},[_vm._v(\"\\n            Byterange per STREAM frame\\n        \")]),_c('b-col',{attrs:{\"cols\":\"11\"}},[_c('div',{staticStyle:{\"width\":\"100%\"},attrs:{\"id\":_vm.id_byterange}})])],1):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import ColorHelper from '@/components/shared/helpers/ColorHelper';\n\nexport default class MultiplexingGraphDataHelper {\n    \n    public static isDataStream(streamID:string){\n        return parseInt(streamID, 10) % 4 === 0;\n    }\n\n    public static StreamIDToColor(streamID:string):Array<string> {\n\n        return ColorHelper.StreamIDToColor( streamID, \"HTTP3\" );\n    }\n}\n","import QlogConnection from '@/data/Connection';\nimport * as d3 from 'd3';\nimport * as qlog from '@quictools/qlog-schema';\nimport StreamGraphDataHelper from './MultiplexingGraphDataHelper';\n\n\nexport default class MultiplexingGraphD3ByterangesRenderer {\n\n    public containerID:string;\n\n    public rendering:boolean = false;\n    protected svg!:any;\n    protected connection!:QlogConnection;\n\n    protected height = 500;\n\n    private dimensions:any = {};\n\n    private updateZoom:any;\n\n    constructor(containerID:string) {\n        this.containerID = containerID;\n    }\n   \n    public async render( allFrames:Array<any>, allDataMoved:Array<any>, streamID:number ):Promise<boolean> {\n        if ( this.rendering ) {\n            return false;\n        }\n\n        console.log(\"MultiplexingGraphD3ByterangesRenderer:render\", streamID);\n\n        this.rendering = true;\n\n        const canContinue:boolean = this.setup();\n\n        if ( !canContinue ) {\n            this.rendering = false;\n\n            return false;\n        }\n\n        await this.renderLive( allFrames, allDataMoved, streamID );\n        this.rendering = false;\n\n        return true;\n    }\n\n    public zoom(newXDomain:any) {\n        this.updateZoom( newXDomain );\n    }\n\n    protected setup() {\n\n        const container:HTMLElement = document.getElementById(this.containerID)!;\n\n        this.dimensions.margin = {top: 20, right: 40, bottom: 20, left: 20};\n\n        // width and height are the INTERNAL widths (so without the margins)\n        this.dimensions.width = container.clientWidth - this.dimensions.margin.left - this.dimensions.margin.right;\n        this.dimensions.height = this.height;\n\n\n        // clear old rendering\n        d3.select( \"#\" + this.containerID ).selectAll(\"*\").remove();\n\n        this.svg = d3.select(\"#\" + this.containerID)\n            .append(\"svg\")\n                .attr(\"width\", this.dimensions.width + this.dimensions.margin.left + this.dimensions.margin.right)\n                .attr(\"height\", this.dimensions.height + this.dimensions.margin.top + this.dimensions.margin.bottom)\n                // .attr(\"viewBox\", [0, 0, this.dimensions.width, this.dimensions.height])\n                .attr(\"xmlns\", \"http://www.w3.org/2000/svg\")\n                .attr(\"xmlns:xlink\", \"http://www.w3.org/1999/xlink\")\n                .attr(\"font-family\", \"Trebuchet-ms\")\n            .append(\"g\")\n                .attr(\"transform\",\n                    \"translate(\" + this.dimensions.margin.left + \",\" + this.dimensions.margin.top + \")\");\n\n\n        return true;\n    }\n\n    protected async renderLive( allFrames:Array<any>, allDataMoved:Array<any>, streamID:number ) {\n        console.log(\"Rendering multiplexing byteranges graph\", streamID);\n\n        const streamFrames = allFrames.filter( (d:any) => \"\" + d.streamID === \"\" + streamID );\n        const dataMoved = allDataMoved.filter( (d:any) => \"\" + d.streamID === \"\" + streamID );\n\n        // final frame isn't necessarily the last one in the file, due to retransmits\n        // so we need to actually search for the largest one\n        let maxBytes = 0;\n        for ( const frame of streamFrames ) {\n            const max = frame.offset + frame.length - 1;\n            if ( max > maxBytes ){\n                maxBytes = max;\n            }\n        }\n        \n        const xDomain = d3.scaleLinear()\n            .domain([1, allFrames[ allFrames.length - 1 ].countEnd ])\n            .range([ 0, this.dimensions.width ]);\n\n\n        const xAxis = this.svg.append(\"g\");\n        xAxis.call(d3.axisTop(xDomain));\n\n        const yDomain = d3.scaleLinear()\n            .domain([0, maxBytes ])\n            // .domain([0, 200000 ])\n            // .range([this.dimensions.height, 0]);\n            .range([0, this.dimensions.height]);\n\n        const yAxis = this.svg.append(\"g\")\n            .attr(\"transform\", \"translate(0, 0)\");\n\n        yAxis.call(d3.axisRight(yDomain));\n\n        const clip = this.svg.append(\"defs\").append(\"SVG:clipPath\")\n            .attr(\"id\", \"byterange-clip\")\n            .append(\"SVG:rect\")\n            .attr(\"width\", this.dimensions.width )\n            .attr(\"height\", this.dimensions.height )\n            .attr(\"x\", 0 )\n            .attr(\"y\", 0);\n\n\n        const packetSidePadding = 0.3;\n\n        const rects = this.svg.append('g')\n            .attr(\"clip-path\", \"url(#byterange-clip)\");\n\n        const widthModifier = 1;\n        const heightModifier = 1;\n\n        rects\n            .selectAll(\"rect.packet\")\n            .data( streamFrames )\n            .enter()\n            .append(\"rect\")\n                .attr(\"x\", (d:any) => { return xDomain(d.countStart); } )\n                .attr(\"y\", (d:any) => yDomain(d.offset) )\n                .attr(\"fill\", (d:any) => StreamGraphDataHelper.StreamIDToColor(\"\" + d.streamID)[0] )\n                .style(\"opacity\", 1)\n                .attr(\"class\", \"packet\")\n                .attr(\"width\", (d:any) => Math.max(1, xDomain(d.countEnd) - xDomain(d.countStart)) * widthModifier)\n                .attr(\"height\", (d:any) => Math.max(1, yDomain( d.length - 1)) * heightModifier)\n\n        const opacity = 0.2;\n        rects\n            .selectAll(\"rect.pingback\")\n            .data( streamFrames )\n            .enter()\n            .append(\"rect\")\n                .attr(\"x\", (d:any) => xDomain(1) )\n                .attr(\"y\", (d:any) => yDomain(d.offset) )\n                .attr(\"fill\", (d:any) => StreamGraphDataHelper.StreamIDToColor(\"\" + d.streamID)[0] )\n                .style(\"opacity\", opacity)\n                .attr(\"class\", \"pingback\")\n                .attr(\"width\", (d:any) => Math.max(1, xDomain(d.countEnd) - xDomain(1)))\n                .attr(\"height\", (d:any) => yDomain( d.length - 1))\n            // .style(\"pointer-events\", \"all\")\n\n        const movedOffset = 1;\n        rects\n            .selectAll(\"rect.dataMoved\")\n            .data( dataMoved )\n            .enter()\n            .append(\"rect\")\n                .attr(\"x\", (d:any) => xDomain(d.countStart + movedOffset) )\n                .attr(\"y\", (d:any) => yDomain(d.offset) )\n                .attr(\"fill\", \"black\" )\n                .style(\"opacity\", 1)\n                .attr(\"class\", \"dataMoved\")\n                .attr(\"width\", (d:any) => Math.max(1, xDomain(d.countEnd) - xDomain(d.countStart)) * widthModifier)\n                .attr(\"height\", (d:any) => yDomain( d.offset + d.length - 1) - yDomain(d.offset));\n\n        this.updateZoom = (newXDomain:any) => {\n\n            // recover the new scale\n            const newX = newXDomain; // d3.event.transform.rescaleX(xDomain);\n\n            // nicely stays within indexes!\n            const startIndex = Math.max(0, Math.ceil(newX.domain()[0]) + 1);\n            const endIndex   = Math.min( allFrames.length - 1, Math.floor(newX.domain()[1]) - 1);\n\n            if ( endIndex > allFrames.length ) {\n                console.error(\"Something went wrong transforming Y domain byterangeszoom\", endIndex, allFrames.length );\n            }\n\n            // console.log(\"Looking for Y values between\", startIndex, endIndex);\n\n            let startY:number = Number.MAX_VALUE;\n            let endY:number = 0;\n\n            // TODO: first frame we find doesn't necessarily have the lowest offset... need to loop through the entire range and find lowest offset... auch\n\n            for ( let i = startIndex; i < endIndex; ++i ){\n                const frame = allFrames[i];\n                if ( \"\" + frame.streamID === \"\" + streamID ) {\n                    // console.log(\"Found frame for stream at index \",i, \" with offset \", frame.offset, frame );\n                    if ( frame.offset < startY ) {\n                        startY = parseInt(frame.offset, 0);\n                    }\n                }\n            }\n\n            for ( let i = endIndex; i > startIndex; --i ) {\n                const frame = allFrames[i];\n                if ( !frame ){\n                    // console.error(\"Frame at index \", i, \"Couldn't be found... weird\");\n                    continue;\n                }\n\n                if ( \"\" + frame.streamID === \"\" + streamID ) {\n                    if ( parseInt(frame.offset, 10) + parseInt(frame.length, 10) - 1 > endY ) {\n                        endY = parseInt(frame.offset, 0) + parseInt(frame.length, 10) - 1;\n                    }\n                }\n            }\n\n            // console.log(\"Y new domain\", startY, endY);\n            if ( startY > endY ) {\n                console.error(\"Something went terribly wrong\", startY, endY);\n            }\n\n            const newY = yDomain.copy().domain( [startY, endY] );\n\n\n            xAxis.call(d3.axisTop(newX));\n            yAxis.call(d3.axisLeft(newY));\n\n            // update position\n            rects\n                .selectAll(\".packet\")\n                .attr(\"x\", (d:any) => newX(d.countStart) )\n                .attr(\"width\", (d:any) => Math.max(1, newX(d.countEnd) - newX(d.countStart)))\n                .attr(\"y\", (d:any) => newY(d.offset) )\n                .attr(\"height\", (d:any) => Math.max(1, newY( d.offset + d.length - 1) - newY( d.offset )) )\n\n            \n            rects\n                .selectAll(\".pingback\")\n                .attr(\"x\", (d:any) => newX(1) )\n                .attr(\"width\", (d:any) => newX(d.countEnd) - newX(1) )\n                .attr(\"y\", (d:any) => newY(d.offset) )\n                .attr(\"height\", (d:any) => { return newY( d.offset + d.length - 1) - newY(d.offset);} )\n\n\n            rects\n                .selectAll(\".dataMoved\")\n                    .attr(\"x\",      (d:any) => newX(d.countStart + movedOffset) )\n                    .attr(\"width\",  (d:any) => Math.max(1, newX(d.countEnd) - newX(d.countStart)) )\n                    .attr(\"y\",      (d:any) => newY( d.offset ) )\n                    .attr(\"height\", (d:any) => { return newY( d.offset + d.length - 1) - newY(d.offset); } )\n        };\n    }\n}\n","import QlogConnection from '@/data/Connection';\nimport * as d3 from 'd3';\nimport * as qlog from '@quictools/qlog-schema';\nimport StreamGraphDataHelper from './MultiplexingGraphDataHelper';\n\n\nexport default class MultiplexingGraphD3WaterfallRenderer {\n\n    public containerID:string;\n\n    public rendering:boolean = false;\n\n    // FIXME: do this properly with a passed-in config object or something!\n    public onStreamClicked: ((streamID:string) => void) | undefined = undefined // set by the CollapsedRenderer directly (yes, I know, dirty)\n\n    // TODO: merge this with the one above in a proper event emitter setup\n    // the above is to handle clicks from within the CollapsedRenderer (to update the ByteRangesRenderer)\n    // this one is to handle clicks from the upper-layer Vue renderer to show stream details\n    protected onStreamClickedUpper:(streamDetails:any) => void;\n\n    protected svg!:any;\n    protected connection!:QlogConnection;\n\n    protected barHeight = 120;\n\n    private dimensions:any = {};\n\n    constructor(containerID:string, onStreamClickedUpper:(streamDetails:any) => void) {\n        this.containerID = containerID;\n        this.onStreamClickedUpper = onStreamClickedUpper;\n    }\n   \n    public async render(connection:QlogConnection):Promise<boolean> {\n        if ( this.rendering ) {\n            return false;\n        }\n\n        console.log(\"MultiplexingGraphD3WaterfallRenderer:render\", connection);\n\n        this.rendering = true;\n\n        const canContinue:boolean = this.setup(connection);\n\n        if ( !canContinue ) {\n            this.rendering = false;\n\n            return false;\n        }\n\n        await this.renderLive();\n        this.rendering = false;\n\n        return true;\n    }\n\n    protected setup(connection:QlogConnection){\n        this.connection = connection;\n        this.connection.setupLookupTable();\n\n        const container:HTMLElement = document.getElementById(this.containerID)!;\n\n        this.dimensions.margin = {top: 40, right: 40, bottom: 0, left: 20};\n\n        // width and height are the INTERNAL widths (so without the margins)\n        this.dimensions.width = container.clientWidth - this.dimensions.margin.left - this.dimensions.margin.right;\n        this.dimensions.height = this.barHeight;\n\n\n        // clear old rendering\n        d3.select( \"#\" + this.containerID ).selectAll(\"*\").remove();\n\n        this.svg = d3.select(\"#\" + this.containerID)\n            .append(\"svg\")\n                .attr(\"width\", this.dimensions.width + this.dimensions.margin.left + this.dimensions.margin.right)\n                .attr(\"height\", this.dimensions.height + this.dimensions.margin.top + this.dimensions.margin.bottom)\n                // .attr(\"viewBox\", [0, 0, this.dimensions.width, this.dimensions.height])\n                .attr(\"xmlns\", \"http://www.w3.org/2000/svg\")\n                .attr(\"xmlns:xlink\", \"http://www.w3.org/1999/xlink\")\n                .attr(\"font-family\", \"Trebuchet-ms\")\n            .append(\"g\")\n                .attr(\"transform\",\n                    \"translate(\" + this.dimensions.margin.left + \",\" + this.dimensions.margin.top + \")\");\n\n        return true;\n    }\n\n    protected async renderLive() {\n        console.log(\"Rendering multiplexing waterfall\");\n\n        // const parser = this.connection.getEventParser();\n\n        // // want total millisecond range in this trace, so last - first\n        // const xMSRange = parser.load(this.connection.getEvents()[ this.connection.getEvents().length - 1 ]).absoluteTime - \n        //                parser.load(this.connection.getEvents()[0]).absoluteTime;\n\n        // console.log(\"DEBUG MS range for this trace: \", xMSRange);\n\n        // want to render both when the request was sent/received, as well as the period of actually sending/receiving data\n        // so that's two different perspectives\n\n        // because we're plotting in \"packet number space\" instead of \"time space\" things do get a bit awkward...\n        // cannot simply only loop over the packet_sent/received events, but loop over all the events and keep track of packet indices\n        // this is to keep our x-axis in sync with that of the CollapsedRenderer\n\n        let requestEventType = qlog.TransportEventType.packet_sent; // client sends requests, receives data\n        let dataEventType    = qlog.TransportEventType.packet_received;\n        let directionText    = \"received\";\n\n        if ( this.connection.vantagePoint && this.connection.vantagePoint.type === qlog.VantagePointType.server ){\n            requestEventType = qlog.TransportEventType.packet_received;\n            dataEventType    = qlog.TransportEventType.packet_sent;\n            directionText    = \"sent\";\n        }\n\n        // const frames = this.connection.lookup( qlog.EventCategory.transport, eventType );\n\n        interface StreamExtents {\n            stream_id:number,\n            order:number,\n            requestIndex:number,\n            startIndex:number,\n            stopIndex:number,\n\n            startTime:number,\n            endTime:number,\n            requestTime:number,\n            frameCount:number,\n            totalData:number,\n        }\n\n        let dataFrameCount:number = 0;\n\n        const streams:Map<number, StreamExtents> = new Map<number, StreamExtents>();\n\n        for ( const eventRaw of this.connection.getEvents() ) {\n            const evt = this.connection.parseEvent( eventRaw );\n            const data = evt.data;\n\n            if ( evt.name !== requestEventType && evt.name !== dataEventType ) {\n                continue;\n            }\n\n            if ( !data.frames ){\n                continue;\n            }\n\n            const streamFrames = [];\n            for ( const frame of data.frames ){\n                if ( frame.frame_type === qlog.QUICFrameTypeName.stream ){\n                    streamFrames.push( frame );\n                }\n            }\n\n            if ( streamFrames.length === 0 ) {\n                continue;\n            }\n\n            for ( const streamFrame of streamFrames ){\n                if ( !StreamGraphDataHelper.isDataStream( \"\" + streamFrame.stream_id )) {\n                    // skip control streams like QPACK\n                    continue;\n                }\n\n                const streamID = parseInt( streamFrame.stream_id, 10 );\n\n                if ( evt.name === dataEventType ) {\n                    ++dataFrameCount;\n                }\n\n                let stream = streams.get( streamID );\n                if ( !stream ){\n                    \n                    if ( evt.name !== requestEventType ){\n                        console.error(\"MultiplexingGraphD3WaterfallRenderer: first packet for stream was not request! Shouldn't happen!\", evt);\n                        break;\n                    }\n\n                    stream = { stream_id: streamID, order: streams.size, requestIndex: dataFrameCount, startIndex: -1, stopIndex: -1, requestTime: evt.relativeTime, startTime: -1, endTime: -1, frameCount: 0, totalData: 0 };\n                    streams.set( streamID, stream );\n                }\n                else {\n                    if ( evt.name !== dataEventType ){\n                        continue;\n                    }\n\n                    if ( stream.startIndex === -1 ){\n                        stream.startIndex = dataFrameCount;\n                        stream.startTime = evt.relativeTime;\n                    }\n                    \n                    if ( dataFrameCount > stream.stopIndex ){\n                        stream.stopIndex = dataFrameCount;\n                        stream.endTime = evt.relativeTime;\n                    }\n\n                    stream.frameCount++;\n                    stream.totalData += parseInt(streamFrame.length, 0);\n                }\n            }\n        }\n\n        let minBarHeight = 4; // 4px is minimum height. Above that, we start scrolling (at 120 normal height, 4px gives us 30 streams without scrollbar)\n        if ( minBarHeight * streams.size < this.barHeight ) {\n            minBarHeight = (this.barHeight * 0.95) / streams.size;\n        }\n\n\n        this.dimensions.height = Math.ceil(minBarHeight * streams.size) + this.dimensions.margin.top;\n\n        // update the height of the surrounding container\n        d3.select(\"#\" + this.containerID + \" svg\").attr(\"height\", this.dimensions.height);\n\n        // TODO: what if no H3-level stuff found?!\n\n        const xDomain = d3.scaleLinear()\n            .domain([1, dataFrameCount])\n            .range([ 0, this.dimensions.width ]);\n\n        const xAxis = this.svg.append(\"g\");\n        \n        // if( this.axisLocation === \"top\" ) {\n        //     xAxis\n        //         //.attr(\"transform\", \"translate(0,\" + this.dimensions.height + \")\")\n        //         .call(d3.axisTop(xDomain));\n        // }\n        // else {\n        //     xAxis\n        //         .attr(\"transform\", \"translate(0,\" + this.dimensions.height + \")\")\n        //         .call(d3.axisBottom(xDomain));\n        // }\n\n\n        // console.log(\"DEBUG: streamsFound\", streams);\n\n        // let colorDomain = d3.scaleOrdinal() \n        //     .domain([\"0\",   \"4\",     \"8\",    \"12\",   \"16\",     \"20\",     \"24\",     \"28\",    \"32\",   \"36\",    \"40\",  \"44\"])\n        //     .range([ \"red\", \"green\", \"blue\", \"pink\", \"purple\", \"yellow\", \"indigo\", \"black\", \"grey\", \"brown\", \"cyan\", \"orange\"]);\n\n        const clip = this.svg.append(\"defs\").append(\"SVG:clipPath\")\n            .attr(\"id\", \"clip\")\n            .append(\"SVG:rect\")\n            .attr(\"width\", this.dimensions.width + this.dimensions.margin.left )\n            .attr(\"height\", this.dimensions.height )\n            .attr(\"x\", -this.dimensions.margin.left ) // need a bit more space for the circles at the beginning if they're at dataFrameCount 0 \n            .attr(\"y\", 0);\n\n        const rects = this.svg.append('g')\n            // .attr(\"clip-path\", \"url(#clip)\");\n\n        if ( streams.size <= 1 || dataFrameCount < 5 ){\n            // error message is already shown in the CollapsedRenderer\n            rects\n            // text\n            .append(\"text\")\n                .attr(\"x\", 200 )\n                .attr(\"y\", 100 ) // + 1 is eyeballed magic number\n                .attr(\"dominant-baseline\", \"baseline\")\n                .style(\"text-anchor\", \"start\")\n                .style(\"font-size\", \"14\")\n                .style(\"font-family\", \"Trebuchet MS\")\n                // .style(\"font-weight\", \"bold\")\n                .attr(\"fill\", \"#000000\")\n                .text( \"This trace doesn't contain multiple independent streams (or has less than 5 STREAM frames), which is needed for the waterfall.\" );\n\n            return;\n        }\n\n        const rects2 = rects\n            .selectAll(\"rect\")\n            .data([...streams.values()])\n            .enter()\n            .append(\"g\");\n\n        const minWidth = 4; // 4px minimum width\n\n        rects2\n            // background\n            .append(\"rect\")\n                .attr(\"x\", (d:any) => { return xDomain(d.startIndex) - 0.15; } )\n                .attr(\"y\", (d:any) => { return d.order * minBarHeight; } )\n                // .attr(\"fill\", (d:any) => { return \"\" + colorDomain( \"\" + d.streamID ); } )\n                .attr(\"fill\", (d:any) => { return StreamGraphDataHelper.StreamIDToColor(\"\" + d.stream_id)[0]; } )\n                .style(\"opacity\", 1)\n                .attr(\"class\", \"packet\")\n                .attr(\"width\", (d:any) => { return Math.max(minWidth, xDomain(d.stopIndex) - xDomain(d.startIndex)  + 0.3); })\n                .attr(\"height\", Math.max(minBarHeight, 0.01))\n                .on(\"click\", (d:any) => { \n                    if ( this.onStreamClickedUpper ) {\n                        const details:any = {};\n                        details.stream_id = d.stream_id;\n                        details.data = streams.get( d.stream_id );\n                        this.onStreamClickedUpper( details ); // updates stream detail in vue-layer\n                    }\n                    if ( this.onStreamClicked ) { \n                        this.onStreamClicked(\"\" + d.stream_id); // updates byteRangeRenderer\n                    } \n                });\n\n        const circleWidth = Math.min(15 ,Math.max(minBarHeight / 1.2, 0.01));\n\n        rects2\n            .append(\"circle\")\n                .attr(\"cx\", (d:any) => { return xDomain(d.requestIndex) + circleWidth / 2; } )\n                .attr(\"cy\", (d:any) => { return ((d.order) * minBarHeight) + (circleWidth / 1.6); } ) // 1.6 should be 2, but 1.6 somehow looks better...\n                .attr(\"fill\", (d:any) => { return StreamGraphDataHelper.StreamIDToColor(\"\" + d.stream_id)[0]; } )\n                .attr(\"stroke\", \"black\" )\n                .attr(\"stroke-width\", (d:any) => { return circleWidth / 5; } )\n                .attr(\"r\", circleWidth / 2 );\n\n        // const legendY = ((-2) * (this.barHeight / streams.size)) + (circleWidth / 1.6); // 1.6 should be 2, but 1.6 somehow looks better...\n\n        const legendY = -this.dimensions.margin.top / 2;\n        const legendIconWidth = 13;\n\n        rects\n            .append(\"circle\")\n                .attr(\"cx\", xDomain(0) + legendIconWidth / 2 )\n                .attr(\"cy\", legendY ) \n                .attr(\"fill\", (d:any) => { return \"white\" } )\n                .attr(\"stroke\", (d:any) => { return \"black\"; } )\n                .attr(\"stroke-width\", (d:any) => { return legendIconWidth / 5; } )\n                .attr(\"r\", legendIconWidth / 2 );\n\n        rects\n            // text\n            .append(\"text\")\n                .attr(\"x\", xDomain(0) + legendIconWidth / 2 + 20 )\n                .attr(\"y\", legendY + 1 ) // + 1 is eyeballed magic number\n                .attr(\"dominant-baseline\", \"middle\")\n                .style(\"text-anchor\", \"start\")\n                .style(\"font-size\", \"14\")\n                .style(\"font-family\", \"Trebuchet MS\")\n                // .style(\"font-weight\", \"bold\")\n                .attr(\"fill\", \"#000000\")\n                .text( \"Request \" + directionText );\n\n        rects\n            .append(\"rect\")\n                .attr(\"x\", xDomain(0) + legendIconWidth / 2 + 150 )\n                .attr(\"y\", legendY - legendIconWidth / 2 ) \n                .attr(\"fill\", (d:any) => { return \"white\" } )\n                .attr(\"stroke\", (d:any) => { return \"black\"; } )\n                .attr(\"stroke-width\", (d:any) => { return legendIconWidth / 5; } )\n                .attr(\"width\", 20 )\n                .attr(\"height\", legendIconWidth );\n\n        rects\n            // text\n            .append(\"text\")\n                .attr(\"x\", xDomain(0) + legendIconWidth / 2 + 180 )\n                .attr(\"y\", legendY ) // + 1 is eyeballed magic number\n                .attr(\"dominant-baseline\", \"middle\")\n                .style(\"text-anchor\", \"start\")\n                .style(\"font-size\", \"14\")\n                .style(\"font-family\", \"Trebuchet MS\")\n                // .style(\"font-weight\", \"bold\")\n                .attr(\"fill\", \"#000000\")\n                .text( \"Colored while stream is \\\"active\\\" (between first and last STREAM frame \" + directionText + \")\");\n    }\n\n}\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue, Prop, Watch } from \"vue-property-decorator\";\nimport QlogConnection from \"@/data/Connection\";\nimport * as qlog from '@quictools/qlog-schema';\n\nimport MultiplexingGraphConfig from \"./data/MultiplexingGraphConfig\";\nimport MultiplexingGraphD3SimulationRenderer from \"./renderer/MultiplexingGraphD3SimulationRenderer\";\nimport MultiplexingGraphD3CollapsedRenderer from \"./renderer/MultiplexingGraphD3CollapsedRenderer\";\nimport MultiplexingGraphD3WaterfallRenderer from \"./renderer/MultiplexingGraphD3WaterfallRenderer\";\nimport ColorHelper from '../shared/helpers/ColorHelper';\n\n@Component\nexport default class MultiplexingGraphCollapsedRenderer extends Vue {\n    @Prop()\n    public connection!: QlogConnection;\n\n    @Prop()\n    public showwaterfall!: boolean;\n\n    @Prop()\n    public showbyteranges!:boolean;\n\n    protected waterfallRenderer!: MultiplexingGraphD3WaterfallRenderer;\n    // protected fifoRenderer!: MultiplexingGraphD3SimulationRenderer;\n    protected dataRenderer!: MultiplexingGraphD3CollapsedRenderer;\n\n    protected streamDetail:any = null;\n\n    protected skipRender:boolean = false;\n\n    protected get id_waterfall() {\n        // TODO: proper GUID!\n        return this.id_fifo.replace(\"-fifo-\", \"-waterfall-\");\n    }\n\n    protected get id_fifo() {\n        // TODO: proper GUID!\n        return \"multiplexing-fifo-\" + Math.round((Math.random() * 100000));\n    }\n\n    protected get id_data() {\n        // TODO: proper GUID!\n        return this.id_fifo.replace(\"-fifo-\", \"-data-\");\n    }\n\n    protected get id_byterange() {\n        return this.id_fifo.replace(\"-fifo-\", \"-byterange-\");\n    }\n\n    protected get showstreamdetail() {\n        return this.streamDetail !== null;\n    }\n\n    public created() {\n\n        // TODO: hook up the .onStreamClicked on the CollapsedRenderer as well\n        // didn't do that at first because the needed information wasn't readily available there yet, only in the waterfall\n        this.waterfallRenderer = new MultiplexingGraphD3WaterfallRenderer( this.id_waterfall, (streamDetails:any) => { this.onStreamClicked(streamDetails); } );\n        // this.fifoRenderer = new MultiplexingGraphD3SimulationRenderer( this.id_fifo );\n\n        this.dataRenderer  = new MultiplexingGraphD3CollapsedRenderer( this.id_data, this.id_byterange );\n    }\n\n    public mounted() {\n        // mainly for when we switch away, and then back to the streamgraph\n        this.updateRenderers();\n    }\n\n    public updated() {\n        this.updateRenderers();\n    }\n\n    protected onStreamClicked(streamDetails:any) {\n        // this updates one part of the viz, but would also trigger an update to the rest\n        // this messes with our ByteRangesRenderer, since that's not stateful from VUE perspective yet\n        // so, as a dirty hack, skip the next render here... also works for now \n        this.skipRender = true;\n        this.streamDetail = streamDetails;\n\n        this.streamDetail.style = { display: \"inline-block\", paddingRight: \"10px\", width: \"50px\", height: \"100%\", backgroundColor : ColorHelper.StreamIDToColor( \"\" + this.streamDetail.stream_id, \"HTTP3\" )[0] };\n    }\n\n    protected updateRenderers() {\n\n        if ( this.skipRender ) {\n            this.skipRender = false;\n\n            return;\n        }\n\n        // we need all three renderers to have the exact same width\n        // originally, we just had them lookup their container's clientWidth in the renderers themselves\n        // however, when adding a vertical scrollbar to the waterfall, this started to break in weird ways\n        // so now, we calculate the appropriate width from the page's width here and set hem manually, so in the renderers, container.clientWidth is always correct\n        // There is 15px padding on each side for each column, plus for the top level container, so 90px in total\n        // up-front col is 1/12th of the width. Then we want 99% (not to cause a horizontal scrollbar as well) of the remaining 11/12th = 0.9075\n        const fixedWidth = Math.ceil(((document.getElementById(\"multiplexingToplevelContainer\")!.clientWidth - 90) * 0.9075)) + \"px\";\n        document.getElementById( \"\" + this.id_waterfall )!.style.width  = fixedWidth;\n        document.getElementById( \"\" + this.id_data )!.style.width       = fixedWidth;\n        document.getElementById( \"\" + this.id_byterange )!.style.width  = fixedWidth;\n\n        // Using v-if to toggle some renderers. This is not frame-perfect.\n        // The renderers use things like .clientWidth to size themselves, for which the toggle really has to be completed\n        // So we use a timeout to make sure this has happened before (re-)rendering\n        setTimeout( () => { \n            // IMPORTANT: mounted() and updated() are only called if connection changes, if we actually use the connection in the render somewhere\n            // if we don't, vue's coupling doesn't happen, even though it's a prop!!\n            // if you remove connection from the rendering, have to add a Watch() statement instead\n            if ( this.connection !== undefined ) {\n                if ( this.showwaterfall ) {\n                    this.waterfallRenderer.render ( this.connection );\n                    // needed to hook up click handlers\n                    // FIXME: this is quite dirty... should probably be done with a general config object\n                    this.dataRenderer.waterfallRenderer = this.waterfallRenderer;\n                }\n                else {\n                    this.dataRenderer.waterfallRenderer = undefined;\n                }\n                // this.fifoRenderer.render( this.connection );\n                this.dataRenderer.render( this.connection );\n            }\n        }, 100 );\n    }\n}\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiplexingGraphCollapsedRenderer.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiplexingGraphCollapsedRenderer.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./MultiplexingGraphCollapsedRenderer.vue?vue&type=template&id=4c817750&\"\nimport script from \"./MultiplexingGraphCollapsedRenderer.vue?vue&type=script&lang=ts&\"\nexport * from \"./MultiplexingGraphCollapsedRenderer.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue, Prop, Watch } from \"vue-property-decorator\";\nimport MultiplexingGraphConfig from \"./data/MultiplexingGraphConfig\";\n\nimport MultiplexingGraphCollapsedRenderer from \"./MultiplexingGraphCollapsedRenderer.vue\";\n\n@Component({\n    components: {\n        MultiplexingGraphCollapsedRenderer,\n    },\n})\nexport default class MultiplexingGraphRenderer extends Vue {\n    @Prop()\n    public config!: MultiplexingGraphConfig;\n\n    protected get connection() {\n        return this.config.connections[0];\n    }\n\n    // protected timelineRenderer!: StreamGraphD3Renderer;\n    // protected collapsedRenderer!: StreamGraphD3CollapsedRenderer;\n\n    public created(){\n        // this.timelineRenderer = new StreamGraphD3Renderer(\"stream-graph\");\n        // this.collapsedRenderer = new StreamGraphD3CollapsedRenderer(\"stream-graph-collapsed\");\n    }\n\n    // public mounted(){\n    //     // mainly for when we switch away, and then back to the streamgraph\n    //     if ( this.config && this.getRenderer() && this.config.connections.length > 0 ) {\n    //         // this.getRenderer().render( this.config.connections[0] );\n    //     }\n    // }\n\n    // public updated() {\n    //     console.log(\"StreamGraphRenderer updated\");\n    // }\n\n    // protected getRenderer() {\n    //     if (this.config.collapsed) {\n    //         return this.collapsedRenderer;\n    //     }\n    //     else {\n    //         return this.timelineRenderer;\n    //     }\n    // }\n\n    // // Note: we could use .beforeUpdate or use an explicit event or a computed property as well\n    // // however, this feels more explicit\n    // @Watch('config', { immediate: true, deep: true })\n    // protected onConfigChanged(newConfig: StreamGraphConfig, oldConfig: StreamGraphConfig) {\n    //     console.log(\"StreamGraphRenderer:onConfigChanged : \", newConfig, oldConfig);\n\n    //     if ( this.getRenderer() && newConfig.connections.length > 0 ) {\n    //         // need to timeout, because need to toggle the container with v-show before using it\n    //         // setTimeout( () => { this.getRenderer().render( newConfig.connections[0] ) }, 100 );\n    //     }\n    // }\n\n}\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiplexingGraphRenderer.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiplexingGraphRenderer.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./MultiplexingGraphRenderer.vue?vue&type=template&id=ec3179b2&\"\nimport script from \"./MultiplexingGraphRenderer.vue?vue&type=script&lang=ts&\"\nexport * from \"./MultiplexingGraphRenderer.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\nimport { getModule } from \"vuex-module-decorators\";\nimport { Component, Vue } from \"vue-property-decorator\";\n\nimport MultiplexingGraphConfig from \"./data/MultiplexingGraphConfig\"; \nimport MultiplexingGraphConfigurator from \"./MultiplexingGraphConfigurator.vue\";\nimport MultiplexingGraphRenderer from \"./MultiplexingGraphRenderer.vue\";\n\nimport ConfigurationStore from \"@/store/ConfigurationStore\";\nimport ConnectionGroup from \"@/data/ConnectionGroup\";\n\n\n@Component({\n    components: {\n        MultiplexingGraphConfigurator,\n        MultiplexingGraphRenderer,\n    },\n})\n\nexport default class MultiplexingGraphContainer extends Vue {\n\n    protected store:ConfigurationStore = getModule(ConfigurationStore, this.$store);\n    protected config:MultiplexingGraphConfig = this.store.multiplexingGraphConfig;\n} \n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiplexingGraphContainer.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiplexingGraphContainer.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./MultiplexingGraphContainer.vue?vue&type=template&id=221d17f6&\"\nimport script from \"./MultiplexingGraphContainer.vue?vue&type=script&lang=ts&\"\nexport * from \"./MultiplexingGraphContainer.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\nimport { Component, Vue } from \"vue-property-decorator\";\nimport MultiplexingGraphContainer from \"@/components/multiplexinggraph/MultiplexingGraphContainer.vue\";\n\n@Component({\n    components: {\n        MultiplexingGraphContainer,\n    },\n})\nexport default class MultiplexingGraph extends Vue {}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiplexingGraph.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiplexingGraph.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./MultiplexingGraph.vue?vue&type=template&id=68c225f8&\"\nimport script from \"./MultiplexingGraph.vue?vue&type=script&lang=ts&\"\nexport * from \"./MultiplexingGraph.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('StatisticsContainer')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"home\"},[_c('StatisticsConfigurator',{attrs:{\"config\":_vm.config}}),_c('StatisticsRenderer',{attrs:{\"config\":_vm.config}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"background-color\":\"#fff3cd\",\"padding\":\"0px 10px\"}},[_c('b-container',{attrs:{\"fluid\":\"\"}},[_c('b-row',{attrs:{\"align-h\":\"center\"}},[_c('p',{staticStyle:{\"margin-top\":\"10px\"}},[_vm._v(\"Select a file via the dropdown(s) below to view its statistics\")])]),_c('b-row',{attrs:{\"align-h\":\"center\"}},[(_vm.config.group !== undefined)?_c('ConnectionConfigurator',{attrs:{\"allGroups\":_vm.store.groups,\"group\":_vm.config.group,\"canBeRemoved\":false,\"allowGroupSelection\":true,\"allowConnectionSelection\":false,\"onGroupSelected\":_vm.onGroupSelected}}):_vm._e()],1),(this.store.outstandingRequestCount === 0 && this.store.groups.length === 0)?_c('b-alert',{attrs:{\"show\":\"\",\"variant\":\"danger\"}},[_vm._v(\"Please load a trace file to visualize it\")]):(this.store.groups.length === 0)?_c('b-alert',{attrs:{\"show\":\"\",\"variant\":\"warning\"}},[_vm._v(\"Loading files...\")]):_vm._e()],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { getModule } from \"vuex-module-decorators\";\nimport { Component, Vue, Prop } from \"vue-property-decorator\";\nimport StatisticsConfig from \"./data/StatisticsConfig\";\nimport * as qlog from '@quictools/qlog-schema';\n\nimport ConnectionConfigurator from \"@/components/shared/ConnectionConfigurator.vue\";\nimport ConnectionStore from \"@/store/ConnectionStore\";\nimport ConnectionGroup from \"@/data/ConnectionGroup\";\nimport Connection from \"@/data/Connection\";\n\n@Component({\n    components: {\n        ConnectionConfigurator,\n    },\n})\nexport default class StatisticsConfigurator extends Vue {\n    @Prop()\n    public config!: StatisticsConfig;\n\n    public store:ConnectionStore = getModule(ConnectionStore, this.$store);\n\n    public onGroupSelected(group:ConnectionGroup) {\n        console.log(\"StatisticsConfigurator:onGroupSelected : \", this.config, group);\n\n        this.config.group = group;\n    }\n\n    public mounted(){\n        if ( this.config.group === undefined && this.store.groups.length > 0 ){\n            this.selectDefault();\n        }\n    }\n\n    public updated(){\n        if ( this.config.group === undefined && this.store.groups.length > 0 ){\n            this.selectDefault();\n        }\n    }\n\n    protected selectDefault(){\n        console.log(\"selectDefault: adding new default connection configurator\", this.store.groups);\n        this.config.group = ( this.store.groups[0] );\n    }\n\n}\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StatisticsConfigurator.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StatisticsConfigurator.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./StatisticsConfigurator.vue?vue&type=template&id=d3f9bc98&scoped=true&\"\nimport script from \"./StatisticsConfigurator.vue?vue&type=script&lang=ts&\"\nexport * from \"./StatisticsConfigurator.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./StatisticsConfigurator.vue?vue&type=style&index=0&id=d3f9bc98&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"d3f9bc98\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticStyle:{\"width\":\"100%\",\"border\":\"5px solid #fff3cd\",\"min-height\":\"200px\"},attrs:{\"id\":\"statistics-container\"}},[(_vm.group !== undefined)?_c('div',{staticStyle:{\"width\":\"50%\",\"min-width\":\"1024px\",\"margin-left\":\"auto\",\"margin-right\":\"auto\"}},[_c('h3',[_vm._v(\"File info\")]),_c('b-table-simple',{attrs:{\"fixed\":\"\",\"bordered\":\"\",\"small\":\"\",\"responsive\":\"\"}},[_c('colgroup',[_c('col',{attrs:{\"width\":\"20%\",\"align\":\"right\"}})]),_c('b-thead',{attrs:{\"head-variant\":\"dark\"}},[_c('b-tr',[_c('b-th',[_vm._v(\"Aspect\")]),_c('b-th',[_vm._v(\"Value\")])],1)],1),_c('b-tbody',[(_vm.group.filename !== '')?_c('b-tr',[_c('b-td',[_vm._v(\"Filename\")]),_c('b-td',[_vm._v(_vm._s(_vm.group.filename))])],1):_vm._e(),(_vm.group.title !== '')?_c('b-tr',[_c('b-td',[_vm._v(\"Title\")]),_c('b-td',[_vm._v(_vm._s(_vm.group.title))])],1):_vm._e(),(_vm.group.description !== '')?_c('b-tr',[_c('b-td',[_vm._v(\"Description\")]),_c('b-td',[_vm._v(_vm._s(_vm.group.description))])],1):_vm._e(),_c('b-tr',[_c('b-td',[_vm._v(\"qlog version\")]),_c('b-td',[_vm._v(_vm._s(_vm.group.version))])],1),(Object.keys(_vm.group.summary).length > 0)?_c('b-tr',[_c('b-td',[_vm._v(\"Summary\")]),_c('b-td',[_vm._v(_vm._s(JSON.stringify(_vm.group.summary, null, 4)))])],1):_vm._e(),_c('b-tr',[_c('b-td',[_vm._v(\"Trace count\")]),_c('b-td',[_vm._v(_vm._s(_vm.group.getConnections().filter( function (c) { return !c.wasAutoGenerated; } ).length))])],1),_c('b-tr',[_c('b-td',[_vm._v(\"Total event count\")]),_c('b-td',[_vm._v(_vm._s(_vm.totalEventCount))])],1)],1)],1),_vm._l((_vm.group.getConnections().filter( function (c) { return !c.wasAutoGenerated; } )),function(connection,index){return (_vm.totalEventCount > 0)?_c('StatisticsConnectionRenderer',{key:'conn_' +index,attrs:{\"connection\":connection,\"index\":index}}):_vm._e()})],2):_vm._e()])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h3',[_vm._v(\"Trace \"+_vm._s(_vm.index + 1)+\" info\")]),_c('b-table-simple',{attrs:{\"fixed\":\"\",\"bordered\":\"\",\"small\":\"\",\"responsive\":\"\",\"id\":\"toplevel\"}},[_c('colgroup',[_c('col',{attrs:{\"width\":\"20%\"}})]),_c('b-tbody',[(_vm.connection.title && _vm.connection.title > 0)?_c('b-tr',[_c('b-td',[_vm._v(\"Title\")]),_c('b-td',[_vm._v(_vm._s(_vm.connection.title))])],1):_vm._e(),(_vm.connection.description && _vm.connection.description.length > 0)?_c('b-tr',[_c('b-td',[_vm._v(\"Description\")]),_c('b-td',[_vm._v(_vm._s(_vm.connection.description))])],1):_vm._e(),(_vm.connection.vantagePoint)?_c('b-tr',[_c('b-td',[_vm._v(\"Vantage point\")]),_c('b-td',[(_vm.connection.vantagePoint.name !== '')?_c('span',[_vm._v(_vm._s(_vm.connection.vantagePoint.name)),_c('br')]):_vm._e(),(_vm.connection.vantagePoint.type === _vm.qlogns.VantagePointType.network)?_c('span',[_vm._v(_vm._s(_vm.connection.vantagePoint.type)+\" : with \"+_vm._s(_vm.connection.vantagePoint.flow)+\" perspective\")]):_c('span',[_vm._v(_vm._s(_vm.connection.vantagePoint.type))])])],1):_vm._e(),(_vm.H3headersSummary !== undefined)?_c('b-tr',[_c('b-td',[_vm._v(\"H3 connection headers\")]),_c('b-td',[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.H3headersSummary)}})])],1):_vm._e(),_c('b-tr',[_c('b-td',[_vm._v(\"Event count\")]),_c('b-td',[_vm._v(_vm._s(_vm.connection.getEvents().length))])],1),_c('b-tr',[_c('b-td',[_vm._v(\"Events\")]),_c('b-td',[_c('b-table-simple',{staticStyle:{\"border-bottom\":\"0px\"},attrs:{\"fixed\":\"\",\"small\":\"\",\"borderless\":\"\",\"responsive\":\"\"}},[_c('colgroup',[_c('col',{attrs:{\"width\":\"20%\"}})]),_c('b-tbody',[_c('b-tr',[_c('b-th',[_vm._v(\"Category\")]),_c('b-th',[_vm._v(\"Event type\")]),_c('b-th',[_vm._v(\"Event count\")]),_c('b-th',[_vm._v(\"% of total occurence\")])],1),_vm._l((_vm.connection.getLookupTable().entries()),function(catmap,index1){return _vm._l((catmap[1]),function(evtmap,index2){return _c('b-tr',{key:'evt_' + index1 + '_' + index2},[(index2 === 0)?_c('b-td',{attrs:{\"rowspan\":catmap[1].size}},[_vm._v(_vm._s(catmap[0]))]):_vm._e(),_c('b-td',[_vm._v(\"\\n                                        \"+_vm._s(evtmap[0])+\"\\n                                    \")]),_c('b-td',[_vm._v(\"\\n                                        \"+_vm._s(evtmap[1].length)+\"\\n                                    \")]),_c('b-td',[_c('b-progress',{attrs:{\"value\":evtmap[1].length,\"max\":_vm.connection.getEvents().length,\"precision\":2,\"show-progress\":\"\"}})],1)],1)})})],2)],1)],1)],1),_c('b-tr',[_c('b-td',[_vm._v(\"Frame count\")]),_c('b-td',[_vm._v(_vm._s(_vm.totalFrameCount))])],1),_c('b-tr',[_c('b-td',[_vm._v(\"Frames\")]),_c('b-td',[_c('b-table-simple',{staticStyle:{\"border-bottom\":\"0px\"},attrs:{\"fixed\":\"\",\"small\":\"\",\"borderless\":\"\",\"responsive\":\"\"}},[_c('colgroup',[_c('col',{attrs:{\"width\":\"20%\"}})]),_c('b-tbody',[_c('b-tr',[_c('b-th'),_c('b-th',[_vm._v(\"Frame type\")]),_c('b-th',[_vm._v(\"Frame count\")]),_c('b-th',[_vm._v(\"% of total occurence\")])],1),_vm._l((_vm.frameLUT),function(framemap,index2){return _c('b-tr',{key:'frame_' + index2},[_c('b-td'),_c('b-td',[_vm._v(\"\\n                                    \"+_vm._s(framemap[0])+\"\\n                                \")]),_c('b-td',[_vm._v(\"\\n                                    \"+_vm._s(framemap[1])+\"\\n                                \")]),_c('b-td',[_c('b-progress',{attrs:{\"value\":framemap[1],\"show-progress\":\"\",\"precision\":2,\"max\":_vm.totalFrameCount}})],1)],1)})],2)],1)],1)],1),_c('b-tr',[_c('b-td',[_vm._v(\"Encryption level count\")]),_c('b-td',[_vm._v(_vm._s(Array.from(_vm.encryptionLUT.keys()).length))])],1),_c('b-tr',[_c('b-td',[_vm._v(\"Encryption levels\")]),(_vm.encryptionLUT.size > 0)?_c('b-td',[_c('b-table-simple',{staticStyle:{\"border-bottom\":\"0px\"},attrs:{\"fixed\":\"\",\"small\":\"\",\"borderless\":\"\",\"responsive\":\"\"}},[_c('colgroup',[_c('col',{attrs:{\"width\":\"20%\"}})]),_c('b-tbody',[_c('b-tr',[_c('b-th'),_c('b-th',[_vm._v(\"Encryption level\")]),_c('b-th',[_vm._v(\"Packet count\")]),_c('b-th')],1),_vm._l((_vm.encryptionLUT),function(encmap,index1){return _c('b-tr',{key:'enc_' + index1},[_c('b-td'),_c('b-td',[_vm._v(\"\\n                                    \"+_vm._s(encmap[0])+\"\\n                                \")]),_c('b-td',[_vm._v(\"\\n                                    \"+_vm._s(encmap[1])+\"\\n                                \")]),_c('b-td')],1)})],2)],1)],1):_c('b-td',{attrs:{\"variant\":\"danger\"}},[_vm._v(\"\\n                    None of the events in this trace had data.packet_type set!\\n                \")])],1),_c('b-tr',[_c('b-td',[_vm._v(\"Connection-level Flow Control evolution\"),_c('br'),_vm._v(\"(MAX_DATA, initial_max_data)\"),_c('br'),_c('br'),_vm._v(\"\\n                    Read as: viewpoint allows the other side to send this much data on the entire connection (all streams combined)\\n                \")]),(_vm.encryptionLUT.size > 0)?_c('b-td',[_c('b-table-simple',{staticStyle:{\"border-bottom\":\"0px\"},attrs:{\"fixed\":\"\",\"small\":\"\",\"borderless\":\"\",\"responsive\":\"\"}},[_c('colgroup',[_c('col',{attrs:{\"width\":\"20%\"}})]),_c('b-tbody',[_c('b-tr',[_c('b-th'),_c('b-th',[_vm._v(\"Viewpoint\")]),_c('b-th',[_vm._v(\"Evolution (bytes)\")]),_c('b-th')],1),_c('b-tr',[_c('b-td'),_c('b-td',[_vm._v(\"\\n                                    Local (\"+_vm._s(_vm.connection.vantagePoint.type)+\")\\n                                \")]),_c('b-td',_vm._l((_vm.connectionDataFCLocal),function(item,index3){return _c('p',{key:'fcc_' + index3},[_vm._v(\"\\n                                        \"+_vm._s(item)+\"\\n                                    \")])}),0),_c('b-td')],1),_c('b-tr',[_c('b-td'),_c('b-td',[_vm._v(\"\\n                                    Remote (\"+_vm._s(_vm.connection.vantagePoint.type === _vm.qlogns.VantagePointType.client ? \"server\" : \"client\")+\")\\n                                \")]),_c('b-td',_vm._l((_vm.connectionDataFCRemote),function(item,index4){return _c('p',{key:'fcc_' + index4},[_vm._v(\"\\n                                        \"+_vm._s(item)+\"\\n                                    \")])}),0),_c('b-td')],1)],1)],1)],1):_c('b-td',{attrs:{\"variant\":\"danger\"}},[_vm._v(\"\\n                    None of the events in this trace had data.packet_type set!\\n                \")])],1),_c('b-tr',[_c('b-td',[_vm._v(\"Stream-level Flow Control evolution\"),_c('br'),_vm._v(\"(MAX_STREAM_DATA, initial_max_stream_data_*)\"),_c('br'),_c('br'),_vm._v(\"\\n                    Read as: viewpoint allows the other side to send this much data on each individual stream\\n                \")]),(_vm.streamDataFCRemote.size > 0)?_c('b-td',[_c('b-table-simple',{staticStyle:{\"border-bottom\":\"0px\"},attrs:{\"fixed\":\"\",\"small\":\"\",\"borderless\":\"\",\"responsive\":\"\"}},[_c('colgroup',[_c('col',{attrs:{\"width\":\"20%\"}})]),_c('b-tbody',[_c('b-tr',[_c('b-th'),_c('b-th',[_vm._v(\"Local Streams (\"+_vm._s(_vm.connection.vantagePoint.type)+\")\")]),_c('b-th',[_vm._v(\"Evolution\")]),_c('b-th')],1),_vm._l((_vm.streamDataFCLocal),function(item,index6){return _c('b-tr',{key:'fcsl_' + index6},[_c('b-td'),_c('b-td',[_vm._v(\"\\n                                    \"+_vm._s(item[0])+\"\\n                                \")]),_c('b-td',_vm._l((item[1]),function(fcLimit,index66){return _c('p',{key:'fcsl2_' + index66},[_vm._v(\"\\n                                        \"+_vm._s(fcLimit)+\"\\n                                    \")])}),0),_c('b-td')],1)}),_c('b-tr',[_c('b-th'),_c('b-th',[_vm._v(\"Remote Streams (\"+_vm._s(_vm.connection.vantagePoint.type === _vm.qlogns.VantagePointType.client ? \"server\" : \"client\")+\")\")]),_c('b-th',[_vm._v(\"Evolution\")]),_c('b-th')],1),_vm._l((_vm.streamDataFCRemote),function(item,index5){return _c('b-tr',{key:'fcsr_' + index5},[_c('b-td'),_c('b-td',[_vm._v(\"\\n                                    \"+_vm._s(item[0])+\"\\n                                \")]),_c('b-td',_vm._l((item[1]),function(fcLimit,index55){return _c('p',{key:'fcsr2_' + index55},[_vm._v(\"\\n                                        \"+_vm._s(fcLimit)+\"\\n                                    \")])}),0),_c('b-td')],1)})],2)],1)],1):_c('b-td',{attrs:{\"variant\":\"danger\"}},[_vm._v(\"\\n                    No stream level flow control limits set\\n                \")])],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue, Prop, Watch } from \"vue-property-decorator\";\nimport StatisticsConfig from \"./data/StatisticsConfig\";\nimport * as qlog from '@quictools/qlog-schema';\nimport Connection from \"@/data/Connection\";\n\ninterface FCData {\n    connectionDataFCListTimes:Array<number>, // for debugging\n    connectionDataFCList:Array<number>,\n    streamDataFCListTimes:Map<string, Array<number>>, // for debugging\n    streamDataFCList:Map<string, Array<number>>,\n    streamsUniFCList:Array<number>,\n    streamsBidiFCList:Array<number>,\n}\n\n@Component\nexport default class StatisticsConnectionRenderer extends Vue {\n    @Prop()\n     // passing in connection allows us to set it externally as well (e.g., loading from config string, loading premade testcase)\n    protected connection!:Connection;\n\n    @Prop()\n    protected index!:number;\n\n    protected frameLookupTable:Map<string, number> = new Map<string, number>();\n    protected encryptionLookupTable:Map<string, number> = new Map<string, number>(); \n    protected h3Headers:string|undefined = undefined;\n\n    // These are all from the remote's perspective\n    protected flowControlRemote:FCData = {\n        connectionDataFCList: new Array<number>(),\n        connectionDataFCListTimes: new Array<number>(),\n        streamDataFCList: new Map<string, Array<number>>(),\n        streamDataFCListTimes: new Map<string, Array<number>>(),\n        streamsUniFCList: new Array<number>(),\n        streamsBidiFCList: new Array<number>(),\n    }\n\n    protected flowControlLocal:FCData = {\n        connectionDataFCList: new Array<number>(),\n        connectionDataFCListTimes: new Array<number>(),\n        streamDataFCList: new Map<string, Array<number>>(),\n        streamDataFCListTimes: new Map<string, Array<number>>(),\n        streamsUniFCList: new Array<number>(),\n        streamsBidiFCList: new Array<number>(),\n    }\n\n\n\n    // vue.js caches computed props, so this is not done again each time, only when data actually changes, see beforeUpdate()\n    protected get H3headersSummary() {\n        this.connection.setupLookupTable();\n\n        // TODO: FIXME: add proper qlog type definitions for h3 events\n        const frameCreatedEvents = this.connection.lookup( qlog.EventCategory.http, qlog.HTTP3EventType.frame_created ); // sent\n        const frameParsedEvents  = this.connection.lookup( qlog.EventCategory.http, qlog.HTTP3EventType.frame_parsed ); // received\n\n        let userAgent = undefined;\n        let server = undefined;\n        let authority = undefined;\n\n        const frameEvents = [...frameCreatedEvents, ...frameParsedEvents];\n        for ( const rawevt of frameEvents ){\n            const evt = this.connection.parseEvent( rawevt ).data;\n\n            if ( !evt.frame ){\n                continue;\n            }\n\n            if ( evt.frame.headers !== undefined ) {\n                for ( const header of (evt.frame as qlog.IHeadersFrame).headers ){\n                    if (header.name === \"server\"){\n                        server = header.value;\n                    }\n                    else if (header.name === \"user-agent\"){\n                        userAgent = header.value;\n                    }\n                    else if (header.name === \":authority\"){\n                        authority = header.value;\n                    }\n                }\n            }\n        }\n\n        if ( userAgent !== undefined || server !== undefined || authority !== undefined ){\n            this.h3Headers = \"User Agent <i><u>\" + (userAgent ? userAgent : \"unknown\") + \"</u></i>\" + \n                             \" connected to Server <i><u>\" + (server ? server : \"unknown\") + \"</u></i>\" + \n                             \" at <i><u>\" + (authority ? authority : \"unknown authority\") + \"</u></i>\";\n        }\n        \n        return this.h3Headers;\n    }\n\n    protected get qlogns(){\n        return qlog;\n    }\n\n    protected beforeUpdate() {\n        // console.log(\"DEBUG Clearing frameLUT\");\n\n        this.frameLookupTable = new Map<string, number>();\n        this.encryptionLookupTable = new Map<string, number>(); \n        this.h3Headers = undefined;\n\n        this.flowControlRemote = {\n            connectionDataFCList: new Array<number>(),\n            connectionDataFCListTimes: new Array<number>(),\n            streamDataFCList: new Map<string, Array<number>>(),\n            streamDataFCListTimes: new Map<string, Array<number>>(),\n            streamsUniFCList: new Array<number>(),\n            streamsBidiFCList: new Array<number>(),\n        }\n        this.flowControlLocal = {\n            connectionDataFCList: new Array<number>(),\n            connectionDataFCListTimes: new Array<number>(),\n            streamDataFCList: new Map<string, Array<number>>(),\n            streamDataFCListTimes: new Map<string, Array<number>>(),\n            streamsUniFCList: new Array<number>(),\n            streamsBidiFCList: new Array<number>(),\n        }\n    }\n\n    protected get totalFrameCount() {\n        let totalFrameCounter = 0;\n\n        // Reactivity strikes again! If we keep the frameCounter in a var and update it in frameLUT, this leads to infinite update loops...\n        const trace = this.connection;\n        for ( const rawEvt of trace.getEvents() ){\n            const evt = trace.parseEvent( rawEvt );\n            if ( evt.data && evt.data.frames ){ // QUIC level, e.g., packet_sent\n                for ( const frame of evt.data.frames ){\n                    ++totalFrameCounter;\n                }\n            }\n\n            if ( evt.data && evt.data.frame ){ // HTTP level, e.g., frame_created\n                ++totalFrameCounter;\n            }\n        }\n\n        return totalFrameCounter;\n    }\n\n    protected get frameLUT() {\n\n        const trace = this.connection;\n\n        for ( const rawEvt of trace.getEvents() ){\n            const evt = trace.parseEvent( rawEvt );\n            if ( evt.data && evt.data.frames ){ // QUIC level, e.g., packet_sent\n                for ( const frame of evt.data.frames ){\n                    const count = this.frameLookupTable.get( frame.frame_type ) || 0;\n                    this.frameLookupTable.set( frame.frame_type, count + 1 );\n                }\n            }\n\n            if ( evt.data && evt.data.frame ){ // HTTP level, e.g., frame_created\n                const count = this.frameLookupTable.get( evt.data.frame.frame_type ) || 0;\n                this.frameLookupTable.set( evt.data.frame.frame_type, count + 1 );\n            }\n        }\n\n        return this.frameLookupTable;\n    }\n\n    protected get encryptionLUT() {\n\n        const trace = this.connection;\n        for ( const rawEvt of trace.getEvents() ){\n            const evt = trace.parseEvent( rawEvt );\n\n            if ( evt.data && evt.data.packet_type ){\n                const count = this.encryptionLookupTable.get( evt.data.packet_type ) || 0;\n                this.encryptionLookupTable.set( evt.data.packet_type, count + 1 );\n            }\n        }\n\n        return this.encryptionLookupTable;\n    }\n\n    protected fillConnectionDataFC(owner:string) {\n\n        let fc;\n        let packetEventType;\n        if ( owner === \"remote\" ) {\n            fc = this.flowControlRemote;\n            packetEventType = qlog.TransportEventType.packet_received;\n        }\n        else { \n            fc = this.flowControlLocal;\n            packetEventType = qlog.TransportEventType.packet_sent;\n        }\n\n\n        const trace = this.connection;\n        for ( const rawEvt of trace.getEvents() ){\n            const evt = trace.parseEvent( rawEvt );\n\n            // 1. get the initial max from the transport parameters\n            if ( evt.category === qlog.EventCategory.transport && evt.name === qlog.TransportEventType.parameters_set \n                 && evt.data && evt.data.owner === owner ) {\n                     \n                    fc.connectionDataFCListTimes.push( evt.relativeTime );\n                    fc.connectionDataFCList.push ( parseInt( evt.data.initial_max_data, 10 ) );\n            }\n\n            // 2. get updates from MAX_DATA frames\n            if ( evt.category === qlog.EventCategory.transport && evt.name === packetEventType\n                && evt.data && evt.data.frames ) {\n                    for ( const frame of evt.data.frames ) {\n                        if ( frame.frame_type === qlog.QUICFrameTypeName.max_data ) {\n                            fc.connectionDataFCListTimes.push ( evt.relativeTime );\n                            fc.connectionDataFCList.push ( parseInt( frame.maximum, 10 ) );\n                        }\n                    }\n            }\n        }\n    }\n\n    protected fillStreamDataFC(owner:string) {\n\n        let fc;\n        let packetEventType;\n        if ( owner === \"remote\" ) {\n            fc = this.flowControlRemote;\n            packetEventType = qlog.TransportEventType.packet_received;\n        }\n        else { \n            fc = this.flowControlLocal;\n            packetEventType = qlog.TransportEventType.packet_sent;\n        }\n\n\n        const trace = this.connection;\n        for ( const rawEvt of trace.getEvents() ){\n            const evt = trace.parseEvent( rawEvt );\n\n            // 1. get the initial max from the transport parameters\n            if ( evt.category === qlog.EventCategory.transport && evt.name === qlog.TransportEventType.parameters_set \n                 && evt.data && evt.data.owner === owner ) {\n\n                    // TODO: add these as initial values to the individual streams as well\n                    // however, that requires figuring out which streams are what type, and I'm too lazy for that at the moment\n                    fc.streamDataFCList.set(\"bidi_local\",  [ parseInt( evt.data.initial_max_stream_data_bidi_local, 10 )])\n                    fc.streamDataFCList.set(\"bidi_remote\", [ parseInt( evt.data.initial_max_stream_data_bidi_remote, 10 )] )\n                    fc.streamDataFCList.set(\"uni_remote\",  [ parseInt( evt.data.initial_max_stream_data_uni, 10 )] )\n\n\n                    fc.streamDataFCListTimes.set( \"bidi_local\", [evt.relativeTime] );\n                    fc.streamDataFCListTimes.set( \"bidi_remote\", [evt.relativeTime] );\n                    fc.streamDataFCListTimes.set( \"uni_remote\", [evt.relativeTime] );\n            }\n\n            // 2. get updates from MAX_STREAM_DATA frames\n            if ( evt.category === qlog.EventCategory.transport && evt.name === packetEventType\n                && evt.data && evt.data.frames ) {\n                    for ( const frame of evt.data.frames ) {\n                        if ( frame.frame_type === qlog.QUICFrameTypeName.max_stream_data ) {\n\n                            const streamID = \"\" + frame.stream_id;\n\n                            let streamFC = fc.streamDataFCList.get( streamID );\n                            if ( !streamFC ) {\n                                streamFC = new Array<number>();\n                                fc.streamDataFCList.set( streamID, streamFC );\n                            }\n\n                            streamFC.push( parseInt( frame.maximum, 10 ) );\n\n                            let times = fc.streamDataFCListTimes.get( streamID );\n                            if ( !times ) {\n                                times = new Array<number>();\n                                fc.streamDataFCListTimes.set( streamID, times );\n                            }\n\n                            times.push( evt.relativeTime );\n                        }\n                    }\n            }\n        }\n    }\n\n    protected createStaggeredLines( timesInput:Array<number>, valsInput: Array<number> ) {\n\n        let times = \"\";\n        let vals = \"\";\n        let prevVal = null;\n        let prevTime = null;\n\n        for ( let i = 0; i < timesInput.length; ++i ){\n            const time = timesInput[i];\n            const val = valsInput[i];\n\n            if ( prevVal !== null ){\n                times += ( \"\" + time).replace(\".\",\",\") + \";\";\n                vals += ( \"\" + prevVal).replace(\".\",\",\") + \";\";\n            }\n\n            times += ( \"\" + time).replace(\".\",\",\") + \";\";\n            vals  += ( \"\" + val).replace(\".\",\",\") + \";\";\n\n            prevTime = time;\n            prevVal = val;\n        }\n\n        times += ( \"\" + (prevTime! + 200)).replace(\".\",\",\") + \";\";\n        vals  += ( \"\" + prevVal).replace(\".\",\",\") + \";\";\n\n        return [ times, vals ];\n    }\n\n    protected get connectionDataFCRemote() {\n\n        this.fillConnectionDataFC(\"remote\");\n\n        const staggeredResults = this.createStaggeredLines( this.flowControlRemote.connectionDataFCListTimes, this.flowControlRemote.connectionDataFCList );\n\n\n        console.log(\"Connection-level FC TIMES for remote viewpoint of Trace \" + this.index + \": \", staggeredResults[0]);\n        // console.log(\"Connection-level FC TIMES for remote viewpoint of Trace \" + this.index + \": \",    this.flowControlRemote.connectionDataFCListTimes.join(\";\"));\n        console.log(\"Connection-level FC for remote viewpoint of Trace \" + this.index + \": \",         staggeredResults[1]);\n        // console.log(\"Connection-level FC for remote viewpoint of Trace \" + this.index + \": \",          this.flowControlRemote.connectionDataFCList.join(\";\"));\n\n        return this.flowControlRemote.connectionDataFCList;\n    }\n\n    protected get connectionDataFCLocal() {\n\n        this.fillConnectionDataFC(\"local\");\n\n        const staggeredResults = this.createStaggeredLines( this.flowControlLocal.connectionDataFCListTimes, this.flowControlLocal.connectionDataFCList );\n\n        console.log(\"Connection-level FC TIMES for local viewpoint of Trace \" + this.index + \": \", staggeredResults[0] );\n        // console.log(\"Connection-level FC TIMES for local viewpoint of Trace \" + this.index + \": \", this.flowControlLocal.connectionDataFCListTimes.join(\";\"));\n        console.log(\"Connection-level FC for local viewpoint of Trace \" + this.index + \": \",       staggeredResults[1] );\n        // console.log(\"Connection-level FC for local viewpoint of Trace \" + this.index + \": \",       this.flowControlLocal.connectionDataFCList.join(\";\"));\n\n        return this.flowControlLocal.connectionDataFCList;\n    }\n\n    protected get streamDataFCRemote() {\n        this.fillStreamDataFC(\"remote\");\n\n        for ( const entry of this.flowControlRemote.streamDataFCList.entries() ) {\n\n            const staggeredResults = this.createStaggeredLines( this.flowControlRemote.streamDataFCListTimes.get(entry[0])!, entry[1] );\n\n            console.log(\"Stream-level FC TIMES for remote viewpoint of Trace \" + this.index + \", stream \" + entry[0] + \": \", staggeredResults[0]);\n            // console.log(\"Stream-level FC TIMES for remote viewpoint of Trace \" + this.index + \", stream \" + entry[0] + \": \", this.flowControlRemote.streamDataFCListTimes.get(entry[0])!.join(\",\"));\n            console.log(\"Stream-level FC for remote viewpoint of Trace \" + this.index + \", stream \" + entry[0] + \": \", staggeredResults[1]);\n            // console.log(\"Stream-level FC for remote viewpoint of Trace \" + this.index + \", stream \" + entry[0] + \": \", entry[1].join(\",\"));\n        }\n\n        return this.flowControlRemote.streamDataFCList;\n    }\n\n    protected get streamDataFCLocal() {\n        this.fillStreamDataFC(\"local\");\n\n        for ( const entry of this.flowControlLocal.streamDataFCList.entries() ) {\n\n            const staggeredResults = this.createStaggeredLines( this.flowControlLocal.streamDataFCListTimes.get(entry[0])!, entry[1] );\n\n            console.log(\"Stream-level FC TIMES for local viewpoint of Trace \" + this.index + \", stream \" + entry[0] + \": \", staggeredResults[0]);\n            // console.log(\"Stream-level FC TIMES for local viewpoint of Trace \" + this.index + \", stream \" + entry[0] + \": \", this.flowControlLocal.streamDataFCListTimes.get(entry[0])!.join(\",\"));\n            console.log(\"Stream-level FC for local viewpoint of Trace \" + this.index + \", stream \" + entry[0] + \": \", staggeredResults[1]);\n            // console.log(\"Stream-level FC for local viewpoint of Trace \" + this.index + \", stream \" + entry[0] + \": \", entry[1].join(\",\"));\n        }\n\n        return this.flowControlLocal.streamDataFCList;\n    }\n\n    // TODO: FIXME: not doing the MAX_STREAMS stuff yet because we didn't need it for our research + \n    // most of that info should be in the transport parameters either way (unless for very long-running conns or constrained hardware)\n\n\n\n}\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StatisticsConnectionRenderer.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StatisticsConnectionRenderer.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./StatisticsConnectionRenderer.vue?vue&type=template&id=8adfb654&scoped=true&\"\nimport script from \"./StatisticsConnectionRenderer.vue?vue&type=script&lang=ts&\"\nexport * from \"./StatisticsConnectionRenderer.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./StatisticsConnectionRenderer.vue?vue&type=style&index=0&id=8adfb654&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"8adfb654\",\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue, Prop, Watch } from \"vue-property-decorator\";\nimport StatisticsConfig from \"./data/StatisticsConfig\";\nimport * as qlog from '@quictools/qlog-schema';\n\nimport StatisticsConnectionRenderer from \"@/components/stats/StatisticsConnectionRenderer.vue\";\n\n@Component({\n    components: {\n        StatisticsConnectionRenderer,\n    },\n})\nexport default class StatisticsRenderer extends Vue {\n    @Prop()\n    public config!: StatisticsConfig;\n\n    protected get group() {\n        return this.config.group;\n    }\n\n    protected get totalEventCount() {\n        if ( !this.config.group ) {\n            return -1;\n        }\n            \n        let output = 0;\n\n        for ( const trace of this.config.group!.getConnections() ){\n            output += trace.getEvents().length;\n        }\n\n        return output;\n    }\n\n    protected get qlogns(){\n        return qlog;\n    }\n}\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StatisticsRenderer.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StatisticsRenderer.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./StatisticsRenderer.vue?vue&type=template&id=7640512c&scoped=true&\"\nimport script from \"./StatisticsRenderer.vue?vue&type=script&lang=ts&\"\nexport * from \"./StatisticsRenderer.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./StatisticsRenderer.vue?vue&type=style&index=0&id=7640512c&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7640512c\",\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\nimport { getModule } from \"vuex-module-decorators\";\nimport { Component, Vue } from \"vue-property-decorator\";\n\nimport StatisticsConfig from \"./data/StatisticsConfig\";\nimport StatisticsConfigurator from \"./StatisticsConfigurator.vue\";\nimport StatisticsRenderer from \"./StatisticsRenderer.vue\";\n\nimport ConfigurationStore from \"@/store/ConfigurationStore\";\nimport ConnectionGroup from \"@/data/ConnectionGroup\";\n\n\n@Component({\n    components: {\n        StatisticsConfigurator,\n        StatisticsRenderer,\n    },\n})\n\nexport default class StatisticsContainer extends Vue {\n\n    protected store:ConfigurationStore = getModule(ConfigurationStore, this.$store);\n    // tslint:disable-next-line:member-ordering\n    public config:StatisticsConfig = this.store.statisticsConfig;\n\n    public created(){\n        console.log(\"statistics container created\", this.config);\n    }\n\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StatisticsContainer.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/ts-loader/index.js??ref--12-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StatisticsContainer.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./StatisticsContainer.vue?vue&type=template&id=2b6d222e&\"\nimport script from \"./StatisticsContainer.vue?vue&type=script&lang=ts&\"\nexport * from \"./StatisticsContainer.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\nimport { Component, Vue } from \"vue-property-decorator\";\nimport StatisticsContainer from \"@/components/stats/StatisticsContainer.vue\";\n\n@Component({\n    components: {\n        StatisticsContainer,\n    },\n})\nexport default class Statistics extends Vue {} \n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Statistics.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??ref--12-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Statistics.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Statistics.vue?vue&type=template&id=5428eaa9&\"\nimport script from \"./Statistics.vue?vue&type=script&lang=ts&\"\nexport * from \"./Statistics.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from \"vue\";\nimport Router from \"vue-router\";\nimport MainMenu from \"./views/MainMenu.vue\";\nimport VUEDebug from \"./views/VUEDebug.vue\";\nimport FileManager from \"./views/FileManager.vue\";\nimport SequenceDiagram from \"./views/SequenceDiagram.vue\";\nimport PacketizationDiagram from \"./views/PacketizationDiagram.vue\";\nimport CongestionGraph from \"./views/CongestionGraph.vue\";\nimport MultiplexingGraph from \"./views/MultiplexingGraph.vue\";\nimport Statistics from \"./views/Statistics.vue\";\n\nVue.use(Router);\n\nconst router = new Router({\n    routes: [\n        {\n            path: \"/\",\n            redirect: \"/files\",\n        },\n        {\n            path: \"/debug\",\n            name: \"VUEDebug\",\n            components: {\n                default: VUEDebug,\n                menu: MainMenu,\n            },\n        },\n        {\n            path: \"/files\",\n            name: \"FileManager\",\n            components: {\n                default: FileManager,\n                menu: MainMenu,\n            },\n        },\n        {\n            path: \"/sequence\",\n            name: \"sequence\",\n            // route level code-splitting\n            // this generates a separate chunk (about.[hash].js) for this route\n            // which is lazy-loaded when the route is visited.\n            // component: () => import(/* webpackChunkName: \"about\" */ './views/About.vue'),\n            components: {\n                default: SequenceDiagram,\n                menu: MainMenu,\n            },\n        },\n        {\n            path: \"/congestion\",\n            name: \"congestion\",\n            // route level code-splitting\n            // this generates a separate chunk (about.[hash].js) for this route\n            // which is lazy-loaded when the route is visited.\n            // component: () => import(/* webpackChunkName: \"about\" */ './views/About.vue'),\n            components: {\n                default: CongestionGraph,\n                menu: MainMenu,\n            },\n        },\n        {\n            path: \"/multiplexing\",\n            name: \"multiplexing\",\n            components: {\n                default: MultiplexingGraph,\n                menu: MainMenu,\n            },\n        },\n        {\n            path: \"/packetization\",\n            name: \"packetization\",\n            components: {\n                default: PacketizationDiagram,\n                menu: MainMenu,\n            },\n        },\n        {\n            path: \"/stats\",\n            name: \"Statistics\",\n            components: {\n                default: Statistics,\n                menu: MainMenu,\n            },\n        },\n    ],\n});\n\nfunction hasQueryParams(route:any) {\n    return !!Object.keys(route.query).length;\n  }\n\n// Vue does something weird with its processing of query parameters\n// normally, we get an url like : mydomain.com/#/routename\n// if we then do mydomain.com/#/routename?param1=test, everything works\n// HOWEVER\n// mydomain.com?param1=test will NOT work...\n// this will redirect to  mydomain.com?param1=test#/timeline\n// WHICH IS RETARDED, VUE\n// anyway... if we are in this situation, manually copy the parameters over\n// and use them in the redirect so stuff works\nrouter.beforeEach((to, from, next) => {\n\n    if ( window.location.search && Object.keys(to.query).length === 0 && from.path === \"/\" ){\n        const params = new URLSearchParams(window.location.search);\n        const query:any = {};\n        for ( const entry of params.entries() ){\n            query[ entry[0] ] = entry[1];\n        }\n        next({ name: to.name, query: query });\n    }\n    else {\n        next();\n    }\n});\n\nexport default router;\n","import Vue from \"vue\";\nimport Vuex from \"vuex\";\n\nimport ConnectionStore from \"@/store/ConnectionStore\"\nimport ConfigurationStore from \"@/store/ConfigurationStore\"\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n    //strict: process.env.NODE_ENV !== 'production',\n    modules: {\n        connections: ConnectionStore,\n        configurations: ConfigurationStore, \n    },\n});\n","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker'\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready () {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB'\n      )\n    },\n    registered () {\n      console.log('Service worker has been registered.')\n    },\n    cached () {\n      console.log('Content has been cached for offline use.')\n    },\n    updatefound () {\n      console.log('New content is downloading.')\n    },\n    updated () {\n      console.log('New content is available; please refresh.')\n    },\n    offline () {\n      console.log('No internet connection found. App is running in offline mode.')\n    },\n    error (error) {\n      console.error('Error during service worker registration:', error)\n    }\n  })\n}\n","import Vue from \"vue\";\nimport BootstrapVue from \"bootstrap-vue\";\nimport Notifications from 'vue-notification'\nimport App from \"./App.vue\";\nimport router from \"./router\";\nimport store from \"./store\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap-vue/dist/bootstrap-vue.css\";\n\nimport { getModule } from \"vuex-module-decorators\";\nimport ConnectionStore from \"@/store/ConnectionStore\";\n\nimport './registerServiceWorker'\n\n// import { IQLog } from '@quictools/qlog-schema';\n\n// const standaloneFiles:Array<string> = [\n//     \"draft-00/example_github.qlog.js\",\n//     \"draft-01/new_cid.qlog.js\",\n//     \"draft-01/spin_bit.qlog.js\",\n//     \"prespec/ngtcp2_pcap1.qlog.js\",\n//     /*\n//     \"prespec/quictracker_handshake_v6_quicker_20181219.qlog.js\",\n//     \"prespec/ngtcp2_multistreams_server_noloss.qlog.js\",\n//     \"prespec/ngtcp2_multistreams_server_10ploss.qlog.js\",\n//     \"prespec/ngtcp2_multistreams_server_losscomparison.qlog.js\",\n//     */\n// ];\n\n// const connectionStore = getModule(ConnectionStore, store);\n\n// for ( const filepath of standaloneFiles ){\n\n//     const scriptelement = document.createElement('script');\n\n//     console.log(\"Loading \", filepath );\n\n//     scriptelement.onload = () => {\n//         // the standalone file has a single variable in it, named after the file, so we can get the contents\n//         // e.g., var dupli_pkts_cl_ngtcp2 = {...}\n//         // since it's a 'var' and not 'let', we can access it via the window[]\n//         // prespec/ngtcp2_pcap1.qlog.js -> ngtcp2_pcap1\n//         let varname = filepath.substr(filepath.indexOf(\"/\") + 1);\n//         varname = varname.substr(0, varname.indexOf(\".\"));\n\n//         // @ts-ignore\n//         const file = window[varname];\n//         // @ts-ignore\n//         window[varname] = \"loaded\"; // make sure it can be gc'ed if necessary\n\n//         connectionStore.addGroupFromQlogFile(  {fileContentsJSON: file, filename: varname} ).then( () => {\n//             console.log(\"Loaded \", varname, file );\n//         });\n//     };\n\n//     scriptelement.onerror = (err) => {\n//         console.error(\"Loading error \", filepath, err);\n//     };\n\n//     scriptelement.onabort = () => {\n//         console.error(\"Loading aborted \", filepath);\n//     };\n\n//     scriptelement.src = \"standalone_data/\" + filepath;\n//     document.head.appendChild(scriptelement);\n// }\n\n\n\n// TODO: REMOVE: only for local testing!\n// if (window.location.toString().indexOf(\":8080\") >= 0 && window.location.toString().indexOf(\"nodemo\") < 0 ){\n//     console.log(\"Autoloading demo files\");\n//     setTimeout( () => {\n//         getModule(ConnectionStore, store).loadExamplesForDemo();\n//     }, 500);\n// }\n\nVue.config.productionTip = false;\nVue.use(BootstrapVue);\nVue.use(Notifications);\n\nnew Vue({\n    router,\n    store,\n    render: (h) => h(App),\n}).$mount(\"#app\");\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MainMenu.vue?vue&type=style&index=0&id=7d6c59e9&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MainMenu.vue?vue&type=style&index=0&id=7d6c59e9&scoped=true&lang=css&\""],"sourceRoot":""}