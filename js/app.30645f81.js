(function(e){function t(t){for(var a,o,s=t[0],c=t[1],l=t[2],d=0,p=[];d<s.length;d++)o=s[d],Object.prototype.hasOwnProperty.call(i,o)&&i[o]&&p.push(i[o][0]),i[o]=0;for(a in c)Object.prototype.hasOwnProperty.call(c,a)&&(e[a]=c[a]);h&&h(t);while(p.length)p.shift()();return r.push.apply(r,l||[]),n()}function n(){for(var e,t=0;t<r.length;t++){for(var n=r[t],a=!0,s=1;s<n.length;s++){var c=n[s];0!==i[c]&&(a=!1)}a&&(r.splice(t--,1),e=o(o.s=n[0]))}return e}var a={},i={app:0},r=[];function o(t){if(a[t])return a[t].exports;var n=a[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=e,o.c=a,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)o.d(n,a,function(t){return e[t]}.bind(null,a));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="";var s=window["webpackJsonp"]=window["webpackJsonp"]||[],c=s.push.bind(s);s.push=t,s=s.slice();for(var l=0;l<s.length;l++)t(s[l]);var h=c;r.push([0,"chunk-vendors"]),n()})({0:function(e,t,n){e.exports=n("cd49")},"034f":function(e,t,n){"use strict";var a=n("64a9"),i=n.n(a);i.a},"06b0":function(e,t,n){},"0d98":function(e,t,n){"use strict";var a=n("06b0"),i=n.n(a);i.a},1159:function(e,t,n){"use strict";var a=n("9942"),i=n.n(a);i.a},"11b7":function(e,t,n){"use strict";var a=n("d1c7"),i=n.n(a);i.a},"22e8":function(e,t,n){},"26b6":function(e,t,n){},"3e27":function(e,t,n){"use strict";var a=n("af9e"),i=n.n(a);i.a},"5bb0":function(e,t,n){"use strict";var a=n("f796"),i=n.n(a);i.a},6010:function(e,t,n){"use strict";var a=n("984f"),i=n.n(a);i.a},"64a9":function(e,t,n){},"73c9":function(e,t,n){"use strict";var a=n("22e8"),i=n.n(a);i.a},"984f":function(e,t,n){},"989c":function(e,t,n){},9942:function(e,t,n){},"9d5e":function(e,t,n){"use strict";var a=n("26b6"),i=n.n(a);i.a},af9e:function(e,t,n){},b85d:function(e,t,n){},c011:function(e,t,n){"use strict";var a=n("989c"),i=n.n(a);i.a},cd49:function(e,t,n){"use strict";n.r(t);var a=n("2b0e"),i=n("5f5b"),r=n("ee98"),o=n.n(r),s=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{attrs:{id:"app"}},[n("router-view",{attrs:{name:"menu"}}),n("router-view"),n("notifications",{attrs:{group:"default",position:"bottom center",width:"50%"}})],1)},c=[],l=n("9ab4"),h=n("6fc5"),d=n("60a3"),p=n("bc3a"),m=n.n(p);class g{constructor(){this.connections=new Array,this.version="",this.format="JSON",this.filename="",this.URL="",this.URLshort="",this.title="",this.description="",this.summary={}}addConnection(e){this.connections.push(e)}getConnections(){return this.connections}}var u,f,v,y,_,T,b,S,w=n("19c1");class x{constructor(e){this.eventFieldNames=new Array,this.commonFields={},this.configuration={time_offset:"0",time_units:"ms",original_uris:[]},this.wasAutoGenerated=!1,this.parent=e,this.title="",this.description="",this.events=new Array,this.vantagePoint={type:w["VantagePointType"].unknown,flow:w["VantagePointType"].unknown},this.events._isVue=!0,this.parent.addConnection(this),this.lookupTable=new Map,this.lookupTable._isVue=!0}clone(){const e=new x(this.parent);e.title=this.title,e.description=this.description,e.eventFieldNames=this.eventFieldNames.slice(),e.commonFields=JSON.parse(JSON.stringify(this.commonFields||[])),e.configuration=JSON.parse(JSON.stringify(this.configuration||{})),e.vantagePoint=JSON.parse(JSON.stringify(this.vantagePoint||{}));const t=JSON.parse(JSON.stringify(this.events||[]));return t._isVue=!0,e.events=t,e.eventParser=this.eventParser,e}setEventParser(e){e._isVue=!0,this.eventParser=e,this.eventParser.init(this)}getEventParser(){return this.eventParser}parseEvent(e){return this.eventParser.load(e)}setEvents(e){e._isVue=!0,this.events=e}getEvents(){return this.events}getVantagePointPerspective(){return this.vantagePoint.type===w["VantagePointType"].server||this.vantagePoint.type===w["VantagePointType"].client?this.vantagePoint.type:this.vantagePoint.flow?this.vantagePoint.flow:w["VantagePointType"].unknown}setupLookupTable(){if(0===this.lookupTable.size)for(const e of this.events){const t=this.parseEvent(e).category,n=this.parseEvent(e).name;this.lookupTable.has(t)||this.lookupTable.set(t,new Map);const a=this.lookupTable.get(t);a.has(n)||a.set(n,new Array),a.get(n).push(e)}}getLookupTable(){return this.setupLookupTable(),this.lookupTable}lookup(e,t){return this.lookupTable.has(e)&&this.lookupTable.get(e).has(t)?this.lookupTable.get(e).get(t):[]}getLongName(){let e="";return this.vantagePoint&&(this.vantagePoint.name&&(e+=this.vantagePoint.name+" : "),this.vantagePoint.type?e+=this.vantagePoint.type:e+="UNKNOWN",e+=this.vantagePoint&&this.vantagePoint.flow?" (flow = "+this.vantagePoint.flow+") : ":" : "),this.title&&(e+=this.title),this.description&&(e+=" : "+this.description),e}}(function(e){e[e["ABSOLUTE_TIME"]=0]="ABSOLUTE_TIME",e[e["RELATIVE_TIME"]=1]="RELATIVE_TIME",e[e["DELTA_TIME"]=2]="DELTA_TIME"})(u||(u={}));class E{static fromJSON(e){if(e&&e.qlog_version){const t=e.qlog_version;return"draft-02-RC1"===t||"draft-02"===t?E.fromDraft02(e):void console.error("QlogLoaderV2: Unknown qlog version! Only draft-02 and draft-02-RC1 are supported!",t,e)}console.error("QlogLoaderV2: qlog files MUST have a qlog_version field in their top-level object!",e)}static fromDraft02(e){const t=e;console.log("QlogLoaderV2:fromDraft02 : ",t,t.traces);const n=new g;n.version=t.qlog_version,n.format=t.qlog_format,n.title=t.title||"",n.description=t.description||"";for(let a of t.traces){const e=new Array;if(void 0!==a.error_description){a=a;const e=new x(n);e.title="ERROR",e.description=a.uri+" : "+a.error_description;continue}a=a;let t=!1;void 0!==a.event_fields&&a.event_fields.length>0&&(t=!0);let i=!1,r="group_id";if(t?(r=a.event_fields.indexOf("group_id"),r>=0&&(i=!0)):a.events&&a.events.length>0&&void 0!==a.events[0][r]&&(i=!0),i){const t=new Map;for(const i of a.events){if(0===i.length||0===Object.keys(i).length)continue;let a=i[r];"string"!==typeof a&&(a=JSON.stringify(a));let o=t.get(a);o||(o=new x(n),o.title="Group "+a+" : ",t.set(a,o),e.push(o)),o.getEvents().push(i)}}else{const t=new x(n);e.push(t),t.setEvents(a.events);const i=a.events[a.events.length-1];0!==i.length&&0!==Object.keys(i).length||t.getEvents().splice(a.events.length-1,1)}for(const n of e){n.title+=a.title?a.title:"",n.description+=a.description?a.description:"",n.vantagePoint=a.vantage_point||{},n.vantagePoint.type||(n.vantagePoint.type=w["VantagePointType"].unknown,n.vantagePoint.flow=w["VantagePointType"].unknown,n.vantagePoint.name="No VantagePoint set"),t?(n.eventFieldNames=a.event_fields,n.setEventParser(new P)):n.setEventParser(new k),n.commonFields=a.common_fields,n.configuration=a.configuration||{};let e=!1,i=-1;for(const t of n.getEvents()){const a=n.parseEvent(t);if(!(a.absoluteTime>=i)){e=!0,console.error("QlogLoaderV2:draft02 : timestamps were not in the correct order!",a.absoluteTime," < ",i,a);break}i=a.absoluteTime}e&&(n.getEvents().sort((e,t)=>{return n.parseEvent(e).absoluteTime-n.parseEvent(t).absoluteTime}),console.error("QlogLoaderV2:draft02 : manually sorted trace on timestamps!",n.getEvents()),void 0!==n.eventFieldNames&&n.eventFieldNames.length>0?n.setEventParser(new P):n.setEventParser(new k),alert("Loaded trace was not absolutely ordered on event timestamps. We performed a sort() in qvis, but this slows things down and isn't guaranteed to be stable if the timestamps aren't unique! The qlog spec requires absolutely ordered timestamps. See the console for more details."))}}return n}}class k{constructor(){this.timeTrackingMethod=u.ABSOLUTE_TIME,this.addTime=0,this.subtractTime=0,this.timeMultiplier=1,this._timeOffset=0,this.categoryCommon="unknown",this.nameCommon="unknown"}get relativeTime(){return void 0===this.currentEvent||void 0===this.currentEvent.time?0:parseFloat(this.currentEvent.time)*this.timeMultiplier-this.subtractTime+this._timeOffset}get absoluteTime(){return void 0===this.currentEvent||void 0===this.currentEvent.time?0:parseFloat(this.currentEvent.time)*this.timeMultiplier+this.addTime+this._timeOffset}getAbsoluteStartTime(){return this.timeTrackingMethod===u.RELATIVE_TIME?this.addTime:this.timeTrackingMethod===u.ABSOLUTE_TIME?this.subtractTime:(console.error("QlogLoader: No proper startTime present in qlog file. This tool doesn't support delta_time yet!"),0)}get timeOffset(){return this._timeOffset}get category(){return this.currentEvent&&this.currentEvent.category?this.currentEvent.category:this.currentEvent&&this.currentEvent.name?this.currentEvent.name.split(":")[0]:this.categoryCommon}get name(){if(void 0===this.currentEvent||void 0===this.currentEvent.name)return this.nameCommon;const e=this.currentEvent.name.split(":");return e.length>1?e[1]:e[0]}set name(e){if(void 0===this.currentEvent||void 0===this.currentEvent.name)return;const t=this.name;this.currentEvent.name=this.currentEvent.name.replace(t,e)}get data(){if(void 0!==this.currentEvent&&void 0!==this.currentEvent.data)return this.currentEvent.data}timeToMilliseconds(e){return parseFloat(e)*this.timeMultiplier}getTimeTrackingMethod(){return this.timeTrackingMethod}init(e){if(this.currentEvent=void 0,e.commonFields&&(e.commonFields.category&&(this.categoryCommon=e.commonFields.category),e.commonFields.name&&(this.nameCommon=e.commonFields.name),e.commonFields.time_format?"relative"===e.commonFields.time_format?this.timeTrackingMethod=u.RELATIVE_TIME:"delta"===e.commonFields.time_format?this.timeTrackingMethod=u.DELTA_TIME:this.timeTrackingMethod=u.ABSOLUTE_TIME:void 0!==e.commonFields.reference_time?(this.timeTrackingMethod=u.RELATIVE_TIME,console.warn('QlogLoaderV2:Parse: the trace sets reference_time but doesn\'t set time_format! This is needed starting in draft-02, please change your qlogs! We pretend here that time_format was set to "relative".',e.commonFields)):this.timeTrackingMethod=u.ABSOLUTE_TIME),e.configuration&&e.configuration.time_units&&"us"===e.configuration.time_units&&(this.timeMultiplier=.001),this.timeTrackingMethod===u.ABSOLUTE_TIME)this.addTime=0,this.subtractTime=parseFloat(e.getEvents()[0].time);else if(this.timeTrackingMethod===u.RELATIVE_TIME)e.commonFields&&void 0!==e.commonFields.reference_time?(this.addTime=this.parseReferenceTime(e.commonFields.reference_time,this.timeMultiplier),this.subtractTime=0):(console.error('QlogLoaderV2: Using time_format === "relative" but no reference_time found in common_fields. Assuming 0.',e.commonFields),this.addTime=0,this.subtractTime=0);else if(this.timeTrackingMethod===u.DELTA_TIME){this.timeTrackingMethod=u.ABSOLUTE_TIME;const t=e.getEvents();t&&0!==t.length?e.commonFields&&void 0!==e.commonFields.reference_time?(this.addTime=0,this.subtractTime=this.parseReferenceTime(e.commonFields.reference_time,this.timeMultiplier),t[0].time=parseFloat(t[0].time)+this.subtractTime):(this.addTime=0,this.subtractTime=parseFloat(t[0].time)):console.error("QlogLoaderV2: DELTA_TIME requires all events to be set before setEventParser is called... was not the case here!");let n=this.subtractTime;for(let e=1;e<t.length;++e)t[e].time=parseFloat(t[e].time)+n,n=t[e].time}else console.error("QlogLoaderV2: No time_format present in qlog file. Pick one of either absolute, relative or delta in common_fields",e.commonFields);e.configuration&&e.configuration.time_offset&&(this._timeOffset=parseFloat(e.configuration.time_offset)*this.timeMultiplier),this.addTime*=this.timeMultiplier,this.subtractTime*=this.timeMultiplier}setReferenceTime(e){this.addTime=e}load(e){return this.currentEvent=e,this}parseReferenceTime(e,t){return"string"===typeof e&&(e.indexOf(":")>=0||e.indexOf("-")>=0)?(console.warn("QlogLoader:parseReferenceTime: We think reference_time is not in 'milliseconds since epoch' as a number, but rather as a time string. That is not really supported, though we'll try to parse it here!",e),1===t?Date.parse(e):1e3*Date.parse(e)):parseFloat(e)}}class C{static fromJSON(e){if(e&&e.qlog_version){const t=e.qlog_version;return"0.1"===t?C.fromPreSpec(e):"draft-00"===t?C.fromDraft00(e):"draft-01"===t?C.fromDraft01(e):"draft-02-wip"===t?C.fromDraft02(e):"draft-02-RC1"===t||"draft-02"===t?E.fromJSON(e):void console.error("QlogLoader: Unknown qlog version! Only draft-00, draft-01 and draft-02-wip are supported!",t,e)}console.error("QlogLoader: qlog files MUST have a qlog_version field in their top-level object!",e)}static fromDraft02(e){const t=e;console.log("QlogLoader:fromDraft02-wip : ",t,t.traces);const n=new g;n.version=t.qlog_version,n.title=t.title||"",n.description=t.description||"";for(let a of t.traces){const e=new Array;if(void 0!==a.error_description){a=a;const e=new x(n);e.title="ERROR",e.description=a.uri+" : "+a.error_description;continue}a=a;const t=a.event_fields.indexOf("group_id");if(a.event_fields&&t>=0){const i=new Map;for(const r of a.events){if(0===r.length||0===Object.keys(r).length)continue;let a=r[t];"string"!==typeof a&&(a=JSON.stringify(a));let o=i.get(a);o||(o=new x(n),o.title="Group "+a+" : ",i.set(a,o),e.push(o)),o.getEvents().push(r)}}else{const t=new x(n);e.push(t),t.setEvents(a.events);const i=a.events[a.events.length-1];0!==i.length&&0!==Object.keys(i).length||t.getEvents().splice(a.events.length-1,1)}for(const n of e){n.title+=a.title?a.title:"",n.description+=a.description?a.description:"",n.vantagePoint=a.vantage_point||{},n.vantagePoint.type||(n.vantagePoint.type=w["VantagePointType"].unknown,n.vantagePoint.flow=w["VantagePointType"].unknown,n.vantagePoint.name="No VantagePoint set"),n.eventFieldNames=a.event_fields,n.commonFields=a.common_fields,n.configuration=a.configuration||{},n.setEventParser(new P);let e=!1,t=-1;for(const a of n.getEvents()){const i=n.parseEvent(a);if(!(i.absoluteTime>=t)){e=!0,console.error("QlogLoader:draft02 : timestamps were not in the correct order!",i.absoluteTime," < ",t,i);break}t=i.absoluteTime}e&&(n.getEvents().sort((e,t)=>{return n.parseEvent(e).absoluteTime-n.parseEvent(t).absoluteTime}),console.error("QlogLoader:draft02 : manually sorted trace on timestamps!",n.getEvents()),n.setEventParser(new P),alert("Loaded trace was not absolutely ordered on event timestamps. We performed a sort() in qvis, but this slows things down and isn't guaranteed to be stable if the timestamps aren't unique! The qlog spec requires absolutely ordered timestamps. See the console for more details."))}}return n}static fromDraft01(e){const t=e;console.log("QlogLoader:fromDraft01 : ",t,t.traces);const n=new g;n.version=t.qlog_version,n.title=t.title||"",n.description=t.description||"";for(let a of t.traces){const e=new Array;if(void 0!==a.error_description){a=a;const e=new x(n);e.title="ERROR",e.description=a.uri+" : "+a.error_description;continue}a=a;const t=a.event_fields.indexOf("group_id");if(a.event_fields&&t>=0){const i=new Map;for(const r of a.events){if(0===r.length||0===Object.keys(r).length)continue;let a=r[t];"string"!==typeof a&&(a=JSON.stringify(a));let o=i.get(a);o||(o=new x(n),o.title="Group "+a+" : ",i.set(a,o),e.push(o)),o.getEvents().push(r)}}else{const t=new x(n);e.push(t),t.setEvents(a.events);const i=a.events[a.events.length-1];0!==i.length&&0!==Object.keys(i).length||t.getEvents().splice(a.events.length-1,1)}for(const n of e){n.title+=a.title?a.title:"",n.description+=a.description?a.description:"",n.vantagePoint=a.vantage_point||{},n.vantagePoint.type||(n.vantagePoint.type=w["VantagePointType"].unknown,n.vantagePoint.flow=w["VantagePointType"].unknown,n.vantagePoint.name="No VantagePoint set"),n.eventFieldNames=a.event_fields,n.commonFields=a.common_fields,n.configuration=a.configuration||{},n.setEventParser(new P);let e=!1;for(const a of n.getEvents()){const t=n.parseEvent(a),i=t.data;i&&i.type?(e=!0,i.packet_type=i.type.toLowerCase(),i.packet_type=i.packet_type.replace("rtt","RTT")):i&&i.packet_type&&(i.type=i.packet_type.toLowerCase(),i.packet_type=i.type.replace("rtt","RTT"))}if(!e)for(const a of n.getEvents()){const t=n.parseEvent(a);if("metric_update"===t.name||"connection_new"===t.name||"connection_close"===t.name||"alpn_update"===t.name||"version_update"===t.name||"connection_id_update"===t.name){e=!0;break}if("parameters_set"===t.name){e=!1;break}if(void 0!==t.data.id){e=!0;break}if(void 0!==t.data.frames){for(const n of t.data.frames)if(n.id){e=!0;break}if(e)break}else{if("onertt"===t.data.packet_type){e=!0;break}if("zerortt"===t.data.packet_type){e=!0;break}}}e&&C.fixPreviousInto01(n);let t=!1,i=-1;for(const a of n.getEvents()){const e=n.parseEvent(a);if(!(e.absoluteTime>=i)){t=!0,console.error("QlogLoader:draft01 : timestamps were not in the correct order!",e.absoluteTime," < ",i,e);break}i=e.absoluteTime}t&&(n.getEvents().sort((e,t)=>{return n.parseEvent(e).absoluteTime-n.parseEvent(t).absoluteTime}),console.error("QlogLoader:draft01 : manually sorted trace on timestamps!",n.getEvents()),n.setEventParser(new P),alert("Loaded trace was not absolutely ordered on event timestamps. We performed a sort() in qvis, but this slows things down and isn't guaranteed to be stable if the timestamps aren't unique! The qlog spec requires absolutely ordered timestamps. See the console for more details."))}}return n}static fixPreviousInto01(e){console.log("QlogLoader:fixPreviousInto01 : ",e);for(const t of e.getEvents()){const n=e.parseEvent(t);if("connection_new"===n.name)n.name=w["ConnectivityEventType"].connection_started;else if("connection_id_update"===n.name)n.name=w["ConnectivityEventType"].connection_id_updated;else if("key_update"===n.name)n.name=w["SecurityEventType"].key_updated;else if("key_retire"===n.name)n.name=w["SecurityEventType"].key_retired;else if("stream_state_update"===n.name)n.name=w["TransportEventType"].stream_state_updated;else if("cc_state_update"===n.name)n.name=w["RecoveryEventType"].congestion_state_updated;else if("loss_alarm_set"===n.name)n.name=w["RecoveryEventType"].loss_timer_set;else if("loss_alarm_fired"===n.name)n.name=w["RecoveryEventType"].loss_timer_triggered;else if("connection_close"===n.name)n.name=w["ConnectivityEventType"].connection_state_updated,n.data.new=w["ConnectionState"].closed,n.data.src_id&&(n.data.src_id="removed when converting to draft-01");else if("cipher_update"===n.name)n.name=w["TransportEventType"].parameters_set,n.data.tls_cipher=n.data.new||"was set",n.data.new&&(n.data.new="removed when converting to draft-01");else if("version_update"===n.name)n.name=w["TransportEventType"].parameters_set,n.data.quic_version=n.data.new||"was set",n.data.new&&(n.data.new="removed when converting to draft-01");else if("alpn_update"===n.name)n.name=w["TransportEventType"].parameters_set,n.data.alpn=n.data.new||"was set",n.data.new&&(n.data.new="removed when converting to draft-01");else if("metric_update"===n.name)n.name=w["RecoveryEventType"].metrics_updated;else if("datagram_sent"===n.name)n.name=w["TransportEventType"].datagrams_sent;else if("datagram_received"===n.name)n.name=w["TransportEventType"].datagrams_received;else if("spin_bit_update"===n.name)n.name=w["ConnectivityEventType"].spin_bit_updated;else if(void 0!==n.data.frames)for(const e of n.data.frames)void 0!==e.id&&(e.frame_type.indexOf("push")>=0?e.push_id=e.id:e.stream_id=e.id),void 0!==e.fields&&(e.headers=e.fields);else if("transport_parameters_update"===n.name){n.name=w["TransportEventType"].parameters_set;for(const e of n.data.parameters)n.data[e.name]=e.value;n.data.parameters=[]}"onertt"===n.data.packet_type?n.data.packet_type=w["PacketType"].onertt:"zerortt"===n.data.packet_type&&(n.data.packet_type=w["PacketType"].zerortt)}}static fromDraft00(e){const t=e;console.log("QlogLoader:fromDraft00 : ",t,t.traces);const n=new g;n.version=t.qlog_version,n.title=t.title||"",n.description=t.description||"";for(const a of t.traces){const e=new Array,t=a.event_fields.indexOf("group_id");if(a.event_fields&&t>=0){const i=new Map;for(const r of a.events){if(0===r.length||0===Object.keys(r).length)continue;let a=r[t];"string"!==typeof a&&(a=JSON.stringify(a));let o=i.get(a);o||(o=new x(n),o.title="Group "+a+" : ",i.set(a,o),e.push(o)),o.getEvents().push(r)}}else{const t=new x(n);e.push(t),t.setEvents(a.events);const i=a.events[a.events.length-1];0!==i.length&&0!==Object.keys(i).length||t.getEvents().splice(a.events.length-1,1)}for(const n of e){n.title+=a.title?a.title:"",n.description+=a.description?a.description:"",n.vantagePoint={},a.vantage_point&&(n.vantagePoint.name=a.vantage_point.name||"","SERVER"===a.vantage_point.type||"server"===a.vantage_point.type?n.vantagePoint.type=w["VantagePointType"].server:"CLIENT"===a.vantage_point.type||"client"===a.vantage_point.type?n.vantagePoint.type=w["VantagePointType"].client:"NETWORK"!==a.vantage_point.type&&"network"!==a.vantage_point.type||(n.vantagePoint.type=w["VantagePointType"].network,n.vantagePoint.flow=w["VantagePointType"].client)),n.vantagePoint.type||(n.vantagePoint.type=w["VantagePointType"].unknown,n.vantagePoint.flow=w["VantagePointType"].unknown,n.vantagePoint.name="No VantagePoint set"),n.eventFieldNames=a.event_fields,n.commonFields=a.common_fields,n.configuration=a.configuration||{},n.setEventParser(new P);for(const e of n.getEvents()){const t=n.parseEvent(e).data;if(t.frames)for(const e of t.frames)e.frame_type&&(e.frame_type=e.frame_type.toLowerCase());t.packet_type&&(t.packet_type=t.packet_type.toLowerCase(),t.packet_type=t.packet_type.replace("rtt","RTT"),t.type=t.packet_type)}C.fixPreviousInto01(n)}}return n}static fromPreSpec(e){const t=e;console.log("QlogLoader:fromPreSpec : ",t,t.connections);const n=new g;n.version=t.qlog_version,n.description=t.description||"";for(const a of t.connections){const e=new x(n);let t="no description";a.metadata&&("string"===typeof a.metadata?t=a.metadata:a.metadata.description&&(t=a.metadata.description)),a.vantagepoint&&(e.vantagePoint={},"SERVER"===a.vantagepoint||"server"===a.vantagepoint?e.vantagePoint.type=w["VantagePointType"].server:"CLIENT"===a.vantagepoint||"client"===a.vantagepoint?e.vantagePoint.type=w["VantagePointType"].client:"NETWORK"!==a.vantagepoint&&"network"!==a.vantagepoint||(e.vantagePoint.type=w["VantagePointType"].network,e.vantagePoint.flow=w["VantagePointType"].client)),e.title=t,e.description=t,e.eventFieldNames=a.fields,e.setEvents(a.events),e.setEventParser(new R)}return n}}class P{constructor(){this.timeTrackingMethod=u.ABSOLUTE_TIME,this.addTime=0,this.subtractTime=0,this.timeMultiplier=1,this._timeOffset=0,this.timeIndex=0,this.categoryIndex=1,this.nameIndex=2,this.dataIndex=3,this.categoryCommon="unknown",this.nameCommon="unknown"}get relativeTime(){return-1===this.timeIndex?0:parseFloat(this.currentEvent[this.timeIndex])*this.timeMultiplier-this.subtractTime+this._timeOffset}get absoluteTime(){return-1===this.timeIndex?0:parseFloat(this.currentEvent[this.timeIndex])*this.timeMultiplier+this.addTime+this._timeOffset}getAbsoluteStartTime(){return this.timeTrackingMethod===u.RELATIVE_TIME?this.addTime:this.timeTrackingMethod===u.ABSOLUTE_TIME?this.subtractTime:(console.error("QlogLoader: No proper startTime present in qlog file. This tool doesn't support delta_time yet!"),0)}get timeOffset(){return this._timeOffset}get category(){return-1===this.categoryIndex?this.categoryCommon:this.currentEvent[this.categoryIndex].toLowerCase()}get name(){return-1===this.nameIndex?this.nameCommon:this.currentEvent[this.nameIndex].toLowerCase()}set name(e){-1!==this.nameIndex&&(this.currentEvent[this.nameIndex]=e)}get data(){return-1===this.dataIndex?{}:this.currentEvent[this.dataIndex]}timeToMilliseconds(e){return parseFloat(e)*this.timeMultiplier}getTimeTrackingMethod(){return this.timeTrackingMethod}init(e){this.currentEvent=void 0,e.commonFields&&((e.commonFields.category||e.commonFields.CATEGORY)&&(this.categoryCommon=e.commonFields.category||e.commonFields.CATEGORY,this.categoryCommon=this.categoryCommon.toLowerCase()),(e.commonFields.event||e.commonFields.EVENT_TYPE)&&(this.nameCommon=e.commonFields.event||e.commonFields.EVENT_TYPE,this.nameCommon=this.nameCommon.toLowerCase()));let t=e.eventFieldNames.slice();if(t=t.map(e=>e.toLowerCase()),this.categoryIndex=t.indexOf("category"),this.nameIndex=t.indexOf("event_type"),-1===this.nameIndex&&(this.nameIndex=t.indexOf("event")),this.dataIndex=t.indexOf("data"),e.configuration&&e.configuration.time_units&&"us"===e.configuration.time_units&&(this.timeMultiplier=.001),this.timeIndex=t.indexOf("time"),-1===this.timeIndex)if(this.timeIndex=t.indexOf("relative_time"),-1===this.timeIndex)if(this.timeIndex=t.indexOf("delta_time"),-1===this.timeIndex)console.error("QlogLoader: No proper timestamp present in qlog file. Pick one of either time, relative_time or delta_time",e.eventFieldNames);else{this.timeTrackingMethod=u.ABSOLUTE_TIME;const t=e.getEvents();t&&0!==t.length?e.commonFields&&void 0!==e.commonFields.reference_time?(this.addTime=0,this.subtractTime=this.parseReferenceTime(e.commonFields.reference_time,this.timeMultiplier),t[0][this.timeIndex]+=this.subtractTime):(this.addTime=0,this.subtractTime=parseFloat(t[0][this.timeIndex])):console.error("QlogLoader: DELTA_TIME requires all events to be set before setEventParser is called... was not the case here!");let n=this.subtractTime;for(let e=1;e<t.length;++e)t[e][this.timeIndex]=parseFloat(t[e][this.timeIndex])+n,n=t[e][this.timeIndex]}else this.timeTrackingMethod=u.RELATIVE_TIME,e.commonFields&&void 0!==e.commonFields.reference_time?(this.addTime=this.parseReferenceTime(e.commonFields.reference_time,this.timeMultiplier),this.subtractTime=0):(console.error("QlogLoader: Using relative_time but no reference_time found in common_fields. Assuming 0.",e.eventFieldNames,e.commonFields),this.addTime=0,this.subtractTime=0);else this.timeTrackingMethod=u.ABSOLUTE_TIME,this.addTime=0,this.subtractTime=parseFloat(e.getEvents()[0][this.timeIndex]);e.configuration&&e.configuration.time_offset&&(this._timeOffset=parseFloat(e.configuration.time_offset)*this.timeMultiplier),this.addTime*=this.timeMultiplier,this.subtractTime*=this.timeMultiplier}setReferenceTime(e){this.addTime=e}load(e){return this.currentEvent=e,this}parseReferenceTime(e,t){return"string"===typeof e&&(e.indexOf(":")>=0||e.indexOf("-")>=0)?(console.warn("QlogLoader:parseReferenceTime: We think reference_time is not in 'milliseconds since epoch' as a number, but rather as a time string. That is not really supported, though we'll try to parse it here!",e),1===t?Date.parse(e):1e3*Date.parse(e)):parseFloat(e)}}class R{get relativeTime(){return parseFloat(this.currentEvent[0])}get absoluteTime(){return this.relativeTime}getAbsoluteStartTime(){return 0}get category(){return this.currentEvent[1]}get name(){return this.currentEvent[2]}set name(e){this.currentEvent[2]=e}get trigger(){return this.currentEvent[3]}get data(){return this.currentEvent[4]}get timeOffset(){return 0}init(e){this.currentEvent=void 0}timeToMilliseconds(e){return parseFloat(e)}getTimeTrackingMethod(){return u.RELATIVE_TIME}setReferenceTime(e){}load(e){return this.currentEvent=e,this}}(function(e){e["tcp"]="transport",e["tls"]="tls",e["http2"]="http2"})(f||(f={})),function(e){e["packet_sent"]="packet_sent",e["packet_received"]="packet_received"}(v||(v={})),function(e){e["record_created"]="record_created",e["record_parsed"]="record_parsed"}(y||(y={})),function(e){e["frame_created"]="frame_created",e["frame_parsed"]="frame_parsed"}(_||(_={})),function(e){e["ack"]="ack",e["flow_control"]="flow_control",e["flags"]="flags"}(T||(T={})),function(e){e["data"]="data",e["headers"]="headers",e["priority"]="priority",e["reset_stream"]="reset_stream",e["settings"]="settings",e["push_promise"]="push_promise",e["ping"]="ping",e["go_away"]="go_away",e["window_update"]="window_update",e["continuation"]="continuation",e["unknown"]="unknown",e["magic"]="magic"}(b||(b={})),function(e){e["sending"]="sending",e["receiving"]="receiving"}(S||(S={}));class I{static convert(e){console.log("TCPToQlog: converting file with "+e.length+" events");const t={qlog_version:"draft-02-wip",traces:new Array},n=new Map;for(const a of e){if(!a._source||!a._source.layers||!a._source.layers.ip&&!a._source.layers.ipv6||!a._source.layers.tcp)continue;let e=a._source.layers.ip,t="ip.src",i="ip.dst";e||(e=a._source.layers.ipv6,t="ipv6.src",i="ipv6.dst");const r=a._source.layers.tcp;let o=n.get(e[t]+":"+r["tcp.srcport"]),s=S.sending;o||(o=n.get(e[i]+":"+r["tcp.dstport"]),s=S.receiving),o||(s=S.sending,o={qlog:{vantage_point:{type:w["VantagePointType"].client},event_fields:["time","category","event","data"],common_fields:{protocol_type:"TCP_HTTP2"},events:new Array,title:e[t]+":"+r["tcp.srcport"]+" -> "+e[i]+":"+r["tcp.dstport"]},DEBUG_originalEntries:[],probable_url:void 0,TLSAppDataTrailerSize:void 0,TLSRecordsToBeAdjustedForTrailerSize:new Array,DEBUG_HTTPtotalSize:0,DEBUG_TLSpayloadSize:0,timestampTracker:new Map},o.timestampTracker.set(S.sending,{time:-1,seq:-1}),o.timestampTracker.set(S.receiving,{time:-1,seq:-1}),n.set(e[t]+":"+r["tcp.srcport"],o),console.log("Created new connection #",n.size,e[t]+":"+r["tcp.srcport"]," => ",e[i]+":"+r["tcp.dstport"])),this.addEntry(o,s,a._source.layers),o.DEBUG_originalEntries.push(a)}for(const a of n.values()){a.probable_url?a.qlog.title+=" => "+a.probable_url:a.qlog.title+=" => Unknown URL",a.TLSAppDataTrailerSize?a.qlog.title+=" @ "+a.TLSAppDataTrailerSize+" TLS trailer size":console.error("TCPToQlog: unable to estimate TLS trailer size from this trace... "+a.qlog.title),a.qlog.events.sort((e,t)=>{return e[0]-t[0]});let e=-1,n=-1;for(const t of a.qlog.events){const a=t;"packet_sent"===a[2]?a[3].header&&a[3].sequence_number&&(a[3].sequence_number<e&&console.error("BADLY ORDERED SEQ NRS send"),e=a[3].sequence_number):"packet_received"===a[2]&&a[3].header&&a[3].sequence_number&&(a[3].sequence_number<n&&console.error("BADLY ORDERED SEQ NRS recv"),n=a[3].sequence_number)}t.traces.push(a.qlog),a.DEBUG_HTTPtotalSize!==a.DEBUG_TLSpayloadSize&&console.error("HTTP doesn't fully fill TLS","TLS: ",a.DEBUG_TLSpayloadSize,"HTTP: ",a.DEBUG_HTTPtotalSize,a.DEBUG_TLSpayloadSize-a.DEBUG_HTTPtotalSize)}return console.warn("TCPToQlog: remember to add support for HTTP/2 padding to be fully compliant!"),console.log("TCPToQlog : done converting pcap",n.values()),t}static addEntry(e,t,n){let a=parseFloat(n.frame["frame.time_epoch"]);const i=parseInt(n.tcp["tcp.seq"],10);i<e.timestampTracker.get(t).seq&&console.error("UNORDERED SEQ NUMBERS",a," : ",i," < ",e.timestampTracker.get(t)),a<e.timestampTracker.get(t).time?i>e.timestampTracker.get(t).seq?(a=e.timestampTracker.get(t).time+1e-6,console.warn("Mismatched timestamps, but sequence numbers were correctly ordered: faking timestamp instead"),e.timestampTracker.set(t,{time:a,seq:i})):console.error("UNORDERED TIMESTAMPS",a," : ",i," < ",e.timestampTracker.get(t)):e.timestampTracker.set(t,{time:a,seq:i});{const i=n.tcp,r=new Array;r.push(a),r.push(f.tcp),t===S.sending?r.push(v.packet_sent):r.push(v.packet_received);const o={header:{packet_number:parseInt(n.frame["frame.number"],10),sequence_number:parseInt(i["tcp.seq"],10),payload_length:parseInt(i["tcp.len"],10),header_length:parseInt(i["tcp.hdr_len"],10),packet_size:parseInt(i["tcp.hdr_len"],10)+parseInt(i["tcp.len"],10)}};r.push(o),e.qlog.events.push(r)}let r=void 0,o=void 0;const s=new Array,c=new Array;if(n.tls&&"string"!==typeof n.tls){r=n.tls;const e=t=>{if(0!==Object.keys(t).length)if(t["tls.record"])if(Array.isArray(t["tls.record"]))for(const n of t["tls.record"])e(n);else s.push(t["tls.record"]);else if(t["tls.record.length"])s.push(t);else try{for(const n of t)e(n)}catch(a){console.error("TLS object was not iterable, skipping. Typically only if we have TLS Unknown Record!",t,n)}else console.warn("tcp2qlog: empty TLS record... ignoring",t,n)};if(r.length&&2===r.length?0===Object.keys(r[1]).length?e(r[0]):e(r):r.length&&r.length>2?(console.error("tcptoqlog: More than two TLS entries... what is happening?",r),e(r)):e(r),0===s.length)return void console.error("tcptoqlog: No tls.record... what is happening?",r)}if(n.http2&&"string"!==typeof n.http2){o=n.http2;const e=t=>{if(0!==Object.keys(t).length){if(t["http2.magic"]&&(t["http2.length"]="24",t["http2.type"]="magic"),t["http2.stream"])if(Array.isArray(t["http2.stream"]))for(const n of t["http2.stream"])e(n);else c.push(t["http2.stream"]);else if(t["http2.length"])c.push(t);else if("string"!==typeof t)try{for(const n of t)e(n)}catch(a){console.error("HTTP/2 object was not iterable, skipping. Haven't seen this before!",t,n)}}else console.warn("tcp2qlog: empty HTTP/2 frame... ignoring (expected if TLS record contains a small piece of the H2 frame. Look at the tls.segment.data array contents: 2nd entry should be +- 9 bytes)",n)};e(o)}if(r){{let e=0;for(const n of s)"23"===n["tls.record.content_type"]&&(e+=parseInt(n["tls.record.length"],10));let t=0;for(const n of c)t+=parseInt(n["http2.length"],10);Math.abs(e-t)>500&&console.warn("Weird inconsistencies between frame sizes",e,t,n)}for(const i of s){const l=new Array;l.push(a),l.push(f.tls),t===S.sending?l.push(y.record_created):l.push(y.record_parsed);let h="";i["tls.record.content_type"]&&(h=i["tls.record.content_type"]);let d="unknown";"23"===h?d="application":"22"===h?d="handshake":"21"===h?d="alert":"20"===h&&(d="change-cipherspec"),i["tls.record.length"]||console.error("no tls.record.length set... weird",i);const p=parseInt(i["tls.record.length"],10);let m=-1;i["tls.app_data"]&&(m=(i["tls.app_data"].length+1)/3,m!==p&&console.error("tcptoqlog: Record length is different from app_data length",p,m,i,r)),"application"===d&&-1===m&&console.error("tcptoqlog: TLS application record without app data... weird?",i,r);const g=p;let u=0;for(const e of c){const t=parseInt(e["http2.length"],10);u+=t+9}if("application"===d&&s.length===c.length&&g-u>0&&!n["tls.segments"]&&!r["tls.segment.data"]){const t=g-u;if(16!==t&&17!==t&&8!==t&&24!==t)console.error("TCPToQlog: TLS trailer size is not 16, 17, 8 or 24: potential error! TODO: actually check with negotiated cipher what is expected here!",t);else if(e.TLSAppDataTrailerSize)e.TLSAppDataTrailerSize!==g-u&&console.error("TCPToQlog: guesstimated TLS trailer size was inconsistent",e.TLSAppDataTrailerSize,"!=",g-u,g,u,r,o,n);else{e.TLSAppDataTrailerSize=t,console.log("TCPToQlog: TLS trailer size estimated",e.TLSAppDataTrailerSize,e.TLSRecordsToBeAdjustedForTrailerSize,n);for(const t of e.TLSRecordsToBeAdjustedForTrailerSize)t.header.trailer_length=e.TLSAppDataTrailerSize,t.header.payload_length=t.header.payload_length-t.header.trailer_length,t.header.payload_length<0&&console.error("TCPToQlog: adjusting for TLS trailer size lead to negative size...",t),e.DEBUG_TLSpayloadSize-=t.header.trailer_length;e.TLSRecordsToBeAdjustedForTrailerSize=new Array}}const v=e.TLSAppDataTrailerSize&&"application"===d?e.TLSAppDataTrailerSize:0,_=["tls.record.content_type","tls.record.opaque_type","tls.record.length","tls.record.version","tls.app_data","tls.handshake","tls.change_cipher_spec","tls.handshake.fragments","tls.alert_message","tls.reassembled_in","tls.handshake.reassembled_in"];for(const e of Object.keys(i))_.indexOf(e)<0&&(alert("Unknown field found in TLS record: "+e),console.error("Unknown field found in TLS record: ",e,_,n));const T={header:{content_type:d,header_length:5,trailer_length:v,payload_length:p-v,DEBUG_wiresharkFrameNumber:parseInt(n.frame["frame.number"],10)}};"application"!==d||e.TLSAppDataTrailerSize||e.TLSRecordsToBeAdjustedForTrailerSize.push(T),"application"===T.header.content_type&&(e.DEBUG_TLSpayloadSize+=p-v),0===T.header.payload_length&&console.error("TLS record without payload... seems weird",i),l.push(T),e.qlog.events.push(l)}}if(o){const n=[];for(const i of c){const r=new Array;r.push(a),r.push(f.http2),t===S.sending?r.push(_.frame_created):r.push(_.frame_parsed);const o=e=>{switch(e){case"0":return b.data;case"1":return b.headers;case"2":return b.priority;case"3":return b.reset_stream;case"4":return b.settings;case"5":return b.push_promise;case"6":return b.ping;case"7":return b.go_away;case"8":return b.window_update;case"9":return b.continuation;case"magic":return b.magic;default:return b.unknown}},s=parseInt(i["http2.length"],10);let c=0;"magic"!==i["http2.type"]&&(c=9);const l={frame_type:o(i["http2.type"])};switch(l.frame_type){case b.headers:l.headers=new Array;for(const t of i["http2.header"]){const n={name:t["http2.header.name"],value:t["http2.header.value"]};l.headers.push(n),":authority"===t["http2.header.name"]&&(e.probable_url?e.probable_url!==t["http2.header.value"]&&console.error("Trying to guess URL for connection, but getting conflicting values",t["http2.header.value"],e):e.probable_url=t["http2.header.value"])}i["http2.flags_tree"]&&i["http2.flags_tree"]["http2.flags.end_stream"]&&(l.stream_end="1"===i["http2.flags_tree"]["http2.flags.end_stream"]);break;case b.data:l.byte_length=s,i["http2.flags_tree"]&&i["http2.flags_tree"]["http2.flags.end_stream"]&&(l.stream_end="1"===i["http2.flags_tree"]["http2.flags.end_stream"]);break;default:break}const h={stream_id:"magic"!==i["http2.type"]?parseInt(i["http2.streamid"],10):-1,payload_length:s,header_length:c,frame:l};n.push(s+c),e.DEBUG_HTTPtotalSize+=c+s,r.push(h),e.qlog.events.push(r)}}}}var G=n("3667"),O=n.n(G);class F{static parseQlogText(e,t=!0){if(!t){let t=void 0,n=!1,a=void 0;const i=O()().on("node:*",(e,t,n)=>{return a||(a=i.root()),e}).done(e=>{t=e,n=!0}).fail(e=>{console.error("StreamingJSONParser: There were errors in your qlog/JSON file. It was parsed with the fallback parser up until the point of the error.",e,i.root());let n=0,r=0;const o=i.root();a&&a.traces&&a.traces.length&&a.traces.length>0&&a.traces[0].events&&a.traces[0].events.length>0&&(n=a.traces[0].events.length),o&&o.traces&&o.traces.length&&o.traces.length>0&&o.traces[0].events&&o.traces[0].events.length>0&&(r=o.traces[0].events.length),t=r>=n?o:a});if(i.emit("data",e),n)return t;if(t||(t=i.root()),t.traces)for(const e of t.traces)if(e.event_fields){const t=e.event_fields.length;if(e.events){const n=e.events.length;for(let a=n-1;a>=0;--a)if(e.events[a].length!==t){const t=e.events.pop();console.error("StreamingJSONParser: incomplete event found, ignored in output.",t)}}}return t}try{return JSON.parse(e)}catch(n){return console.error("StreamingJSONParser:parse : JSON.parse returned an error, trying again with oboe.js fallback parser! Error was: : ",n),F.parseQlogText(e,!1)}}static parseJSONWithDeduplication(e){const t={JSONroot:void 0,currentDepth:0},n=O()().on("node:*",(e,n,a)=>{return F.onFieldParsed(t,e,n)}).done(e=>{console.log("Result from deduped parser (which we will discard) :",e)}).fail(e=>{console.log("Oboe failed, ignoring",e)});return n.emit("data",e),t.JSONroot}static onFieldParsed(e,t,n){e.JSONroot||(console.log("StreamingJSONparser:onFieldParsed : deciding on root for JSON",t,n,e.JSONroot),0===n[0]?e.JSONroot=[]:e.JSONroot={});const a=e.currentDepth;if(e.currentDepth=n.length,e.currentDepth<a)return;const i=a-2;let r=e.JSONroot;for(let s=0;s<=i;++s){const e=n[s],t="number"===typeof n[s+1];r=Array.isArray(r[e])?t?r[e]:r[e][r[e].length-1]:r[e]}const o=Math.max(0,i+1);if(!(o>=n.length)){for(let e=o;e<n.length;++e){const a=e===n.length-1,i=n[e],o=!a&&"number"===typeof n[e+1];if(Array.isArray(r[i]))a?r[i].push(t):o?r[i].push([]):r[i].push({}),r=r[i][r[i].length-1];else if(r.hasOwnProperty(i)){const e=r[i];r[i]=[],r[i].push(e),a?r[i].push(t):r[i].push({}),r=r[i][r[i].length-1]}else r[i]=a?t:o?[]:{},r=r[i]}return!r&&t&&console.error("StreamingJSONParser: WEIRD STUFF",r,n,e.JSONroot),t}console.error("StreamingJSONParser: Path isn't long enough to encompass new entry, shouldn't happen!",o,n)}}let D=class extends h["d"]{constructor(e){super(e),this.grouplist=new Array,this.outstandingRequests=0}get groups(){return this.grouplist}get outstandingRequestCount(){return this.outstandingRequests}adjustOutstandingRequestCount(e){this.outstandingRequests+=e}addGroup(e){console.log("ConnectionStore Mutation for adding group",e),this.grouplist.push(e)}deleteGroup(e){const t=this.grouplist.indexOf(e);-1!==t&&this.grouplist.splice(t,1)}async addGroupFromQlogFile({fileContentsJSON:e,fileInfo:t}){const n=C.fromJSON(e);void 0!==n?(n.filename=t.filename,n.URL=t.URL,n.URLshort=t.URLshort,this.context.commit("addGroup",n)):(console.error("ConnectionStore:addGroupFromQlogFile : Qlog file could not be parsed!",e,t),a["default"].notify({group:"default",title:"ERROR parsing qlog file "+t.filename,type:"error",duration:6e3,text:"File was successfully loaded but could not be parsed.<br/>Make sure you have a well-formed qlog file.<br/>View the devtools JavaScript console for more information."}))}async DEBUG_LoadRandomFile(e){const t=new g;t.description=e;const n=Math.round(5*Math.random())+1;for(let a=0;a<n;++a){const e=new x(t);e.title="Connection "+a;const n=new Array,i=Math.ceil(3*Math.random());for(let t=0;t<i;++t)n.push([t,"testcat","Connection #"+a+" - Event #"+t,"dummytrigger",{dummy:!0}]);e.setEventParser(new R),e.setEvents(n)}return t}async loadFilesFromServer(e){if(console.log("ConnectionStore:LoadFilesFromServer ",e),0===Object.keys(e).length)return void console.log("ConnectionSTore:LoadFilesFromServer : no URL query parameters present, doing nothing. ",e);let t="",n=void 0;if(e.file?(t=e.file,n=e.file):e.list?t=e.list:e.file1&&(t=e.file1+" etc."),""===t)return void console.log("ConnectionSTore:LoadFilesFromServer : no file-loading URL query parameters present, doing nothing. ",e);a["default"].notify({group:"default",title:"Loading file(s) via URL",text:"Loading files via URL "+t+".<br/>The backend server downloads the files, possibly transforms them into qlog, then sends them back. This can take a while."});let i=null,r=null;try{if(this.context.commit("adjustOutstandingRequestCount",1),t.indexOf(".qlog")>=0)if(i=await fetch(t),i.ok){const e=await i.text();console.log("ConnectionStore:loadFilesFromServer: successfully loaded file directly: ",t,i,e),r=F.parseQlogText(e)}else console.warn("ConnectionStore:loadFilesFromServer : tried to load .qlog from remote server directly but got probable CORS error. Trying again via backend server.",e,i)}catch(o){this.context.commit("adjustOutstandingRequestCount",-1),i=null,console.warn("ConnectionStore:loadFilesFromServer : tried to load .qlog from remote server directly but got probable CORS error. Trying again via backend server.",e,o)}try{if(null===i){let t="/loadfiles";if(window.location.toString().indexOf("localhost:8080")>=0?t="https://localhost/loadfiles":window.location.toString().indexOf(":8080")>=0&&(t="https://qvis.edm.uhasselt.be/loadfiles"),this.context.commit("adjustOutstandingRequestCount",1),i=await m.a.get(t,{params:e}),this.context.commit("adjustOutstandingRequestCount",-1),null!==i)if(i.qlog_version)r=F.parseQlogText(i);else if(!i.error&&!i.data.error&&(i.data.qlog||i.data)){let e=i.data;if(i.data.qlog&&(e=i.data.qlog),r="object"===typeof e?e:F.parseQlogText(e),r.traces&&r.traces.length>0&&r.traces[0].error_description)throw Error("Trace had an error: "+JSON.stringify(r))}}if(null!==r&&void 0!==r.qlog_version){let e=t;e.length>50&&(e=e.substr(0,25)+"..."+e.substr(e.length-26,e.length));const i="Loaded via URL ("+e+")",o={filename:i};n&&(o.URL=n,n.length>50?o.URLshort=n.substr(0,25)+"..."+n.substr(n.lastIndexOf("/"),n.length):o.URLshort=n),this.context.dispatch("addGroupFromQlogFile",{fileContentsJSON:r,fileInfo:o}),a["default"].notify({group:"default",title:"Loaded files via URL",type:"success",text:"The loaded files are now available for visualization "+t+".<br/>Use the menu above to switch views."})}else console.error("ConnectionStore:LoadFilesFromServer : ERROR : trace not added to qvis! : ",e,i),a["default"].notify({group:"default",title:"ERROR loading URL "+t,type:"error",duration:6e3,text:"File(s) could not be loaded from "+t+".<br/>View the devtools JavaScript console for more information."})}catch(o){this.context.commit("adjustOutstandingRequestCount",-1),console.error("ConnectionStore:LoadFilesFromServer : ERROR : trace not added to qvis! : ",o,e),a["default"].notify({group:"default",title:"ERROR loading URL "+t,type:"error",duration:6e3,text:"File(s) could not be loaded from "+t+".<br/>View the devtools JavaScript console for more information."})}}loadExamplesForDemo(){this.loadQlogDirectlyFromURL({url:"standalone_data/draft-01/new_cid.qlog",filename:"DEMO_new_cid.qlog (<1MB)"}),this.loadQlogDirectlyFromURL({url:"standalone_data/draft-01/spin_bit.qlog",filename:"DEMO_spin_bit.qlog (<1MB)"}),this.loadQlogDirectlyFromURL({url:"standalone_data/draft-01/parallel_10_50KB_f5.qlog",filename:"DEMO_10_parallel_streams.qlog (<1MB)"}),this.loadQlogDirectlyFromURL({url:"standalone_data/draft-01/doublevantage_100ms.qlog",filename:"DEMO_double_vantagepoint.qlog (3.1MB)"}),this.loadQlogDirectlyFromURL({url:"standalone_data/draft-00/quictrace_example_github.qlog",filename:"DEMO_quictrace_example.qlog (3.7MB)"})}loadQlogDirectlyFromURL({url:e,filename:t}){a["default"].notify({group:"default",title:"Loading qlog file directly",text:'Loading qlog file "'+t+'" from URL '+e+". Large files can take a while to load."}),this.context.commit("adjustOutstandingRequestCount",1),m.a.get(e,{responseType:"text",transformResponse:void 0}).then(n=>{this.context.commit("adjustOutstandingRequestCount",-1);const i=n.data;let r=F.parseQlogText(i);if(r&&!r.error&&!r.error_description&&r.qlog_version)this.context.dispatch("addGroupFromQlogFile",{fileContentsJSON:r,fileInfo:{filename:t}}),a["default"].notify({group:"default",title:"Loaded "+t,type:"success",text:"This file is now available for visualization, use the menu above to switch views."});else if(r.length>0&&r[0]._source){r=F.parseJSONWithDeduplication(i);const e=I.convert(r);this.context.dispatch("addGroupFromQlogFile",{fileContentsJSON:e,fileInfo:{filename:t}}),a["default"].notify({group:"default",title:"Loaded "+t,type:"success",text:"This file is now available for visualization, use the menu above to switch views."})}else console.error("FileManagerContainer:loadDirectlyFromURL: error downloading file : ",e,n),a["default"].notify({group:"default",title:"ERROR loading "+t,type:"error",duration:6e3,text:"This file could not be loaded from "+e+".<br/>View the devtools JavaScript console for more information."})})}};Object(l["a"])([h["c"]],D.prototype,"adjustOutstandingRequestCount",null),Object(l["a"])([h["c"]],D.prototype,"addGroup",null),Object(l["a"])([h["c"]],D.prototype,"deleteGroup",null),Object(l["a"])([h["a"]],D.prototype,"addGroupFromQlogFile",null),Object(l["a"])([Object(h["a"])({commit:"addGroup"})],D.prototype,"DEBUG_LoadRandomFile",null),Object(l["a"])([h["a"]],D.prototype,"loadFilesFromServer",null),Object(l["a"])([h["a"]],D.prototype,"loadExamplesForDemo",null),Object(l["a"])([h["a"]],D.prototype,"loadQlogDirectlyFromURL",null),D=Object(l["a"])([Object(h["b"])({name:"connections"})],D);var A=D;let L=class extends d["c"]{constructor(){super(...arguments),this.store=Object(h["e"])(A,this.$store)}created(){}mounted(){this.store.loadFilesFromServer(this.$route.query)}};L=Object(l["a"])([d["a"]],L);var N=L,M=N,q=(n("034f"),n("2877")),U=Object(q["a"])(M,s,c,!1,null,null,null),z=U.exports,H=n("8c4f"),j=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("b-container",{attrs:{id:"MainMenu",fluid:""}},[n("b-row",[n("b-col",{staticClass:"align-middle",attrs:{cols:"1",md:"auto"}},[n("h3",{staticStyle:{width:"290px"}},[e._v("qvis")])]),n("b-col",[n("b-nav",{attrs:{tabs:"",align:"center"}},[n("b-nav-item",{staticClass:"files-link",attrs:{to:"/files",active:this.$route.fullPath.indexOf("/files")>=0||""===e.$route.fullPath}},[e._v("\n                    Manage files\n                ")]),n("b-nav-item",{staticClass:"sequence-link",attrs:{to:"/sequence",active:e.$route.fullPath.indexOf("/sequence")>=0}},[e._v("\n                    Sequence\n                ")]),n("b-nav-item",{staticClass:"congestion-link",attrs:{to:"/congestion",active:e.$route.fullPath.indexOf("/congestion")>=0}},[e._v("\n                    Congestion\n                ")]),n("b-nav-item",{staticClass:"multiplexing-link",attrs:{to:"/multiplexing",active:e.$route.fullPath.indexOf("/multiplexing")>=0}},[e._v("\n                    Multiplexing\n                ")]),n("b-nav-item",{staticClass:"packetization-link",attrs:{to:"/packetization",active:e.$route.fullPath.indexOf("/packetization")>=0}},[e._v("\n                    Packetization\n                ")]),n("b-nav-item",{staticClass:"stats-link",attrs:{to:"/stats",active:e.$route.fullPath.indexOf("/stats")>=0}},[e._v("\n                    qlog stats\n                ")])],1)],1),n("b-col",{attrs:{cols:"1",md:"auto"}},[n("b-button",{staticStyle:{"margin-right":"5px"},attrs:{variant:"success",href:"https://github.com/quiclog/qvis/issues/new?template=feature_request.md&title=Feature+request",target:"_blank"}},[e._v("Request feature")]),n("b-button",{attrs:{variant:"danger",href:"https://github.com/quiclog/qvis/issues/new?template=bug-report-in-live-version.md&title=Bug+in+live+version",target:"_blank"}},[e._v("Report issue")])],1)],1)],1)},Q=[];let V=class extends d["c"]{mounted(){console.log(this.$route)}};V=Object(l["a"])([Object(d["a"])({})],V);var B=V,W=B,Y=(n("e354"),Object(q["a"])(W,j,Q,!1,null,"7d6c59e9",null)),X=Y.exports,$=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"home"},[n("HelloWorld",{attrs:{msg:"This is the VUE debugger to test reactive data coupling"}}),n("b-button",{on:{click:function(t){return e.AddRandomConnection()}}},[e._v("Add new random ConnectionGroup")]),e._v(" | \n    "),n("b-button",{on:{click:function(t){return e.DeleteFirstConnection()}}},[e._v("Delete First")]),e._v(" | \n    "),n("b-button",{on:{click:function(t){return e.ChangeConnectionName()}}},[e._v("Change Connection Name")]),e._v(" | \n    "),n("b-button",{on:{click:function(t){return e.ChangeEventName()}}},[e._v("Change Event Name")]),e._v(" | \n    "),n("b-button",{on:{click:function(t){return e.RemoveEvent()}}},[e._v("RemoveEvent")]),e._l(e.groups,(function(t){return n("div",{key:t.description},[e._v("\n        "+e._s(t.description)+"\n    ")])})),e._l(e.connections,(function(t,a){return n("div",{key:a},e._l(t.getEvents(),(function(a,i){return n("div",{key:i},[e._v("\n            - Event: ROBIN : "+e._s(t.title)+" : "+e._s(t.parseEvent(a).name)+"\n        ")])})),0)}))],2)},J=[],K=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"hello"},[n("h1",[e._v(e._s(e.msg))])])},Z=[];let ee=class extends d["c"]{};Object(l["a"])([Object(d["b"])()],ee.prototype,"msg",void 0),ee=Object(l["a"])([d["a"]],ee);var te=ee,ne=te,ae=Object(q["a"])(ne,K,Z,!1,null,null,null),ie=ae.exports;let re=class extends d["c"]{constructor(){super(...arguments),this.store=Object(h["e"])(A,this.$store)}get groups(){return this.store.groups}get connections(){return this.store.groups.length>0?this.store.groups[this.store.groups.length-1].getConnections():void 0}created(){this.store.groups.length<=1&&(this.AddRandomConnection(),this.AddRandomConnection(),this.AddRandomConnection())}AddRandomConnection(){const e="RandomConnectionGroup "+Math.round(100*Math.random());this.store.DEBUG_LoadRandomFile(e).then(e=>{console.log("ConnectionGroup added. This is called AFTER the mutation has been committed to the store!",e)})}DeleteFirstConnection(){this.store.deleteGroup(this.groups[0])}ChangeEventName(){this.connections[0].getEvents()[0][2]="Event was changed",console.log("Event name was changed, but SHOULD NOT reflect in UI since events are no longer reactive!",this.connections[0])}ChangeConnectionName(){this.connections[0].title="Connection name was changed",console.log("Connection name was changed",this.connections[0])}RemoveEvent(){const e=this.connections[0].getEvents();e.splice(e.length-1,1)}};re=Object(l["a"])([Object(d["a"])({components:{HelloWorld:ie}})],re);var oe,se,ce,le=re,he=le,de=Object(q["a"])(he,$,J,!1,null,null,null),pe=de.exports,me=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("FileManagerContainer")],1)},ge=[],ue=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"home"},[n("h1",[e._v("Welcome to qvis v0.1, the QUIC and HTTP/3 visualization toolsuite!")]),n("p",[e._v("To be able to visualize something, you need to load some data. We have several options for that:")]),n("b-container",{staticClass:"table-striped",attrs:{id:"FileManagerContainer",fluid:""}},[n("b-row",{staticClass:"fileOptionContainer"},[n("b-col",{attrs:{cols:"1",md:"auto"}},[n("h3",[e._v("Option 1")])]),n("b-col",[n("h3",[e._v("Load a file by URL")]),n("div",{staticStyle:{margin:"10px 0px"}},[n("form",[n("b-row",[n("b-col",[n("b-form-input",{attrs:{id:"urlInput",type:"text",placeholder:"https://www.example.com/output.qlog"},model:{value:e.urlToLoad,callback:function(t){e.urlToLoad=t},expression:"urlToLoad"}}),e.urlIsPcap?n("p",{staticStyle:{"margin-top":"10px"}},[e._v("For .pcap files, you also need to specify a .keys file so it can be decrypted.")]):e._e(),e.urlIsPcap?n("b-form-input",{attrs:{id:"secretsInput",type:"text",placeholder:"https://www.example.com/secrets.keys"},model:{value:e.secretsToLoad,callback:function(t){e.secretsToLoad=t},expression:"secretsToLoad"}}):e._e()],1),n("b-col",{attrs:{cols:"1",md:"auto"}},[n("b-button",{attrs:{disabled:""===this.urlToLoad,variant:"primary"},on:{click:function(t){return e.loadURL()}}},[e._v("Fetch")])],1)],1)],1)]),n("div",[n("p",{staticStyle:{"margin-top":"5px"}},[e._v("\n                    You can load .qlog, .pcap (alongside separate .keys) and .pcapng (with embedded keys) files."),n("br"),e._v("\n                    You can also load a .json file that lists several other files to be fetched (for the format, see "),n("a",{attrs:{href:"https://github.com/quiclog/pcap2qlog#options"}},[e._v("the pcap2qlog documentation")]),e._v(". Or try "),n("a",{attrs:{href:"https://quic-tracker.info.ucl.ac.be/traces/20190820/list/quant.eggert.org:4433?.json"}},[e._v("an example")]),e._v(")."),n("br"),n("br"),e._v("\n                    If you're looking for inspiration, "),n("a",{attrs:{href:"https://quant.eggert.org/",target:"_blank"}},[e._v("quant")]),e._v(" has public qlogs, as does "),n("a",{attrs:{href:"https://quic.aiortc.org/logs",target:"_blank"}},[e._v("aioquic")]),e._v("."),n("br"),n("a",{attrs:{href:"https://quic-tracker.info.ucl.ac.be"}},[e._v("QUIC Tracker")]),e._v(" provides .pcap files for all its tests and has a convenient integration with qvis from its UI. "),n("br"),e._v("\n                    Many of the tests in the "),n("a",{attrs:{href:"https://interop.seemann.io/"}},[e._v("QUIC Interop Runner")]),e._v(" also include .qlog and .pcap output.\n                ")])])])],1),n("b-row",{staticClass:"fileOptionContainer"},[n("b-col",{attrs:{cols:"1",md:"auto"}},[n("h3",[e._v("Option 2")])]),n("b-col",[n("h3",[e._v("Upload a file")]),n("div",{staticStyle:{margin:"10px 0px"}},[n("form",[n("b-row",[n("b-col",[n("b-form-file",{staticClass:"text-nowrap text-truncate",attrs:{id:"fileUpload",multiple:"",state:Boolean(e.filesToUpload.length>0),placeholder:"Choose files or drop them here...","drop-placeholder":"Drop files here...",accept:".qlog,.json,.netlog"},model:{value:e.filesToUpload,callback:function(t){e.filesToUpload=t},expression:"filesToUpload"}}),e.uploadIsPcap?n("p",{staticStyle:{"margin-top":"10px"}},[e._v("For .pcap files, you also need to upload a .keys file so it can be decrypted. We currently do not yet support decrypted pcaps or pcapng files with embedded keys.")]):e._e(),e.uploadIsPcap?n("b-form-file",{attrs:{id:"secretsUpload",state:Boolean(e.secretsToUpload),placeholder:"Choose a .keys file or drop it here...","drop-placeholder":"Drop .keys file here...",accept:".keys"},model:{value:e.secretsToUpload,callback:function(t){e.secretsToUpload=t},expression:"secretsToUpload"}}):e._e()],1),n("b-col",{attrs:{cols:"1",md:"auto"}},[n("b-button",{attrs:{disabled:0===e.filesToUpload.length,variant:"primary"},on:{click:function(t){return e.uploadFile()}}},[e._v("Import")])],1)],1)],1)]),n("div",[n("p",[e._v("\n                    Upload currently supports .qlog, .json, and "),n("a",{attrs:{href:"https://www.chromium.org/for-testers/providing-network-details"}},[e._v(".netlog")]),e._v(" files. No data is transfered to the server."),n("br"),e._v("\n                    Eventually we will also support .pcap, .pcapng and .qtr files."),n("br"),n("span",{staticStyle:{"font-size":"12px"}},[e._v("\n                        Note: Chrome netlog must be explicitly given the .netlog extension before uploading to qvis.\n                    ")])])])])],1),n("b-row",{staticClass:"fileOptionContainer"},[n("b-col",{attrs:{cols:"1",md:"auto"}},[n("h3",[e._v("Option 3")])]),n("b-col",[n("h3",[e._v("Load some premade demo files")]),n("div",{staticStyle:{margin:"10px 0px"}},[n("form",[n("b-button",{attrs:{variant:"primary"},on:{click:function(t){return e.loadExamples()}}},[e._v("Load example .qlog files")])],1)]),n("div",[n("p",[e._v("\n                    This will load a few example files that you can visualize to get an idea of what's possible."),n("br")])])])],1),n("b-row",{staticClass:"fileOptionContainer"},[n("b-col",{attrs:{cols:"1",md:"auto"}},[n("h3",[e._v("Option 4")])]),n("b-col",[n("h3",[e._v("Load a massive demo file")]),n("div",{staticStyle:{margin:"10px 0px"}},[n("form",[n("b-button",{attrs:{variant:"primary"},on:{click:function(t){return e.loadMassiveExample()}}},[e._v("Load 31MB .qlog file")])],1)]),n("div",[n("p",[e._v("\n                    This will load a single qlog file representing a 100MB download. Use this to see how well qvis visualizations perform on larger traces."),n("br")])])])],1),n("b-row",{staticClass:"fileOptionContainer"},[n("b-col",{attrs:{cols:"1",md:"auto"}},[n("h3",[e._v("Option 5")])]),n("b-col",[n("h3",[e._v("Load a file by URL parameter")]),n("div",{staticStyle:{margin:"10px 0px"}},[n("p",[e._v("\n                    You can pass files you want to load via URL parameters to the qvis page."),n("br"),e._v("\n                    This method supports the same formats as Option 1."),n("br"),n("br"),e._v("\n\n                    Format 1: "),n("a",{attrs:{href:"https://qvis.edm.uhasselt.be/#?list=x.json"}},[e._v("?list=x.json")]),n("br"),e._v("\n                    Format 2: "),n("a",{attrs:{href:"https://qvis.edm.uhasselt.be/#?file=x.qlog"}},[e._v("?file=x.qlog")]),n("br"),e._v("\n                    Format 3: "),n("a",{attrs:{href:"https://qvis.edm.uhasselt.be/#?file=x.pcap&secrets=x.keys"}},[e._v("?file=x.pcap&secrets=x.keys")]),n("br"),e._v("\n                    Format 4: "),n("a",{attrs:{href:"https://qvis.edm.uhasselt.be/#?file1=x.qlog&file2=y.qlog&file3=z.qlog"}},[e._v("?file1=x.qlog&file2=y.qlog&file3=z.qlog")]),n("br"),e._v("\n                    Format 5: "),n("a",{attrs:{href:"https://qvis.edm.uhasselt.be/#?file1=x.qlog&secrets1=x.keys&file2=y.qlog&secrets2=y.keys"}},[e._v("?file1=x.qlog&secrets1=x.keys&file2=y.qlog&secrets2=y.keys")]),n("br")])])])],1)],1)],1)},fe=[];function ve(e){const t=new Map;return Object.entries(e).forEach(e=>{const n=e[1];t.set(n,e[0])}),t}function ye(e,t,n){const a=new Array;if(0===n.length)return[[t,e]];{n.sort((e,t)=>e-t),a.push([t,n[0]-1]);let i=0;while(i<n.length-1){if(n[i+1]!==n[i]+1){const e=n[i]+1,t=n[i+1]-1;a.push([e,t])}i+=1}return a.push([n[i]+1,e]),a}}(function(e){e["initial"]="ENCRYPTION_INITIAL",e["handshake"]="ENCRYPTION_HANDSHAKE",e["zerortt"]="ENCRYPTION_ZERO_RTT",e["onertt"]="ENCRYPTION_FORWARD_SECURE"})(oe||(oe={})),function(e){e["initial"]="INITIAL",e["handshake"]="HANDSHAKE",e["zerortt"]="ZERO_RTT_PROTECTED",e["version_negotiation"]="VERSION_NEGOTIATION",e["retry"]="RETRY",e["invalid"]="INVALID_PACKET_TYPE"}(se||(se={}));class _e{constructor(e,t,n){this.title=`${e.host}-${e.connection_id}`,this.session=e,this.sessionId=t,this.startTime=n,this.qlogEvents=new Array,this.txQUICFrames=new Array,this.rxQUICFrames=new Array,this.rxPacket=void 0}pushFrame(e,t){e.indexOf("SENT")>=0?this.txQUICFrames.push(t):this.rxQUICFrames.push(t)}pushH3Frame(e,t,n){n.push(w["EventCategory"].http),e.indexOf("SENT")>=0?n.push(w["HTTP3EventType"].frame_created):n.push(w["HTTP3EventType"].frame_parsed),n.push(t),this.qlogEvents.push(n)}}class Te{static convert(e){console.log("NetlogToQlog: converting file with "+e.events.length+" events");const t=e.constants,n=e.events,a=(t.timeTickOffset,ve(t.logEventTypes)),i=ve(t.logSourceType),r=ve(t.logEventPhase),o=new Map;for(const l of n){const e=i.get(l.source.type);if(void 0===e){console.error("netlog2qlog:convert : unknown source type!",l,e);continue}if("QUIC_SESSION"!==e)continue;const t=l.source.id,n=a.get(l.type);if(void 0===n){console.error("netlog2qlog:convert : unknown event type!",l,n);continue}const s=r.get(l.phase);if(void 0===s){console.error("netlog2qlog:convert : unknown event phase!",l,s);continue}const c=l.params;let h=void 0;if(o.has(t))h=o.get(t);else{"QUIC_SESSION"!==n&&console.warn("netlogtoqlog:convert : new connection found, but first event was not QUIC_SESSION! Not sure this will work...",l,n,e,o),"PHASE_BEGIN"!==s&&console.warn("netlogtoqlog:convert : connection starting in phase other than PHASE_BEGIN! Not sure this will work...",l,n,s);const a=c;h=new _e(a,t,+l.time),o.set(t,h)}if(void 0===h){console.error("netlog2qlog:convert : could not match event to connection",l,n,t);continue}const d=+l.time-h.startTime,p=new Array;switch(p.push(d),n){case"QUIC_SESSION":continue;case"QUIC_SESSION_TRANSPORT_PARAMETERS_SENT":{const e=c.quic_transport_parameters.split(" ").slice(1),t={owner:"local"};for(let n=0;n<e.length;n+=2){const a=e[n],i=e[n+1];t[a]=i}p.push(w["EventCategory"].transport),p.push(w["TransportEventType"].parameters_set),p.push(t),h.qlogEvents.push(p);break}case"QUIC_SESSION_CRYPTO_FRAME_SENT":case"QUIC_SESSION_CRYPTO_FRAME_RECEIVED":{const e=c,t={frame_type:w["QUICFrameTypeName"].crypto,offset:e.offset.toString(),length:e.data_length.toString()};h.pushFrame(n,t);break}case"QUIC_SESSION_PADDING_FRAME_SENT":case"QUIC_SESSION_PADDING_FRAME_RECEIVED":{const e={frame_type:w["QUICFrameTypeName"].padding};h.pushFrame(n,e);break}case"QUIC_SESSION_PING_FRAME_SENT":case"QUIC_SESSION_PING_FRAME_RECEIVED":{const e={frame_type:w["QUICFrameTypeName"].ping};h.pushFrame(n,e);break}case"QUIC_SESSION_STREAM_FRAME_SENT":case"QUIC_SESSION_STREAM_FRAME_RECEIVED":{const e=c,t={frame_type:w["QUICFrameTypeName"].stream,stream_id:e.stream_id.toString(),offset:e.offset.toString(),length:e.length.toString(),fin:e.fin};h.pushFrame(n,t);break}case"QUIC_SESSION_ACK_FRAME_SENT":case"QUIC_SESSION_ACK_FRAME_RECEIVED":{const e=c,t=ye(e.largest_observed,e.smallest_observed,e.missing_packets),a={frame_type:w["QUICFrameTypeName"].ack,acked_ranges:t.map(([e,t])=>{return[e.toString(),t.toString()]})};h.pushFrame(n,a);break}case"QUIC_SESSION_WINDOW_UPDATE_FRAME_SENT":case"QUIC_SESSION_WINDOW_UPDATE_FRAME_RECEIVED":{const e=c;if(-1===e.stream_id){const t={frame_type:w["QUICFrameTypeName"].max_data,maximum:e.byte_offset.toString()};h.pushFrame(n,t)}else{const t={frame_type:w["QUICFrameTypeName"].max_stream_data,stream_id:e.stream_id.toString(),maximum:e.byte_offset.toString()};h.pushFrame(n,t)}break}case"QUIC_SESSION_RST_STREAM_FRAME_SENT":case"QUIC_SESSION_RST_STREAM_FRAME_RECEIVED":{const e=c,t={frame_type:w["QUICFrameTypeName"].reset_stream,stream_id:e.stream_id.toString(),error_code:e.quic_rst_stream_error,final_size:e.offset.toString()};h.pushFrame(n,t);break}case"QUIC_SESSION_STOP_SENDING_FRAME_SENT":case"QUIC_SESSION_STOP_SENDING_FRAME_RECEIVED":{const e=c,t={frame_type:w["QUICFrameTypeName"].stop_sending,stream_id:e.stream_id.toString(),error_code:e.application_error_code};h.pushFrame(n,t);break}case"QUIC_SESSION_CRYPTO_HANDSHAKE_MESSAGE_SENT":case"QUIC_SESSION_CRYPTO_HANDSHAKE_MESSAGE_RECEIVED":break;case"QUIC_SESSION_CONNECTION_CLOSE_FRAME_SENT":{const e=c,t={frame_type:w["QUICFrameTypeName"].connection_close,error_space:w["ErrorSpace"].transport_error,error_code:e.quic_error,raw_error_code:e.quic_error,reason:e.details};h.txQUICFrames.push(t);break}case"QUIC_SESSION_PACKET_SENT":{const e=c,t=(()=>{switch(e.encryption_level){case oe.handshake:return w["PacketType"].handshake;case oe.initial:return w["PacketType"].initial;case oe.zerortt:return w["PacketType"].zerortt;case oe.onertt:return w["PacketType"].onertt;default:return console.error("netlog2qlog:convert: unknown packet type sent",e.encryption_level),w["PacketType"].unknown}})(),n=new Array;h.txQUICFrames.forEach(e=>n.push(Object.assign({},e))),p.push(w["EventCategory"].transport),p.push(w["TransportEventType"].packet_sent),p.push({packet_type:t,header:{packet_number:e.packet_number.toString(),packet_size:e.size},frames:n}),h.qlogEvents.push(p),h.txQUICFrames.length=0;break}case"QUIC_SESSION_COALESCED_PACKET_SENT":break;case"QUIC_SESSION_PACKET_RECEIVED":{const e=c,t={packet_type:w["PacketType"].unknown,header:{packet_number:"",packet_size:e.size},is_coalesced:!1};if(p.push(w["EventCategory"].transport),p.push(w["TransportEventType"].packet_received),p.push(t),h.qlogEvents.push(p),void 0!==h.rxPacket){const e=new Array;h.rxQUICFrames.forEach(t=>e.push(Object.assign({},t))),h.rxPacket.frames=e}h.rxPacket=t,h.rxQUICFrames.length=0;break}case"QUIC_SESSION_UNAUTHENTICATED_PACKET_HEADER_RECEIVED":{const e=c,t=(()=>{switch(e.long_header_type){case se.handshake:return w["PacketType"].handshake;case se.initial:return w["PacketType"].initial;case se.zerortt:return w["PacketType"].zerortt;case se.retry:return w["PacketType"].retry;case se.version_negotiation:return w["PacketType"].version_negotiation;case se.invalid:return w["PacketType"].unknown;default:return w["PacketType"].onertt}})();void 0===h.rxPacket&&(h.rxPacket={packet_type:t,header:{packet_number:e.packet_number.toString()},is_coalesced:!1}),h.rxPacket.packet_type=t,h.rxPacket.header.packet_number=e.packet_number.toString();break}case"QUIC_SESSION_TRANSPORT_PARAMETERS_RECEIVED":{const e=c.quic_transport_parameters.split(" ").slice(1),t={owner:"remote"};for(let n=0;n<e.length;n+=2){const a=e[n],i=e[n+1];t[a]=i}p.push(w["EventCategory"].transport),p.push(w["TransportEventType"].parameters_set),p.push(t),h.qlogEvents.push(p);break}case"QUIC_SESSION_HANDSHAKE_DONE_FRAME_RECEIVED":break;case"QUIC_SESSION_PACKET_LOST":{const e=c,t=(()=>{switch(e.transmission_type){default:return w["PacketType"].unknown}})(),n={packet_type:t,packet_number:e.packet_number.toString()};p.push(w["EventCategory"].recovery),p.push(w["RecoveryEventType"].packet_lost),p.push(n),h.qlogEvents.push(p);break}case"QUIC_SESSION_CLOSED":break;case"QUIC_SESSION_CLOSE_ON_ERROR":break;case"QUIC_SESSION_BUFFERED_UNDECRYPTABLE_PACKET":break;case"QUIC_SESSION_DROPPED_UNDECRYPTABLE_PACKET":{const e=c,t=(()=>{switch(e.encryption_level){case"ENCRYPTION_HANDSHAKE":return w["PacketType"].handshake;default:return w["PacketType"].unknown}})(),n={packet_type:t};p.push(w["EventCategory"].transport),p.push(w["TransportEventType"].packet_dropped),p.push(n),h.qlogEvents.push(p);break}case"QUIC_CHROMIUM_CLIENT_STREAM_SEND_REQUEST_HEADERS":case"QUIC_CHROMIUM_CLIENT_STREAM_READ_RESPONSE_HEADERS":break;case"QUIC_SESSION_ATTEMPTING_TO_PROCESS_UNDECRYPTABLE_PACKET":break;case"QUIC_SESSION_PACKET_AUTHENTICATED":break;case"QUIC_SESSION_VERSION_NEGOTIATED":break;case"QUIC_SESSION_PACKET_AUTHENTICATED":break;case"QUIC_SESSION_STREAM_FRAME_COALESCED":break;case"QUIC_SESSION_CERTIFICATE_VERIFIED":break;case"HTTP3_PEER_CONTROL_STREAM_CREATED":case"HTTP3_LOCAL_CONTROL_STREAM_CREATED":{const e=c,t=(()=>{return n.indexOf("PEER")>=0?"remote":"local"})(),a={stream_id:e.stream_id.toString(),owner:t,new:w["H3StreamType"].control};p.push(w["EventCategory"].http),p.push(w["HTTP3EventType"].stream_type_set),p.push(a),h.qlogEvents.push(p);break}case"HTTP3_PEER_QPACK_DECODER_STREAM_CREATED":case"HTTP3_LOCAL_QPACK_DECODER_STREAM_CREATED":{const e=c,t=(()=>{return n.indexOf("PEER")>=0?"remote":"local"})(),a={stream_id:e.stream_id.toString(),owner:t,new:w["H3StreamType"].qpack_decode};p.push(w["EventCategory"].http),p.push(w["HTTP3EventType"].stream_type_set),p.push(a),h.qlogEvents.push(p);break}case"HTTP3_PEER_QPACK_ENCODER_STREAM_CREATED":case"HTTP3_LOCAL_QPACK_ENCODER_STREAM_CREATED":{const e=c,t=(()=>{return n.indexOf("PEER")>=0?"remote":"local"})(),a={stream_id:e.stream_id.toString(),owner:t,new:w["H3StreamType"].qpack_encode};p.push(w["EventCategory"].http),p.push(w["HTTP3EventType"].stream_type_set),p.push(a),h.qlogEvents.push(p);break}case"HTTP3_SETTINGS_RECEIVED":case"HTTP3_SETTINGS_SENT":{const e=c,t=(()=>{return n.indexOf("SENT")>=0?"local":"remote"})(),a={owner:t,max_header_list_size:e.SETTINGS_MAX_HEADER_LIST_SIZE,max_table_capacity:e.SETTINGS_QPACK_MAX_TABLE_CAPACITY,blocked_streams_count:e.SETTINGS_QPACK_BLOCKED_STREAMS};p.push(w["EventCategory"].http),p.push(w["HTTP3EventType"].parameters_set),p.push(a),h.qlogEvents.push(p);break}case"HTTP3_MAX_PUSH_ID_RECEIVED":case"HTTP3_MAX_PUSH_ID_SENT":{const e=c;w["HTTP3FrameTypeName"].max_push_id,e.push_id.toString();break}case"HTTP3_HEADERS_DECODED":case"HTTP3_HEADERS_SENT":{const e=c,t=Object.entries(e.headers).map(([e,t])=>{return{name:e,value:t}}),a={stream_id:e.stream_id.toString(),frame:{frame_type:w["HTTP3FrameTypeName"].headers,headers:t}};h.pushH3Frame(n,a,p);break}case"HTTP3_PRIORITY_UPDATE_RECEIVED":case"HTTP3_PRIORITY_UPDATE_SENT":break;case"HTTP3_DATA_SENT":break;case"HTTP3_DATA_FRAME_RECEIVED":{const e=c,t={stream_id:e.stream_id.toString(),frame:{frame_type:w["HTTP3FrameTypeName"].data},byte_length:e.payload_length.toString()};h.pushH3Frame(n,t,p);break}case"HTTP3_UNKNOWN_FRAME_RECEIVED":break;case"HTTP3_HEADERS_RECEIVED":break;case"CERT_VERIFIER_REQUEST":p.push(w["EventCategory"].info),p.push(w["GenericEventType"].marker),"PHASE_BEGIN"===s?p.push("CERT_VERIFIER_REQUEST BEGIN"):p.push("CERT_VERIFIER_REQUEST END"),h.qlogEvents.push(p);break;default:console.warn("netlog2qlog:convert : unknown QUIC event, not supported yet!",l,n);break}}const s=new Array;o.forEach((e,t)=>{e.qlogEvents.length>0?s.push({title:e.title,vantage_point:{type:w["VantagePointType"].client},event_fields:["relative_time","category","event","data"],common_fields:{protocol_type:"QUIC_HTTP3",reference_time:e.startTime.toString()},events:e.qlogEvents}):console.warn("netlogtoqlog:convert : QUIC connection found but not events logged for this one for some reason... netlog sometimes has QUIC_SESSION_CLOSED events due to timeouts and those are not linked to the real original connection at this time, which is the likely source of this warning.",e)});const c={qlog_version:"draft-02-wip",traces:s};return c}}class be{static async convert(e){console.log("NewlineJSONToQlog: converting newline delimited JSON file");const t={qlog_version:"draft-02-RC1",qlog_format:"NDJSON",traces:new Array},n=await be.parseNDJSON(e);if(0===n.length)return console.error("NewlineJSONToQlog: no entries found in the loaded file..."),t;const a=n.shift();if(void 0===a.qlog_version||"NDJSON"!==a.qlog_format||void 0===a.trace)return console.error("NewlineJSONToQlog: File did not start with the proper qlog header! Aborting...",a),t;for(const r of Object.keys(a))"trace"!==r&&(t[r]=a[r]);const i={vantage_point:{type:w["VantagePointType"].unknown},event_fields:[],events:[]};for(const r of Object.keys(a.trace))i[r]=a.trace[r];return i.events=n,t.traces=[i],t}static async parseNDJSON(e){let t=void 0,n=void 0;const a=new Promise((e,a)=>{t=e,n=a}),i=[],r=be.createNewlineTransformer(e),o=r.getReader();let s=void 0;return o.read().then(s=e=>{e.done?t(i):(i.push(...e.value),o.read().then(s))}),a}static createNewlineTransformer(e){let t=void 0,n=!1,a=0;return new ReadableStream({start:i=>{const r=e.getReader();t=r;const o=new TextDecoder;let s="";r.read().then((function e(t){if(t.done){if(n)return;if(s=s.trim(),0!==s.length){++a;try{const e=JSON.parse(s);i.enqueue([e])}catch(d){console.error("NewlineJSONToQlog: line #"+a+" was invalid JSON. Skipping and continuing.",s)}}return void i.close()}const c=o.decode(t.value,{stream:!0});s+=c;const l=s.split("\n"),h=[];for(let n=0;n<l.length-1;++n){const e=l[n].trim();if(e.length>0){++a;try{const t=JSON.parse(e);h.push(t)}catch(d){console.error("NewlineJSONToQlog: line #"+a+" was invalid JSON. Skipping and continuing.",e)}}}return s=l[l.length-1],i.enqueue(h),r.read().then(e)}))},cancel:e=>{console.warn("NewlineJSONToQlog:parseNDJSON : Cancel registered due to ",e),n=!0,void 0!==t&&t.cancel()}},{highWaterMark:4,size:e=>{return 262144}})}}(function(e){e[e["qlog_normal"]=0]="qlog_normal",e[e["qlog_newline"]=1]="qlog_newline",e[e["netlog"]=2]="netlog",e[e["pcap_json"]=3]="pcap_json",e[e["unclear"]=4]="unclear",e[e["unsupported"]=5]="unsupported"})(ce||(ce={}));class Se{static async Load(e,t){const n=new Se,a={qlogJSON:void 0,error:void 0};let i=n.GuesstimateFileTypeFromExtension(t);if(i===ce.unsupported)throw Error("File extension unsupported: "+t);if(i===ce.unclear){let a="";if(a=e instanceof File?await n.LoadFirstFewCharacters(e):e.substring(0,1024),i=n.GuesstimateFileTypeFromHeader(a),i===ce.unsupported)throw Error("File format unsupported (for qlogs, make sure qlog_version and qlog_format are at the top of the file): "+t+" : "+a)}console.log("FileLoader:Load : we guess filetype for ",t,"is",ce[i]);let r="";if(e instanceof File)r=i===ce.qlog_newline?new Response(e).body:await n.LoadFileAsText(e);else if(i===ce.qlog_newline){const t=new Blob([e]);r=new Response(t).body}else r=e;let o=void 0;if(i===ce.qlog_normal)o=F.parseQlogText(r);else if(i===ce.pcap_json){const e=F.parseJSONWithDeduplication(r);o=I.convert(e)}else if(i===ce.netlog){const e=JSON.parse(r);o=Te.convert(e)}else if(i===ce.qlog_newline){if(!(r instanceof ReadableStream))throw console.error("FileLoader:Load : problem loading newline-delimited JSON file: contents wasn't a ReadableStream!",r),Error("Could not load NDJSON file from stream : "+t);o=await be.convert(r)}return a.qlogJSON=o,a}GuesstimateFileTypeFromExtension(e){const t=new Map([[".qlognd",ce.qlog_newline],[".pcap.json",ce.pcap_json],[".netlog",ce.netlog],[".netlog.br",ce.netlog],[".netlog.brotli",ce.netlog],[".netlog.gz",ce.netlog],[".netlog.gzip",ce.netlog],[".netlog.zip",ce.netlog],[".qlog",ce.unclear],[".qlog.br",ce.unclear],[".qlog.brotli",ce.unclear],[".qlog.gz",ce.unclear],[".qlog.gzip",ce.unclear],[".qlog.zip",ce.unclear],[".json",ce.unclear],[".json.br",ce.unclear],[".json.brotli",ce.unclear],[".json.gz",ce.unclear],[".json.gzip",ce.unclear],[".json.zip",ce.unclear]]);for(const n of t.keys())if(e.endsWith(n))return t.get(n);return ce.unsupported}GuesstimateFileTypeFromHeader(e){if(e.indexOf("qlog_version")>=0){if(!(e.indexOf("qlog_format")>=0))return ce.qlog_normal;if(e.indexOf("NDJSON")>=0)return ce.qlog_newline;if(e.indexOf("JSON")>=0)return ce.qlog_normal}else{if(e.indexOf("activeFieldTrialGroups")>=0)return ce.netlog;if(e.indexOf("_source")>=0&&e.indexOf("layers")>=0)return ce.pcap_json;if(e.indexOf("traces")>=0||e.indexOf("event_fields")>=0||e.indexOf("vantage_point")>=0||e.indexOf("common_fields")>=0)return ce.qlog_normal}return ce.unsupported}LoadFirstFewCharacters(e){let t=void 0,n=void 0;const a=new Promise((e,a)=>{t=e,n=a}),i=new FileReader,r=e.slice(0,1024);return i.onload=e=>{const n=e.target.result;t(n)},i.onabort=t=>{n("File loading aborted: "+e.name+" : "+JSON.stringify(t))},i.onerror=t=>{n("File loading error: "+e.name+" : "+JSON.stringify(t))},i.readAsText(r),a}LoadFileAsText(e){let t=void 0,n=void 0;const a=new Promise((e,a)=>{t=e,n=a}),i=new FileReader;return i.onload=e=>{t(e.target.result)},i.onabort=t=>{n("File loading aborted: "+e.name+" : "+JSON.stringify(t))},i.onerror=t=>{n("File loading error: "+e.name+" : "+JSON.stringify(t))},i.readAsText(e),a}}let we=class extends d["c"]{constructor(){super(...arguments),this.store=Object(h["e"])(A,this.$store),this.urlToLoad="",this.secretsToLoad="",this.filesToUpload=new Array,this.secretsToUpload=null}loadURL(){if(this.urlIsPcap&&""===this.secretsToLoad)return void d["c"].notify({group:"default",title:"Provide .keys file",type:"error",duration:6e3,text:"You're linking to a .pcap without also providing a .keys file. This is currently not supported."});const e={};this.urlToLoad.endsWith(".json")?e.list=this.urlToLoad:e.file=this.urlToLoad,""!==this.secretsToLoad&&(e.secrets=this.secretsToLoad),this.store.loadFilesFromServer(e)}uploadFile(){if(this.uploadIsPcap&&null===this.secretsToUpload)d["c"].notify({group:"default",title:"Provide .keys file",type:"error",duration:6e3,text:"You're uploading a .pcap without also providing a .keys file. This is currently not supported."});else{for(const e of this.filesToUpload)if(null===e||!e.name.endsWith(".qlog")&&!e.name.endsWith(".json")&&!e.name.endsWith(".netlog")&&!e.name.endsWith(".qlognd"))return void d["c"].notify({group:"default",title:"Provide .qlog file",type:"error",duration:6e3,text:"We currently only support uploading .qlog files. "+e.name});for(const e of this.filesToUpload){const t=e.name;d["c"].notify({group:"default",title:"Loading uploaded file",text:"Loading uploaded file "+t+".<br/>The file is not sent to a server."}),Se.Load(e,e.name).then(e=>{this.store.addGroupFromQlogFile({fileContentsJSON:e.qlogJSON,fileInfo:{filename:t}}),d["c"].notify({group:"default",title:"Uploaded file",type:"success",text:"The uploaded file is now available for visualization "+t+".<br/>Use the menu above to switch views."})}).catch(e=>{console.error("FileManagerContainer:uploadFile : ",e),d["c"].notify({group:"default",title:"Error uploading file",type:"error",duration:6e3,text:"Something went wrong. "+t+". For more information, view the devtools console."})})}}}loadExamples(){let e=!1;for(const t of this.store.groups)if(0===t.filename.indexOf("DEMO")){e=!0;break}e?d["c"].notify({group:"default",title:"Example files already loaded",type:"warn",text:"Example files were already loaded, check for files with the 'DEMO_' prefix."}):this.store.loadExamplesForDemo()}loadMassiveExample(){let e=!1;for(const t of this.store.groups)if(t.filename.indexOf("MASSIVE_DEMO_mvfst_large")>=0){e=!0;break}e?d["c"].notify({group:"default",title:"Example file already loaded",type:"warn",text:"Example file was already loaded, it is called 'MASSIVE_DEMO_mvfst_large'."}):this.store.loadQlogDirectlyFromURL({url:"standalone_data/draft-00/mvfst_large.qlog",filename:"MASSIVE_DEMO_mvfst_large.qlog (31MB)"})}get urlIsPcap(){return this.urlToLoad.indexOf(".pcap")>=0&&this.urlToLoad.indexOf(".pcapng")<0}get uploadIsPcap(){return!1}};we=Object(l["a"])([Object(d["a"])({})],we);var xe=we,Ee=xe,ke=(n("3e27"),Object(q["a"])(Ee,ue,fe,!1,null,"fdd4971e",null)),Ce=ke.exports;let Pe=class extends d["c"]{};Pe=Object(l["a"])([Object(d["a"])({components:{FileManagerContainer:Ce}})],Pe);var Re=Pe,Ie=Re,Ge=Object(q["a"])(Ie,me,ge,!1,null,null,null),Oe=Ge.exports,Fe=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("SequenceDiagramContainer")],1)},De=[],Ae=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"home"},[n("SequenceDiagramConfigurator",{attrs:{config:e.config}}),n("SequenceDiagramRenderer",{attrs:{config:e.config}})],1)},Le=[],Ne=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticStyle:{"background-color":"#cce5ff",padding:"0px 10px"}},[n("p",{staticStyle:{"padding-top":"10px"}},[e._v("Select one or more traces via the dropdown(s) below to visualize them in the sequence diagram")]),n("b-container",{attrs:{fluid:""}},[n("b-row",e._l(this.config.connections,(function(t,a){return n("ConnectionConfigurator",{key:a+t.timeOffset,attrs:{allGroups:e.store.groups,connection:t.connection,numericalInputValue:t.timeOffset,numericalInputName:e.allowCustomTimeOffset(t,a)?"Latency offset":void 0,canBeRemoved:e.config.connections.length>2&&0!=a,onConnectionSelected:e.onConnectionSelected.bind(this,a),onRemoved:e.onConnectionRemoved.bind(this,a),onNumericalValueChanged:e.onTimeOffsetChange.bind(this,a)}})})),1)],1),n("b-container",{attrs:{fluid:""}},[n("b-row",[n("b-col",[n("b-button",{on:{click:function(t){return e.selectDefault()}}},[e._v("Add trace")])],1),n("b-col",{attrs:{cols:"1","align-self":"center"}},[n("div",{directives:[{name:"b-tooltip",rawName:"v-b-tooltip.hover",modifiers:{hover:!0}}],staticClass:"text-right",attrs:{title:"Increase if you have sub-millisecond latencies or want more space between events. 1 = ms level, 1000 = us level. Typically 10 or 100 is enough."}},[e._v("Time multiplier: ")])]),n("b-col",{attrs:{cols:"1"}},[n("b-input",{attrs:{type:"number"},model:{value:e.config.timeResolution,callback:function(t){e.$set(e.config,"timeResolution",t)},expression:"config.timeResolution"}})],1)],1)],1),e.connectionIsUnknownPerspective?n("b-alert",{attrs:{show:"",variant:"danger"}},[e._v("The selected trace has an unknown vantage point. We guessed it based on heuristics, but this could be wrong!")]):e._e(),0===this.store.outstandingRequestCount&&0===this.store.groups.length?n("b-alert",{attrs:{show:"",variant:"danger"}},[e._v("Please load a trace file to visualize it")]):0===this.store.groups.length?n("b-alert",{attrs:{show:"",variant:"warning"}},[e._v("Loading files...")]):e._e()],1)},Me=[];class qe{constructor(){this.connections=new Array,this.timeResolution=1}static createConnectionWithTimeoffset(e){return{connection:e,timeOffset:e.getEventParser()?e.getEventParser().timeOffset:0}}}var Ue=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("b-col",{staticStyle:{"background-color":"white",color:"black",border:"black 1px solid","max-width":"50%"}},[n("b-container",{attrs:{fluid:""}},[e.allowGroupSelection&&!e.allowConnectionSelection?n("div",[n("b-form-select",{staticClass:"mb-3 mt-3",attrs:{options:e.groupOptions},on:{change:e.onGroupSelectionChanged},model:{value:e.selectedGroup,callback:function(t){e.selectedGroup=t},expression:"selectedGroup"}})],1):n("div",[e.tooManyOptions?n("div",[n("b-form-select",{staticClass:"mb-3 mt-3",attrs:{options:e.groupOptions},on:{change:e.onGroupSelectionChanged},model:{value:e.selectedGroup,callback:function(t){e.selectedGroup=t},expression:"selectedGroup"}}),n("b-form-select",{staticClass:"mb-3",attrs:{options:e.connectionOptions},on:{change:e.onConnectionSelectionChanged},model:{value:e.selectedConnection,callback:function(t){e.selectedConnection=t},expression:"selectedConnection"}}),e.canBeRemoved?n("b-button",{on:{click:e.removeMyself}},[e._v("−")]):e._e()],1):n("div",[n("b-row",{staticClass:"mt-3"},[n("b-col",[n("div",[e._v(e._s(e.selectedConnection.parent.filename)+" ("+e._s(e.selectedConnection.parent.description)+")")])]),e.numericalInputName?n("b-col",{attrs:{cols:"2"}},[n("div",{directives:[{name:"b-tooltip",rawName:"v-b-tooltip.hover",modifiers:{hover:!0}}],attrs:{title:"This value is automatically calculated, but can be manually adjusted."}},[e._v(e._s(e.numericalInputName)+" : ")])]):e._e(),e.canBeRemoved?n("b-col",{staticStyle:{"max-width":"36px"}}):e._e()],1),n("b-row",{staticClass:"mb-3"},[n("b-col",[n("b-form-select",{attrs:{options:e.combinedOptions},on:{change:e.onConnectionSelectionChanged},model:{value:e.selectedConnection,callback:function(t){e.selectedConnection=t},expression:"selectedConnection"}})],1),e.numericalInputName?n("b-col",{attrs:{cols:"2"}},[n("b-input",{attrs:{type:"number"},on:{change:e.onNumericalValueUpdated},model:{value:e.numericalValue,callback:function(t){e.numericalValue=t},expression:"numericalValue"}})],1):e._e(),e.canBeRemoved?n("b-col",{staticClass:"px-0",attrs:{cols:"auto"}},[n("b-button",{on:{click:e.removeMyself}},[e._v("−")])],1):e._e()],1)],1)])])],1)},ze=[];let He=class extends d["c"]{constructor(){super(...arguments),this.selectedConnection=this.connection,this.selectedGroup=this.group?this.group:this.connection.parent,this.numericalValue=this.numericalInputValue}onConnectionChanged(e,t){console.log("ConnectionConfigurator:onConnectionChanged : setting selectedGroup : ",e.title,t.title,e,t),this.selectedGroup=e.parent,this.selectedConnection!==e&&(this.selectedConnection=e),this.numericalValue=this.numericalInputValue}get tooManyOptions(){return this.combinedOptions.length>30}get groupOptions(){const e=[];for(const t of this.allGroups)e.push({value:t,text:t.filename+" ("+(t.title?t.title+" : ":"")+t.description+")"});return e}get connectionOptions(){const e=[];for(const t of this.selectedGroup.getConnections()){let n="";t.vantagePoint&&(t.vantagePoint.name&&(n+=t.vantagePoint.name+" : "),t.vantagePoint.type?n+=t.vantagePoint.type:n+="UNKNOWN",n+=t.vantagePoint&&t.vantagePoint.flow?" (flow = "+t.vantagePoint.flow+") : ":" : "),t.title&&(n+=t.title),t.description&&(n+=" : "+t.description),e.push({value:t,text:n})}return e}get combinedOptions(){const e=[];for(const t of this.allGroups){e.push({value:null,text:t.filename,disabled:!this.allowGroupSelection});for(const n of t.getConnections()){let t="";n.vantagePoint&&(n.vantagePoint.name&&(t+=n.vantagePoint.name+" : "),n.vantagePoint.type?t+=n.vantagePoint.type:t+="UNKNOWN",t+=n.vantagePoint&&n.vantagePoint.flow?" (flow = "+n.vantagePoint.flow+") : ":" : "),n.title&&(t+=n.title),n.description&&(t+=" : "+n.description),e.push({value:n,text:"↳ "+t})}}return e}onGroupSelectionChanged(e){console.log("Selected a new group",this.selectedGroup,e),this.allowGroupSelection&&this.onGroupSelected&&this.onGroupSelected(this.selectedGroup),this.allowConnectionSelection&&(this.selectedConnection=e.getConnections()[0],this.onConnectionSelectionChanged(this.selectedConnection))}onConnectionSelectionChanged(e){console.log("Selected a new connection",this.selectedConnection,e),this.onConnectionSelected(e)}removeMyself(){this.onRemoved()}onNumericalValueUpdated(e){this.onNumericalValueChanged&&this.onNumericalValueChanged(parseFloat(e))}};Object(l["a"])([Object(d["b"])()],He.prototype,"connection",void 0),Object(l["a"])([Object(d["b"])()],He.prototype,"group",void 0),Object(l["a"])([Object(d["b"])()],He.prototype,"allGroups",void 0),Object(l["a"])([Object(d["b"])()],He.prototype,"numericalInputValue",void 0),Object(l["a"])([Object(d["b"])()],He.prototype,"numericalInputName",void 0),Object(l["a"])([Object(d["b"])({default:!0})],He.prototype,"canBeRemoved",void 0),Object(l["a"])([Object(d["b"])({default:!1})],He.prototype,"allowGroupSelection",void 0),Object(l["a"])([Object(d["b"])({default:!0})],He.prototype,"allowConnectionSelection",void 0),Object(l["a"])([Object(d["b"])()],He.prototype,"onGroupSelected",void 0),Object(l["a"])([Object(d["b"])()],He.prototype,"onConnectionSelected",void 0),Object(l["a"])([Object(d["b"])()],He.prototype,"onNumericalValueChanged",void 0),Object(l["a"])([Object(d["b"])()],He.prototype,"onRemoved",void 0),Object(l["a"])([Object(d["d"])("connection",{immediate:!1,deep:!1})],He.prototype,"onConnectionChanged",null),He=Object(l["a"])([d["a"]],He);var je=He,Qe=je,Ve=Object(q["a"])(Qe,Ue,ze,!1,null,null,null),Be=Ve.exports;let We=class extends d["c"]{constructor(){super(...arguments),this.store=Object(h["e"])(A,this.$store)}get connectionIsUnknownPerspective(){if(0===this.config.connections.length)return!1;let e=this.config.connections[0].connection;return e.wasAutoGenerated&&this.config.connections.length>1&&(e=this.config.connections[1].connection),e.getEvents().length>0&&e.vantagePoint&&e.vantagePoint.type===w["VantagePointType"].unknown}allowCustomTimeOffset(e,t){return t>0&&void 0===this.config.connections.find(e=>e.connection.wasAutoGenerated)}onConnectionSelected(e,t){if(console.log("SequenceDiagramConfigurator:onConnectionSelected : ",this.config,e,t),0===e&&1===t.parent.getConnections().filter(e=>!e.wasAutoGenerated).length){const e=t.parent.getConnections();this.config.connections=[qe.createConnectionWithTimeoffset(e[0])]}else if(2===t.parent.getConnections().filter(e=>!e.wasAutoGenerated).length){const e=t.parent.getConnections()[0],n=t.parent.getConnections()[1],a=e.getVantagePointPerspective(),i=n.getVantagePointPerspective();a===i?this.config.connections=[qe.createConnectionWithTimeoffset(t)]:a===w["VantagePointType"].client?this.config.connections=[qe.createConnectionWithTimeoffset(e),qe.createConnectionWithTimeoffset(n)]:i===w["VantagePointType"].client&&(this.config.connections=[qe.createConnectionWithTimeoffset(n),qe.createConnectionWithTimeoffset(e)])}else if(t.parent.getConnections().length>2){const e=[qe.createConnectionWithTimeoffset(t)],n=t.parent.getConnections(),a=n.indexOf(t),i=t.getVantagePointPerspective();for(let t=a+1;t<n.length;++t){const a=n[t].getVantagePointPerspective();if(a===i||n[t].wasAutoGenerated)break;e.push(qe.createConnectionWithTimeoffset(n[t]))}this.config.connections=e}else if(e>0){let n=!0,a=w["VantagePointType"].unknown,i=void 0;for(let r=0;r<this.config.connections.length;++r){let o=w["VantagePointType"].unknown;if(r===e?(o=t.vantagePoint.type,t.wasAutoGenerated||(i=t)):(o=this.config.connections[r].connection.vantagePoint.type,this.config.connections[r].connection.wasAutoGenerated||(i=this.config.connections[r].connection)),0!==r&&o!==a){d["c"].set(this.config.connections,e,qe.createConnectionWithTimeoffset(t)),n=!1;break}a=o}if(n)if(void 0!==i)console.warn("SequenceDiagramConfigurator: all selected traces had the same vantagePoint, auto-selecting the first non-autogenerated trace"),this.config.connections=[qe.createConnectionWithTimeoffset(i)];else{console.error("SequenceDiagramConfigurator: all selected traces had the same vantagePoint and were also auto-generated. Trying to find a proper trace.");let e=!1;for(const n of t.parent.getConnections())if(!n.wasAutoGenerated){this.config.connections=[qe.createConnectionWithTimeoffset(n)],e=!0;break}e||(console.error("SequenceDiagramConfigurator: Proper trace not found, keeping last selected connection. THIS SHOULD NOT HAPPEN!"),this.config.connections=[qe.createConnectionWithTimeoffset(t)])}}else d["c"].set(this.config.connections,e,qe.createConnectionWithTimeoffset(t))}mounted(){0===this.config.connections.length&&this.store.groups.length>0&&this.selectDefault()}updated(){0===this.config.connections.length&&this.store.groups.length>0&&this.selectDefault()}selectDefault(){console.log("selectDefault: adding new default connection configurator",this.store.groups),this.config.connections.push(qe.createConnectionWithTimeoffset(this.store.groups[0].getConnections()[0]))}onConnectionRemoved(e){this.config.connections.splice(e,1)}onTimeOffsetChange(e,t){this.config.connections[e].timeOffset=t}};Object(l["a"])([Object(d["b"])()],We.prototype,"config",void 0),We=Object(l["a"])([Object(d["a"])({components:{ConnectionConfigurator:Be}})],We);var Ye,Xe=We,$e=Xe,Je=Object(q["a"])($e,Ne,Me,!1,null,null,null),Ke=Je.exports,Ze=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("div",{staticStyle:{width:"100%",border:"5px solid #cce5ff","min-height":"200px"},attrs:{id:"sequence-diagram"}},[n("svg",{attrs:{id:"sequence-diagram-svg"}})]),n("b-modal",{attrs:{id:"event-modal","hide-footer":"",title:"Event detail"}},[null!==this.eventLink?n("div",[n("a",{attrs:{href:this.eventLink,target:"_blank"}},[e._v("Direct link to this event")]),n("br"),n("hr")]):e._e(),n("pre",{staticClass:"d-block"},[e._v(e._s(e.eventDetail))]),null!==this.eventDetailExtra?n("p",{staticStyle:{"font-weight":"bold"}},[e._v("Value of all recovery metrics at this point:")]):e._e(),null!==this.eventDetailExtra?n("pre",{staticClass:"d-block"},[e._v(e._s(e.eventDetailExtra))]):e._e(),n("b-button",{staticClass:"mt-3",attrs:{block:""},on:{click:e.hideEventModal}},[e._v("Close")])],1)],1)},et=[],tt=n("5698");(function(e){e["left"]="leftTarget",e["right"]="rightTarget",e["lost"]="packetLost"})(Ye||(Ye={}));class nt{constructor(e,t,n){this.rendering=!1,this.scrollHandler=void 0,this.shortenedIntervals=new Array,this.timeResolution=1,this.dimensions={},this.bandWidth=0,this.frameTypeToColorLUT=new Map,this.ignoreEventName="ignoreseq",this.containerID=e,this.svgID=t,this.onEventClicked=(e,t,a)=>{const i=t.getEvents();let r=t.parseEvent(e);const o=new Map;if(a&&(this.createPrivateNamespace(e),e.qvis.sequencediagram.focusInfo=a),r.name===w["RecoveryEventType"].metrics_updated){r=void 0;for(const n of i){const a=t.parseEvent(n);if(a.name===w["RecoveryEventType"].metrics_updated)for(const e of Object.keys(a.data))o.set(e,a.data[e]);if(n===e)break}n(e,Object.fromEntries(o))}else n(e,void 0)}}getTraces(){return this.traces}async render(e,t,n=null){if(this.rendering)return!1;console.log("SequenceDiagramD3Renderer:render",e.length,e),this.timeResolution=t,this.selectedTraces=e,this.rendering=!0;const a=this.setup(e);return a?(await this.renderPartialExtents(n),this.rendering=!1,!0):(this.rendering=!1,!1)}setup(e){if(void 0===document.getElementById(this.containerID))return console.error("SequenceDiagramD3Renderer:setup : container element not found, cannot render!",this.containerID),!1;if(void 0===document.getElementById(this.svgID))return console.error("SequenceDiagramD3Renderer:setup : svg element not found, cannot render!",this.svgID),!1;this.traces=new Array;for(const o of e)o.connection.getEvents().length>0&&this.traces.push(o);if(0===this.traces.length)return console.error("SequenceDiagramD3Renderer:setup : None of the selected traces have events in them, cannot render"),!1;performance.now();this.ensureMoreThanOneTrace();for(const o of this.traces)o.connection.setupLookupTable();this.dimensions={margin:{top:60,bottom:100,left:0,right:0},width:0,height:0,pixelsPerMillisecond:20,shortenIntervalsLongerThan:120},this.calculateTimeOffsets(this.traces),this.dimensions.height=this.calculateCoordinates(this.traces),this.calculateConnections();const t=document.getElementById(this.containerID);this.svg=tt["j"]("body").select("#"+this.svgID),this.svg.selectAll("*").remove(),this.svg.attr("height",this.dimensions.height),this.dimensions.width=t.clientWidth,this.svg.attr("width",this.dimensions.width),this.svg.attr("viewbox",`0 0 ${this.dimensions.width} ${this.dimensions.height}`),this.bandWidth=this.dimensions.width/this.traces.length;for(let o=0;o<this.traces.length;++o){const e=this.bandWidth*o+.5*this.bandWidth,t=this.traces[o].connection;this.svg.append("rect").attr("x",e-1).attr("y",this.dimensions.margin.top).attr("width",2).attr("height",this.dimensions.height).attr("fill","black");let n=void 0;if(!t.wasAutoGenerated&&t.parent.URL){const a=document.createElementNS("http://www.w3.org/2000/svg","a");a.setAttribute("href",""+t.parent.URL),a.setAttribute("target","_blank"),a.style.textDecoration="underline",this.svg.node().appendChild(a),n=document.createElementNS("http://www.w3.org/2000/svg","text"),n.setAttribute("x",""+e),n.setAttribute("y","20"),n.setAttribute("dominant-baseline","middle"),n.setAttribute("text-anchor","middle"),n.textContent=""+t.parent.URLshort,a.appendChild(n)}else n=document.createElementNS("http://www.w3.org/2000/svg","text"),n.setAttribute("x",""+e),n.setAttribute("y","20"),n.setAttribute("dominant-baseline","middle"),n.setAttribute("text-anchor","middle"),n.textContent=(t.wasAutoGenerated?"GENERATED: ":"")+t.parent.filename,this.svg.node().appendChild(n);let a=t.vantagePoint.type;a===w["VantagePointType"].network&&(a=a+" : from "+t.vantagePoint.flow+"'s viewpoint"),n=document.createElementNS("http://www.w3.org/2000/svg","text"),n.setAttribute("x",""+e),n.setAttribute("y","40"),n.setAttribute("dominant-baseline","middle"),n.setAttribute("text-anchor","middle"),n.textContent=""+a,this.svg.node().appendChild(n)}for(const o of this.shortenedIntervals)for(let e=0;e<this.traces.length;++e){let t=this.bandWidth*e+.5*this.bandWidth;if(this.svg.append("line").attr("x1",t).attr("x2",t).attr("y1",o.yMin+this.dimensions.pixelsPerMillisecond).attr("y2",o.yMax-this.dimensions.pixelsPerMillisecond).attr("stroke","white").attr("stroke-width",4),this.svg.append("line").attr("x1",t).attr("x2",t).attr("y1",o.yMin+this.dimensions.pixelsPerMillisecond).attr("y2",o.yMax-this.dimensions.pixelsPerMillisecond).attr("stroke","black").attr("stroke-width",4).attr("stroke-dasharray",4),e!==this.traces.length-1){t=this.bandWidth*(e+1),this.svg.append("line").attr("x1",t).attr("x2",t).attr("y1",o.yMin+this.dimensions.pixelsPerMillisecond).attr("y2",o.yMax-this.dimensions.pixelsPerMillisecond).attr("stroke","white").attr("stroke-width",4),this.svg.append("line").attr("x1",t).attr("x2",t).attr("y1",o.yMin+this.dimensions.pixelsPerMillisecond).attr("y2",o.yMax-this.dimensions.pixelsPerMillisecond).attr("stroke","black").attr("stroke-width",4).attr("stroke-dasharray",4);const n=document.createElementNS("http://www.w3.org/2000/svg","text");n.setAttribute("class","timestamp"),n.setAttribute("x",""+(t+this.dimensions.pixelsPerMillisecond)),n.setAttribute("y",""+(o.yMin+(o.yMax-o.yMin)/2)),n.setAttribute("dominant-baseline","middle"),n.textContent=`${(o.timeSkipped/this.timeResolution).toFixed(2)}ms of inactivity`,this.svg.node().appendChild(n)}}this.rangeHeight=screen.height,this.renderedRanges=new Array;let n=0,a=0;while(n<this.dimensions.height)this.renderedRanges[a]={rendered:!1,svgGroup:void 0,yMin:n},n+=this.rangeHeight,++a;void 0!==this.scrollHandler&&(window.removeEventListener("scroll",this.scrollHandler),this.scrollHandler=void 0);let i=0,r=void 0;return this.scrollHandler=e=>{const t=()=>{r=void 0,this.renderPartialExtents()};clearTimeout(r),r=setTimeout(t,250),++i,i%5===0&&(i=0,clearTimeout(r),t())},window.addEventListener("scroll",this.scrollHandler),!0}ensureMoreThanOneTrace(){if(this.traces.length>1){const e=this.traces.length;if(this.traces=this.traces.filter((e,t)=>this.traces.indexOf(e)===t),this.traces.length!==e){while(this.selectedTraces.length>0)this.selectedTraces.pop();for(const e of this.traces)this.selectedTraces.push(e)}if(this.traces.length>1)return}console.log("Considering reusing a previously generated sibling",this.traces[0].connection);const e=this.traces[0].connection;if(e.qvis&&e.qvis.sequencediagram.generatedSibling){const t=e.qvis.sequencediagram.generatedSibling;return this.traces.push(qe.createConnectionWithTimeoffset(t)),void this.selectedTraces.push(qe.createConnectionWithTimeoffset(t))}const t=e.clone();if(t.title="Simulated, autogenerated trace : "+t.title,t.description="Simulated, autogenerated trace : "+t.description,t.vantagePoint.name="GENERATED",t.wasAutoGenerated=!0,e.vantagePoint.type===w["VantagePointType"].server||e.vantagePoint.flow===w["VantagePointType"].server)t.vantagePoint.type=w["VantagePointType"].client,t.vantagePoint.flow=w["VantagePointType"].unknown,this.traces.unshift(qe.createConnectionWithTimeoffset(t));else if(e.vantagePoint.type===w["VantagePointType"].client||e.vantagePoint.flow===w["VantagePointType"].client)t.vantagePoint.type=w["VantagePointType"].server,t.vantagePoint.flow=w["VantagePointType"].unknown,this.traces.push(qe.createConnectionWithTimeoffset(t));else{e.setupLookupTable();const n=e.lookup(w["EventCategory"].transport,w["TransportEventType"].packet_sent),a=e.lookup(w["EventCategory"].transport,w["TransportEventType"].packet_received);let i=void 0,r=void 0;for(const t of n){const n=e.parseEvent(t),a=n.data;if(a.packet_type===w["PacketType"].initial&&a.header&&""+a.header.packet_number==="0"){i=n;break}}for(const t of a){const n=e.parseEvent(t),a=n.data;if(a.packet_type===w["PacketType"].initial&&a.header&&""+a.header.packet_number==="0"){r=n;break}}let o=w["VantagePointType"].server;i&&r&&i.absoluteTime<r.absoluteTime&&(o=w["VantagePointType"].client),e.vantagePoint.name="vantage point type was unknown, pretending it's "+o,t.vantagePoint.type=o===w["VantagePointType"].client?w["VantagePointType"].server:w["VantagePointType"].client,t.vantagePoint.name="vantage point type was unknown, pretending it's "+t.vantagePoint.type,t.vantagePoint.flow=w["VantagePointType"].unknown,t.vantagePoint.type===w["VantagePointType"].server?this.traces.push(qe.createConnectionWithTimeoffset(t)):this.traces.unshift(qe.createConnectionWithTimeoffset(t))}for(const n of t.getEvents()){const e=t.parseEvent(n),a=e.name;a===w["TransportEventType"].packet_sent?e.name=w["TransportEventType"].packet_received:a===w["TransportEventType"].packet_received?e.name=w["TransportEventType"].packet_sent:e.name=this.ignoreEventName}this.createPrivateNamespace(e),e.qvis.sequencediagram.generatedSibling=t,this.createPrivateNamespace(t),t.qvis.sequencediagram.generatedSibling=e;while(this.selectedTraces.length>0)this.selectedTraces.pop();for(const n of this.traces)this.selectedTraces.push(n)}createPrivateNamespace(e){void 0===e.qvis&&Object.defineProperty(e,"qvis",{enumerable:!1,value:{}}),void 0===e.qvis.sequencediagram&&(e.qvis.sequencediagram={})}calculateTimeOffsets(e){if(e.length>2)return void console.warn("SequenceDiagramD3Renderer:calculateTimeOffsets : no time offsets auto-calculated for more than 2 traces. Use the UI to assign them manually if needed.");const t=e[0],n=e[1];if(n.connection.wasAutoGenerated||t.connection.wasAutoGenerated)return;if(0!==n.connection.getEventParser().timeOffset)return;if(n.timeOffset)return this.createPrivateNamespace(n.connection),void(n.connection.qvis.sequencediagram.manualTimeOffset=n.timeOffset);if(n.connection.qvis&&n.connection.qvis.sequencediagram&&void 0!==n.connection.qvis.sequencediagram.manualTimeOffset)return void(n.timeOffset=n.connection.qvis.sequencediagram.manualTimeOffset);if(0===t.connection.getEventParser().getAbsoluteStartTime()&&t.connection.getEventParser().getTimeTrackingMethod()===u.RELATIVE_TIME){console.error("SequenceDiagramD3Renderer:calculateTimeOffsets : Client had no reference_time set, trying to fix by using the server-side reftime. HERE BE DRAGONS!");const e=n.connection.getEventParser().getAbsoluteStartTime();t.connection.getEventParser().setReferenceTime(e-5)}else if(0===n.connection.getEventParser().getAbsoluteStartTime()&&n.connection.getEventParser().getTimeTrackingMethod()===u.RELATIVE_TIME){console.error("SequenceDiagramD3Renderer:calculateTimeOffsets : Server had no reference_time set, trying to fix by using the client-side reftime. HERE BE DRAGONS!");const e=t.connection.getEventParser().getAbsoluteStartTime();n.connection.getEventParser().setReferenceTime(e+5)}let a=Number.MIN_SAFE_INTEGER,i=0;const r=t.connection.lookup(w["EventCategory"].recovery,w["RecoveryEventType"].metrics_updated);for(const h of r){const e=t.connection.parseEvent(h).data;if(e.latest_rtt?a=e.latest_rtt/2:e.smoothed_rtt&&(i=e.smoothed_rtt/2),a!==Number.MIN_SAFE_INTEGER){a=t.connection.getEventParser().timeToMilliseconds(a);break}}if(a===Number.MIN_SAFE_INTEGER&&0!==i&&(a=i),a===Number.MIN_SAFE_INTEGER){i=0;const e=n.connection.lookup(w["EventCategory"].recovery,w["RecoveryEventType"].metrics_updated);for(const t of e){const e=n.connection.parseEvent(t).data;if(e.latest_rtt?a=e.latest_rtt/2:e.smoothed_rtt&&(i=e.smoothed_rtt/2),a!==Number.MIN_SAFE_INTEGER){a=n.connection.getEventParser().timeToMilliseconds(a);break}}a===Number.MIN_SAFE_INTEGER&&0!==i&&(a=i)}let o=void 0,s=void 0,c=void 0,l="0";for(const h of n.connection.getEvents()){const e=n.connection.parseEvent(h);if(e.name===w["TransportEventType"].packet_received&&e.data.packet_type===w["PacketType"].initial&&e.data.header&&void 0!==e.data.header.packet_number&&(c=h,l=""+e.data.header.packet_number),c)break}for(const h of t.connection.getEvents()){const e=t.connection.parseEvent(h);if(e.name===w["TransportEventType"].packet_sent&&e.data.packet_type===w["PacketType"].initial&&e.data.header&&""+e.data.header.packet_number===l&&(o=h),e.name===w["TransportEventType"].packet_received&&e.data.packet_type===w["PacketType"].initial&&e.data.header&&(s=h),o&&s)break}if(o&&s&&c){if(a===Number.MIN_SAFE_INTEGER&&(a=(t.connection.parseEvent(s).absoluteTime-t.connection.parseEvent(o).absoluteTime)/2,a<=0))return void console.error("SequenceDiagramD3Renderer:calculateTimeOffset : initial received is earlier than sent! ",a);const e=n.connection.parseEvent(c).absoluteTime,i=t.connection.parseEvent(o).absoluteTime+a;a=e>i?e-i:i-e}else a!==Number.MIN_SAFE_INTEGER&&console.log("SequenceDiagramD3Renderer:calculateTimeOffset: calculating probable RTT from metrics_updated events because initials couldn't be properly correlated (was there loss?)",a,o,c,s);a!==Number.MIN_SAFE_INTEGER&&(console.log("SequenceDiagramD3Renderer:calculateTimeOffset : offset determined at ",a),n.timeOffset=a,this.createPrivateNamespace(n.connection),n.connection.qvis.sequencediagram.manualTimeOffset=a)}calculateCoordinates(e){const t=this.dimensions.pixelsPerMillisecond,n=new Array(e.length).fill(0),a=new Array;this.absoluteAggregatedStartTime=Number.MAX_VALUE;for(const p of e){const e={timestamp:0,y:0};a.push(e),this.absoluteAggregatedStartTime=Math.min(this.absoluteAggregatedStartTime,p.connection.getEventParser().getAbsoluteStartTime())}let i=!1,r=0,o=0,s=-1,c=this.dimensions.margin.top,l=!1,h=0;const d=this.timeResolution;this.absoluteAggregatedStartTime*=d,this.shortenedIntervals=new Array;while(!i){let p,m=-1,g=Number.MAX_VALUE;for(let t=0;t<e.length;++t){if(-1===n[t])continue;const a=e[t].connection,i=e[t].timeOffset,r=a.getEvents()[n[t]],o=a.parseEvent(r).absoluteTime*d-this.absoluteAggregatedStartTime+i*d;r.timeText=""+o.toFixed(2),o<g&&(m=t,g=o,p=r)}const u=Math.floor(g);if(u===s){if(!l){l=!0;for(let e=0;e<a.length;++e)a[e].y=e!==h?c-t:c}a[m].y+=t,c=a[m].y}else if(l){l=!1;let e=0;for(const t of a)t.y>e&&(e=t.y);c=e}const f=u-s;f*t>this.dimensions.shortenIntervalsLongerThan?(this.shortenedIntervals.push({yMin:c,yMax:c+this.dimensions.shortenIntervalsLongerThan,timeSkipped:u-s}),c+=this.dimensions.shortenIntervalsLongerThan):c+=f*t,this.createPrivateNamespace(p),p.qvis.sequencediagram.y=c,s=u,h=m,n[m]+=1,n[m]>=e[m].connection.getEvents().length&&(n[m]=-1,++r),i=r===e.length,o=c}return o+=this.dimensions.margin.bottom,o}calculateConnections(){const e=(e,t,n,a,i)=>{const r=t.getEventParser(),o=a.getEventParser();let s=0;const c=Math.min(1e3,Math.max(200,Math.round(i.length/10)));for(const l of n){const t=r.load(l).data,n=l.qvis.sequencediagram;if(void 0===t.header||void 0===t.header.packet_number){t.packet_type!==w["PacketType"].version_negotiation&&t.packet_type!==w["PacketType"].retry&&"stateless_reset"!==t.packet_type&&console.error("SequenceDiagram:calculateConnections : event does not have the header.packet_number field, which is required",t);continue}n[Ye.right]=void 0,n[Ye.left]=void 0;const a=Math.max(0,s-c),h=Math.min(i.length-1,s+c);let d=!1;for(let r=a;r<=h;++r){const a=o.load(i[r]).data;if(a.packet_type===t.packet_type&&a.header&&t.header&&""+a.header.packet_number===""+t.header.packet_number){n[e]=i[r],s=r,d=!0;break}}d||(n[Ye.lost]=e),void 0===n[e]&&0}},t=(t,n,a)=>{let i=n.vantagePoint.type,r=a.vantagePoint.type;i===w["VantagePointType"].network&&(i=n.vantagePoint.flow),r===w["VantagePointType"].network&&(r=a.vantagePoint.flow);const o=w["TransportEventType"].packet_sent,s=i===r?w["TransportEventType"].packet_sent:w["TransportEventType"].packet_received,c=n.lookup(w["EventCategory"].transport,o),l=a.lookup(w["EventCategory"].transport,s);0===c.length&&console.error("SequenceDiagram:calculateConnections : trace "+n.parent.filename+":"+i+" did not have "+o+" events, which are needed"),0===l.length&&console.error("SequenceDiagram:calculateConnections : trace "+a.parent.filename+":"+r+" did not have "+s+" events, which are needed"),e(t,n,c,a,l)};for(let n=0;n<this.traces.length-1;++n){const e=this.traces[n],a=this.traces[n+1];t(Ye.right,e.connection,a.connection)}for(let n=this.traces.length-1;n>0;--n){const e=this.traces[n],a=this.traces[n-1];t(Ye.left,e.connection,a.connection)}}async renderPartialExtents(e=null){if(e)if(this.traces.length>e.connectionIndex){const t=this.traces[e.connectionIndex],n=t.connection.getEvents();if(n.length>e.eventIndex){const t=n[e.eventIndex];if(t.qvis&&t.qvis.sequencediagram&&t.qvis.sequencediagram.y){const n=t.qvis.sequencediagram.y-50;return console.log("SequenceDiagramD3Renderer:renderPartialExtents: focusing on event ",e,n),void window.scrollTo(0,n)}console.error("SequenceDiagramD3Renderer:renderPartialExtents: couldn't focus on event, y unknown",e,this.traces)}else console.error("SequenceDiagramD3Renderer:renderPartialExtents: couldn't focus on event, eventIndex unknown",e,this.traces)}else console.error("SequenceDiagramD3Renderer:renderPartialExtents: couldn't focus on event, traceIndex unknown",e,this.traces);const t=this.svg,n=t.node().getBoundingClientRect(),a=n.top-document.body.getBoundingClientRect().top,i=Math.max(0,window.pageYOffset-a),r=(window.innerHeight,Math.max(0,n.top),Math.floor(i/this.rangeHeight)),o=Math.max(0,r-1),s=Math.min(this.renderedRanges.length-1,r+1),c=new Array;for(let u=o;u<=s;++u)this.renderedRanges[u].rendered||c.push({rangeIndex:u,start:this.renderedRanges[u].yMin,stop:this.renderedRanges[u].yMin+this.rangeHeight-1});const l=new Array;let h=Math.max(0,o-500),d=Math.max(0,o-2);if(0!==h||0!==d)for(let u=h;u<=d;++u)this.renderedRanges[u].rendered&&l.push(u);if(h=Math.min(this.renderedRanges.length-1,s+2),d=Math.min(this.renderedRanges.length-1,s+500),h!==this.renderedRanges.length-1||d!==this.renderedRanges.length-1)for(let u=h;u<=d;++u)this.renderedRanges[u].rendered&&l.push(u);if(l.length>=1)for(const u of l){const e=this.renderedRanges[u].svgGroup;e.parentNode.removeChild(e),this.renderedRanges[u].svgGroup=void 0,this.renderedRanges[u].rendered=!1}if(0===c.length)return;const p=this.dimensions.pixelsPerMillisecond;let m=0,g=0;for(const u of c){const e=document.createElementNS("http://www.w3.org/2000/svg","g");this.renderedRanges[u.rangeIndex].svgGroup=e,this.renderedRanges[u.rangeIndex].rendered=!0;for(let t=0;t<this.traces.length;++t){const n=this.traces[t],a=this.bandWidth*t+.5*this.bandWidth,i=n.connection.getEvents();let r=0,o=void 0,s=0;for(const c of i){const i=n.connection.parseEvent(c);o=c.qvis.sequencediagram,r=o.y;const l={connectionIndex:t,eventIndex:s};if(s+=1,r<u.start)continue;if(r>u.stop)break;if(i.name===this.ignoreEventName)continue;const h=document.createElementNS("http://www.w3.org/2000/svg","rect"),d=.6*p;h.setAttribute("x",""+(a-d/2)),h.setAttribute("y",""+(r-d/2)),h.setAttribute("width",""+d),h.setAttribute("height",""+d),h.setAttribute("fill","green"),h.onclick=e=>this.onEventClicked(c,n.connection,l),e.appendChild(h);let f="";void 0!==c.timeText?f=c.timeText:(f=i.absoluteTime-this.absoluteAggregatedStartTime+n.timeOffset,f=f.toFixed(2));const v=document.createElementNS("http://www.w3.org/2000/svg","text");v.setAttribute("class","timestamp"),v.setAttribute("x",""+(a-p/2+(0===t?2*-p:2*p))),v.setAttribute("y",""+r),v.setAttribute("dominant-baseline","middle"),v.setAttribute("text-anchor",0===t?"end":"start"),v.textContent=""+f,e.appendChild(v);let y=void 0,_=void 0,T=void 0,b=void 0,S=!1;const x="#0468cc",E="#a80f3a";if(o[Ye.right]?(_=1,y=o[Ye.right].qvis.sequencediagram,T=">",b=x,g=y.y-r):o[Ye.left]?(_=-1,y=o[Ye.left].qvis.sequencediagram,T="<",b=E,m=y.y-r):void 0!==o[Ye.lost]&&(o[Ye.lost]===Ye.right?(_=.5,y={y:r+g/2},T=">",b=x):(_=-.5,y={y:r+m/2},T="<",b=E),S=!0),_){let t=a+_*this.bandWidth;t-=_*(p/2);const o=document.createElementNS("http://www.w3.org/2000/svg","line");o.setAttribute("x1",""+a),o.setAttribute("x2",""+t),o.setAttribute("y1",""+r),o.setAttribute("y2",""+y.y),o.setAttribute("stroke-width","2"),o.setAttribute("stroke",b),e.appendChild(o);const s=t;let h="";h+=`${s-10},${y.y-10}`,h+=` ${s},${y.y}`,h+=` ${s-10},${y.y+10}`;const d=r-y.y,m=t-a;let g=180*Math.atan2(d,m)/Math.PI;g=-g;const u=document.createElementNS("http://www.w3.org/2000/svg","polyline");if(u.setAttribute("points",h),u.setAttribute("stroke-width","4"),u.setAttribute("stroke",b),u.setAttribute("fill","transparent"),u.setAttribute("transform",`rotate(${g},${s},${y.y})`),e.appendChild(u),S){const n=t+.02*_*this.bandWidth,a=y.y+.02*(y.y-r);let i="M"+(n-10)+" "+(a-10);i+=" L"+(n+10)+" "+(a+10),i+=" M"+(n-10)+" "+(a+10),i+=" L"+(n+10)+" "+(a-10);const o=document.createElementNS("http://www.w3.org/2000/svg","path");o.setAttribute("d",i),o.setAttribute("stroke-width","4"),o.setAttribute("stroke","red"),o.setAttribute("fill","transparent"),o.setAttribute("transform",`rotate(${g},${n},${a})`),e.appendChild(o)}const f=.9*Math.sqrt(Math.pow(t-a,2)+Math.pow(y.y-r,2)),v=.9*p;let w=g;w>=90?w-=180:w<=-90&&(w+=180);const x=(a+t)/2,E=(r+y.y)/2,k=document.createElementNS("http://www.w3.org/2000/svg","foreignObject");k.setAttribute("x",""+x),k.setAttribute("y",""+E),k.setAttribute("width",""+f),k.setAttribute("height",""+v),k.style.overflow="visible",k.setAttribute("transform",`rotate(${w},${x},${E}) translate(${-f/2},${-v-3})`);const C=document.createElementNS("http://www.w3.org/1999/xhtml","div");if(C.style.width=f+"px",C.style.textAlign="center","<"===T){const e=Math.floor(.3*v),t=document.createElement("span");t.style.display="inline-block",t.style.borderTop=`${e}px solid transparent`,t.style.borderBottom=`${e}px solid transparent`,t.style.borderRight=`${e}px solid ${b}`,t.style.marginRight="1px",C.appendChild(t)}const P=document.createElement("span");if(P.textContent=this.packetTypeToString(i.data.packet_type)+" : "+(i.data.header?i.data.header.packet_number:""),P.style.color="#383d41",P.style.backgroundColor="#d6d8db",P.style.paddingLeft="5px",P.style.paddingRight="5px",P.style.border="1px white",P.style.borderStyle="none solid",P.style.fontSize=Math.floor(.8*v)+"px",P.onclick=e=>this.onEventClicked(c,n.connection,l),C.appendChild(P),i.data.frames){let e=void 0;if(i.data.frames.length>10){const t=new Map;for(const e of i.data.frames){let n=t.get(e.frame_type);n||(n=new Array,t.set(e.frame_type,n)),n.push(e)}for(const[a,i]of t.entries())if(i.length>5){const e=document.createElement("span"),[t,r]=this.frameTypeToColor(a);e.textContent=i.length+" "+a+" frames (click for details)",e.style.color=r,e.style.backgroundColor=t,e.style.paddingLeft="5px",e.style.paddingRight="5px",e.style.border="1px white",e.style.borderStyle="none solid",e.style.fontSize=Math.floor(.8*v)+"px",e.onclick=e=>this.onEventClicked(c,n.connection,l),">"===T?C.prepend(e):C.appendChild(e)}else e||(e=new Array),e.push(...i)}else e=i.data.frames;if(e)for(const t of e){if(t.qvis&&t.qvis.sequence&&t.qvis.sequence.hide)continue;const e=t,a=document.createElement("span"),[i,r]=this.frameTypeToColor(e.frame_type);a.textContent=this.frameToShortString(e),a.style.color=r,a.style.backgroundColor=i,a.style.paddingLeft="5px",a.style.paddingRight="5px",a.style.border="1px white",a.style.borderStyle="none solid",a.style.fontSize=Math.floor(.8*v)+"px",a.onclick=e=>this.onEventClicked(c,n.connection,l),">"===T?C.prepend(a):C.appendChild(a)}}if(">"===T){const e=Math.floor(.3*v),t=document.createElement("span");t.style.display="inline-block",t.style.borderTop=`${e}px solid transparent`,t.style.borderBottom=`${e}px solid transparent`,t.style.borderLeft=`${e}px solid ${b}`,t.style.marginLeft="1px",C.appendChild(t)}k.appendChild(C),e.appendChild(k)}else if(i.name!==w["TransportEventType"].packet_sent&&i.name!==w["TransportEventType"].packet_received){const o=1.3*f.length*11;let s=a+p/2+o,h=this.bandWidth/2*.9*.9,d="left";0===t&&(d="right",h=this.bandWidth/2*.9-o,s=this.bandWidth/2*.05);const m=.9*p,g=document.createElementNS("http://www.w3.org/2000/svg","foreignObject");g.setAttribute("x",""+s),g.setAttribute("y",""+(r-m/1.25)),g.setAttribute("width",""+h),g.setAttribute("height",""+m),g.style.overflow="visible";const u=document.createElementNS("http://www.w3.org/1999/xhtml","div");u.style.width=""+h,u.style.textAlign=d;const v=document.createElement("span"),[y,_]=this.eventTypeToColor(i);v.textContent=this.eventToShortString(i),v.style.color=_,v.style.backgroundColor=y,v.style.paddingLeft="5px",v.style.paddingRight="5px",v.style.border="1px white",v.style.borderStyle="none solid",v.style.fontSize=Math.floor(.8*m)+"px",v.onclick=e=>this.onEventClicked(c,n.connection,l),u.appendChild(v),g.appendChild(u),e.appendChild(g)}}}t.node().appendChild(e)}}frameTypeToColor(e){return 0===this.frameTypeToColorLUT.size&&(this.frameTypeToColorLUT.set(w["QUICFrameTypeName"].ack,["#03ad25","#FFFFFF"]),this.frameTypeToColorLUT.set(w["QUICFrameTypeName"].stream,["#0468cc","#FFFFFF"]),this.frameTypeToColorLUT.set(w["QUICFrameTypeName"].crypto,["#0468cc","#FFFFFF"]),this.frameTypeToColorLUT.set(w["QUICFrameTypeName"].padding,["#ff69b4","#FFFFFF"]),this.frameTypeToColorLUT.set(w["QUICFrameTypeName"].connection_close,["#a80f3a","#FFFFFF"]),this.frameTypeToColorLUT.set(w["QUICFrameTypeName"].reset_stream,["#a80f3a","#FFFFFF"]),this.frameTypeToColorLUT.set(w["QUICFrameTypeName"].application_close,["#a80f3a","#FFFFFF"]),this.frameTypeToColorLUT.set(w["QUICFrameTypeName"].stop_sending,["#a80f3a","#FFFFFF"]),this.frameTypeToColorLUT.set(w["QUICFrameTypeName"].new_connection_id,["#068484","#FFFFFF"]),this.frameTypeToColorLUT.set(w["QUICFrameTypeName"].retire_connection_id,["#068484","#FFFFFF"]),this.frameTypeToColorLUT.set(w["QUICFrameTypeName"].ping,["#d6dd02","#000000"]),this.frameTypeToColorLUT.set(w["QUICFrameTypeName"].path_challenge,["#d6dd02","#000000"]),this.frameTypeToColorLUT.set(w["QUICFrameTypeName"].path_response,["#d6dd02","#000000"]),this.frameTypeToColorLUT.set(w["QUICFrameTypeName"].max_data,["#5f0984","#FFFFFF"]),this.frameTypeToColorLUT.set(w["QUICFrameTypeName"].max_stream_data,["#5f0984","#FFFFFF"]),this.frameTypeToColorLUT.set(w["QUICFrameTypeName"].max_streams,["#5f0984","#FFFFFF"]),this.frameTypeToColorLUT.set(w["QUICFrameTypeName"].data_blocked,["#5f0984","#FFFFFF"]),this.frameTypeToColorLUT.set(w["QUICFrameTypeName"].streams_blocked,["#5f0984","#FFFFFF"]),this.frameTypeToColorLUT.set(w["QUICFrameTypeName"].stream_data_blocked,["#5f0984","#FFFFFF"])),this.frameTypeToColorLUT.has(e)?this.frameTypeToColorLUT.get(e):["#FF0000","#FFFFFF"]}frameToShortString(e){let t="";switch(e.frame_type){case w["QUICFrameTypeName"].ack:if(t=e.frame_type+" ",e.acked_ranges){const n=e.acked_ranges;for(let e=0;e<n.length;++e){const a=n[e];1===a.length?t+=a[0]:a[0]!==a[1]?t+=a[0]+"-"+a[1]:t+=a[0],e<n.length-1&&(t+=",")}}return""+t;case w["QUICFrameTypeName"].stream:return e.frame_type+" "+e.stream_id+(e.fin?" FIN":"");case w["QUICFrameTypeName"].connection_close:return t=e.frame_type+" ",e.error_code===w["TransportError"].no_error||e.error_code===w["ApplicationError"].http_no_error||0===e.error_code?t+=": clean":t+=e.error_code+" : "+e.reason,t;case w["QUICFrameTypeName"].max_stream_data:return e.maximum&&e.stream_id?"max data "+e.maximum+" (stream "+e.stream_id+")":""+w["QUICFrameTypeName"].max_stream_data;case w["QUICFrameTypeName"].max_data:return e.maximum?"max data "+e.maximum:""+w["QUICFrameTypeName"].max_data;case w["QUICFrameTypeName"].max_streams:return e.maximum&&e.stream_type?"max "+e.maximum+" "+e.stream_type+" streams":""+w["QUICFrameTypeName"].max_streams;case w["QUICFrameTypeName"].streams_blocked:return e.limit&&e.stream_type?"blocked at "+e.limit+" "+e.stream_type+" streams":""+w["QUICFrameTypeName"].streams_blocked;case w["QUICFrameTypeName"].stream_data_blocked:return e.limit&&e.stream_id?"stream "+e.stream_id+"blocked at "+e.limit:""+w["QUICFrameTypeName"].stream_data_blocked;case w["QUICFrameTypeName"].data_blocked:return e.limit?"connection blocked at "+e.limit:""+w["QUICFrameTypeName"].data_blocked;default:return e.frame_type}}eventTypeToColor(e){if(e.name===w["ConnectivityEventType"].connection_id_updated)return this.frameTypeToColor(w["QUICFrameTypeName"].new_connection_id);if(e.name===w["ConnectivityEventType"].spin_bit_updated)return this.frameTypeToColor(w["QUICFrameTypeName"].ping);if(e.name===w["ConnectivityEventType"].connection_state_updated){const t=e.data;if(t.new===w["ConnectionState"].closed||t.new===w["ConnectionState"].draining)return this.frameTypeToColor(w["QUICFrameTypeName"].connection_close)}else{if(e.name===w["RecoveryEventType"].metrics_updated||e.name===w["TransportEventType"].parameters_set||e.name===w["RecoveryEventType"].parameters_set||e.name===w["HTTP3EventType"].parameters_set||"loss_timer_updated"===e.name)return this.frameTypeToColor(w["QUICFrameTypeName"].max_data);if(e.name===w["HTTP3EventType"].frame_created||e.name===w["HTTP3EventType"].frame_parsed)return this.frameTypeToColor(w["QUICFrameTypeName"].stream);if(e.name===w["TransportEventType"].datagrams_sent||e.name===w["TransportEventType"].datagrams_received)return["#FFFFFF","#000000"];if("error"===e.category)return["#FF0000","#000000"];if("warning"===e.category||"simulation"===e.category)return["#FFA500","#000000"];if("debug"===e.category||"info"===e.category||"verbose"===e.category)return["#D3D3D3","#000000"]}return["#FF0000","#FFFFFF"]}eventToShortString(e){let t="";switch(e.name){case w["ConnectivityEventType"].spin_bit_updated:return"Spin "+(e.data.state?"ON":"OFF");case w["RecoveryEventType"].metrics_updated:const n=Object.keys(e.data);let a=0;n.indexOf("cwnd")>=0&&(t+="cwnd: "+e.data.cwnd,a+=1),n.indexOf("smoothed_rtt")>=0&&(a>0&&(t+=", "),t+="srtt: "+e.data.smoothed_rtt,a+=1),n.indexOf("bytes_in_flight")>=0&&(a>0&&(t+=", "),t+="in flight: "+e.data.bytes_in_flight,a+=1),n.indexOf("ssthresh")>=0&&(a>0&&(t+=", "),t+="ssthresh: "+e.data.ssthresh,a+=1);const i=n.length-a;if(a>0&&i>0)t+=", ...";else if(0===a)for(let d=0;d<n.length;++d)t+=n[d]+": "+e.data[n[d]],d!==n.length-1&&(t+=", ");return""+t;case w["RecoveryEventType"].parameters_set:return e.category===w["EventCategory"].recovery?Object.keys(e.data).length+" recovery parameters set":e.category===w["EventCategory"].transport?Object.keys(e.data).length+" transport parameters set":e.category===w["EventCategory"].http?Object.keys(e.data).length+" HTTP/3 parameters set":(console.error("SequenceDiagramD3Renderer:eventToShortString : unknown category for 'parameters_set' event...",e.category),Object.keys(e.data).length+" UNKNOWN parameters set");case w["ConnectivityEventType"].connection_state_updated:return"Connection state: "+e.data.new;case"loss_timer_updated":const r=void 0!==e.data.delta?e.data.delta:e.data.timeout;let o="";"set"===e.data.event_type&&(o=" @ "+(e.relativeTime+e.timeToMilliseconds(r)).toFixed(4));let s="";return void 0!==e.data.packet_number_space&&(s=e.data.packet_number_space+" ","application_data"===e.data.packet_number_space&&(s="appdata ")),s+" "+(void 0!==e.data.timer_type?(""+e.data.timer_type).toUpperCase()+" ":" ")+"timer "+e.data.event_type+o;case w["RecoveryEventType"].packet_lost:if(void 0!==e.data&&void 0!==e.data.packet_number){let t="";return void 0!==e.data.packet_type&&(t=this.packetTypeToString(e.data.packet_type)+" "),t+"packet lost #"+e.data.packet_number}return e.name;case w["RecoveryEventType"].congestion_state_updated:return e.data&&void 0!==e.data.new?"Congestion state: "+(""+e.data.new).replace("_"," "):e.name;case w["HTTP3EventType"].frame_parsed:case w["HTTP3EventType"].frame_created:let c="";if(void 0!==e.data.stream_id&&(c=" (stream "+e.data.stream_id+")"),e.data&&e.data.frame&&e.data.frame.headers){let t=void 0,n=void 0;for(const a of e.data.frame.headers)":method"===a.name||"method"===a.name?t=a.value:":path"!==a.name&&"path"!==a.name||(n=a.value);if(t&&n)return t+" "+n+c}let l="";e.data.frame&&e.data.frame.frame_type&&(l=e.data.frame.frame_type+" ");let h="parsed";return e.name===w["HTTP3EventType"].frame_created&&(h="created"),l+" "+h+c;case"info":case"debug":case"warning":case"error":case"verbose":case"connection_error":case"internal_error":case"application_error":case"internal_warning":case"marker":case"message":return void 0===e.data||void 0===e.data.message?e.name:e.category+": "+e.data.message;default:return e.name}}packetTypeToString(e){switch(e){case w["PacketType"].onertt:case"onertt":return"1RTT";case w["PacketType"].zerortt:case"zerortt":return"0RTT";case w["PacketType"].version_negotiation:return"VNEG";default:return e}}}let at=class extends d["c"]{constructor(){super(...arguments),this.eventDetail="",this.eventDetailExtra=null,this.eventLink=null,this.focusOnNext=null,this.renderer=void 0}get connections(){return this.config.connections}created(){this.renderer=new nt("sequence-diagram","sequence-diagram-svg",this.showEventModal);const e=this.$route.query;e.focusOnConnection&&e.focusOnEvent&&(this.focusOnNext={connectionIndex:parseInt(e.focusOnConnection,10),eventIndex:parseInt(e.focusOnEvent,10)})}mounted(){this.config&&this.renderer&&this.config.connections.length>0&&this.renderer.render(this.config.connections,this.config.timeResolution)}hideEventModal(){this.$bvModal.hide("event-modal")}showEventModal(e,t){this.eventDetail=JSON.stringify(e,null,2),this.eventDetailExtra=void 0!==t?JSON.stringify(t,null,2):null;let n=void 0;if(e.qvis&&e.qvis.sequencediagram&&e.qvis.sequencediagram.focusInfo){const t=e.qvis.sequencediagram.focusInfo;n=t.eventIndex;const a=this.renderer.getTraces(),i=[];for(const e of a)e.connection&&e.connection.parent&&e.connection.parent.URL&&i.indexOf(e.connection.parent.URL)<0&&i.push(e.connection.parent.URL);const r=a[t.connectionIndex];if(r&&i.length>0){let e="";if(1===i.length)e="file="+i[0];else for(let t=0;t<i.length;++t)e+="file"+(t+1)+"="+i[t],t!==i.length-1&&(e+="&");r.connection&&r.connection.parent&&r.connection.parent.URL?this.eventLink="https://qvis.edm.uhasselt.be/?#/sequence?"+e+"&focusOnConnection="+t.connectionIndex+"&focusOnEvent="+t.eventIndex:this.eventLink=null}else this.eventLink=null,console.error("SequenceDiagramRenderer:showEventModal : trying to focus on trace, but doesn't exist: ",t,a)}else this.eventLink=null;void 0!==n&&(this.eventDetail="Event nr: "+n+"\n"+this.eventDetail),this.$bvModal.show("event-modal")}async onConfigChanged(e,t){console.log("SequenceDiagramRenderer:onConfigChanged : ",e,t),this.renderer&&(this.renderer.rendering||(e.connections&&e.connections[0].connection.getEvents().length>1e4&&(d["c"].notify({group:"default",title:"Trace might take long to render",type:"warn",text:"Some large traces can take a long time to render. Please be patient."}),await new Promise(e=>setTimeout(e,200))),this.renderer.render(e.connections,e.timeResolution,this.focusOnNext).then(e=>{this.focusOnNext=null,e||d["c"].notify({group:"default",title:"Trace could not be rendered",type:"error",text:"This trace could not be rendered. There could be an error or a previous file was still rendering.<br/>See the JavaScript devtools for more information."})})))}};Object(l["a"])([Object(d["b"])()],at.prototype,"config",void 0),Object(l["a"])([Object(d["d"])("config",{immediate:!0,deep:!0})],at.prototype,"onConfigChanged",null),at=Object(l["a"])([d["a"]],at);var it=at,rt=it,ot=(n("0d98"),Object(q["a"])(rt,Ze,et,!1,null,null,null)),st=ot.exports,ct=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("div",[e._v("ManualRTT: "+e._s(e.config.manualRTT))]),n("div",[e._v("Scale: "+e._s(e.config.scale))]),n("b-container",{attrs:{fluid:""}},[n("b-row",e._l(e.connections,(function(t,a){return n("b-col",{key:a},[e._v("\n                - "+e._s(a)+" : "+e._s(t.name)+" ( "+e._s(t.parent.description)+" )\n                "),e._l(t.GetEvents(),(function(a,i){return n("div",{key:i},[e._v("\n                    = "+e._s(i)+" : "+e._s(t.parseEvent(a).time)+" "+e._s(t.parseEvent(a).category)+" "+e._s(t.parseEvent(a).name)+" "+e._s(t.parseEvent(a).trigger)+" "+e._s(t.parseEvent(a).data&&t.parseEvent(a).data.header?t.parseEvent(a).data.header.version:"")+"\n                ")])}))],2)})),1)],1)],1)},lt=[];let ht=class extends d["c"]{get connections(){return this.config.connections}onConfigChanged(e,t){console.log("SequenceDiagramSimpleRenderer:onConfigChanged : ",e,t)}};Object(l["a"])([Object(d["b"])()],ht.prototype,"config",void 0),Object(l["a"])([Object(d["d"])("config",{immediate:!0,deep:!0})],ht.prototype,"onConfigChanged",null),ht=Object(l["a"])([d["a"]],ht);var dt=ht,pt=dt,mt=Object(q["a"])(pt,ct,lt,!1,null,null,null),gt=mt.exports;class ut{constructor(){this.connection=void 0}}class ft{constructor(){this.group=void 0}}class vt{constructor(){this.collapsed=!0,this.showwaterfall=!0,this.showbyteranges=!0,this.connections=new Array}}class yt{constructor(){this.collapsed=!0,this.connections=new Array}}let _t=class extends h["d"]{constructor(){super(...arguments),this.congestionGraphConfig=new ut,this.sequenceDiagramConfig=new qe,this.statisticsConfig=new ft,this.multiplexingGraphConfig=new vt,this.packetizationDiagramConfig=new yt}};_t=Object(l["a"])([Object(h["b"])({name:"configurations"})],_t);var Tt=_t;let bt=class extends d["c"]{constructor(){super(...arguments),this.store=Object(h["e"])(Tt,this.$store),this.config=this.store.sequenceDiagramConfig}};bt=Object(l["a"])([Object(d["a"])({components:{SequenceDiagramConfigurator:Ke,SequenceDiagramRenderer:st,SequenceDiagramSimpleRenderer:gt}})],bt);var St=bt,wt=St,xt=Object(q["a"])(wt,Ae,Le,!1,null,null,null),Et=xt.exports;let kt=class extends d["c"]{};kt=Object(l["a"])([Object(d["a"])({components:{SequenceDiagramContainer:Et}})],kt);var Ct=kt,Pt=Ct,Rt=Object(q["a"])(Pt,Fe,De,!1,null,null,null),It=Rt.exports,Gt=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("PacketizationDiagramContainer")],1)},Ot=[],Ft=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"home"},[n("PacketizationDiagramConfigurator",{attrs:{config:e.config}}),n("PacketizationDiagramRenderer",{attrs:{config:e.config}})],1)},Dt=[],At=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticStyle:{"background-color":"#f8d7da",padding:"0px 10px"}},[n("b-container",{attrs:{fluid:""}},[n("b-row",{attrs:{"align-h":"center"}},[n("p",{staticStyle:{"margin-top":"10px"}},[e._v("Select a trace via the dropdown(s) below to visualize it in the packetization diagram")])]),n("b-row",{attrs:{"align-h":"center"}},[e.config.connections.length>0?n("ConnectionConfigurator",{attrs:{allGroups:e.store.groups,connection:e.config.connections[0],canBeRemoved:!1,onConnectionSelected:e.onConnectionSelected}}):e._e()],1),n("b-row",{attrs:{"align-h":"center"}},[n("b-col",{staticClass:"text-center",attrs:{cols:"8"}},[n("div",{staticClass:"text-center"},[n("b-button",{staticClass:"m-auto",staticStyle:{width:"25%"},attrs:{block:""},on:{click:e.toggleInfo}},[e._v("More info on this tool")])],1)])],1),0===this.store.outstandingRequestCount&&0===this.store.groups.length?n("b-alert",{attrs:{show:"",variant:"danger"}},[e._v("Please load a trace file to visualize it")]):0===this.store.groups.length?n("b-alert",{attrs:{show:"",variant:"warning"}},[e._v("Loading files...")]):e._e(),n("b-modal",{attrs:{id:"info-modal",size:"xl","hide-footer":"",title:"PacketizationDiagram info"}},[n("h2",[e._v("How to test?")]),e._v('\n                Load the predefined DEMO files (using the "manage files" tab above) and then select the "'),n("b",[e._v("DEMO_10_parallel_streams")]),e._v("\" file here (the other demo files are a bit flaky on this visualization because they're older and don't always contain all the necessary fields)"),n("br"),e._v("\n\n                You can also upload your own qlog files, but note that this has been tested mainly on client-side traces. Server-side logs should work, but there might be dragons. Let us know if you find any bugs.\n\n            "),n("h2",[e._v("What does it do?")]),n("p",[e._v("\n                The packetization diagram shows how QUIC and HTTP/3 frames are packed inside each other and inside QUIC packets. \n                This helps to see how (especially STREAM and DATA) frames are sized, how packet sizes are modulated, if HTTP/3 frame boundaries don't directly correspond to QUIC boundaries, etc.\n                "),n("ul",[n("li",[e._v("\n                        The bottom row (black and grey) shows the QUIC packets. Each packet has a header (the lower area) and a payload (the higher area). "),n("br"),e._v("\n                        The first packet is black, the second grey, etc. to clearly show when a new packet starts. This use of alternating colors to show clear delineations is consistent for the rest of the diagram as well.\n                    ")]),n("li",[e._v("The second row (red and pink) shows the QUIC frames inside the packet payloads. Each frame has a frame header and a payload.")]),n("li",[e._v("The third row (blue and light blue) show the HTTP/3 frames inside QUIC STREAM frame's payloads. Each HTTP/3 frame has a frame header and a payload.")]),n("li",[e._v("The fourth row (several colors) show to which stream each HTTP/3 frame belongs (if any). This to make it easier to track how streams are multiplexed on the wire.")])]),n("b",[e._v("IMPORTANT: the x-axis does NOT show time but bytes sent/received")]),e._v(". \n                This also means that the two individual x-axis (for the top and bottom diagrams) do not (directly) overlap in time, even though it might appear like that at first glance!\n                To get a better idea of timing, use the sequence diagram"),n("br"),n("br"),e._v("\n\n                You can hover over each element and get a popup with more in-context information on what's present at that location. "),n("br"),e._v("\n                You can also zoom with the scrollwheel and drag to pan the diagram."),n("br"),n("br"),e._v("\n\n                Keep an eye on the browser devtools' JavaScript console: if you see weird behaviour, you'll probably see an error message explaining things there as well.\n            ")]),n("h2",[e._v("How does it work?")]),n("p",[e._v("\n                The visualization currently looks mainly at the following qlog events and attributes to figure out packet and frame sizes:\n                "),n("ul",[n("li",[e._v("packet_sent/packet_received : header : packet_size")]),n("li",[e._v("packet_sent/packet_received : frames[ StreamFrame ] : length")]),n("li",[e._v("frame_parsed/frame_created : byte_length")])]),e._v("\n\n                However, these events are not enough to fully know the sizes of all QUIC frames: we only have explicit (payload) lengths for the stream frames. \n                Because of QUIC's use of variable-length integer encoding for frame headers, it's difficult to know the frame's header and payload sizes (especially for things like ACK frames)."),n("br"),e._v("\n                qlog draft-02 should include fields to allow explicit logging of these lengths. For pre-02, this tool tries to "),n("b",[e._v("guesstimate")]),e._v(' the sizes (and probably gets it wrong).\n                If we fail to correctly guess, we backfill with bright yellow rendered "filler" frames. '),n("br"),n("br"),e._v("\n\n                Note that this means that while the sizes of most QUIC frames (except STREAM frames) are off, the visualization is still accurate in showing which frames were in which packet.\n            ")]),n("h2",[e._v("Also usable for TCP + TLS + HTTP/2")]),n("p",[e._v("\n                This visualization was first created for use with TCP + TLS + HTTP/2, as there the implementations are typically less well aggregated. This often leads to inefficiencies in how data is packed inside the different layers.\n                If you want to use this tool with those protocols as well, create a decrypted trace (so HTTP/2 is decoded) using wireshark (or equivalent) and then output it as JSON (either from wireshark directly or using tshark).\n                You can then upload that as a .json file using the qvis file manager. It has a built-in pcap-to-qlog convertor (or at least the basic of one for this purpose).\n                See the qvis repository for a demo TCP file. \n            ")]),n("b-button",{staticClass:"mt-3 d-block",on:{click:e.toggleInfo}},[e._v("Close")])],1)],1)],1)},Lt=[];let Nt=class extends d["c"]{constructor(){super(...arguments),this.store=Object(h["e"])(A,this.$store),this.infoShown=!1}onConnectionSelected(e){console.log("PacketizationDiagramConfigurator:onConnectionSelected : ",this.config,e),this.config.connections=[e]}get allowSelectAll(){return window.location.toString().indexOf(":8080")>=0}selectAllConnections(){window.holblockinfo=new Array;const e=[];for(const t of this.store.groups)t.filename.indexOf("DEMO")<0&&e.push(...t.getConnections());this.config.connections=e}mounted(){0===this.config.connections.length&&this.store.groups.length>0&&this.selectDefault()}updated(){0===this.config.connections.length&&this.store.groups.length>0&&this.selectDefault()}selectDefault(){console.log("PacketizationDiagramConfigurator:selectDefault: adding new default connection configurator",this.store.groups),this.config.connections=[this.store.groups[0].getConnections()[0]]}toggleInfo(){this.infoShown?this.$bvModal.hide("info-modal"):this.$bvModal.show("info-modal"),this.infoShown=!this.infoShown}};Object(l["a"])([Object(d["b"])()],Nt.prototype,"config",void 0),Nt=Object(l["a"])([Object(d["a"])({components:{ConnectionConfigurator:Be}})],Nt);var Mt,qt=Nt,Ut=qt,zt=(n("11b7"),Object(q["a"])(Ut,At,Lt,!1,null,"08f291f4",null)),Ht=zt.exports,jt=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},Qt=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("div",{staticStyle:{width:"100%","min-height":"200px"},attrs:{id:"packetization-diagram-top"}}),n("div",{staticStyle:{width:"100%","min-height":"200px"},attrs:{id:"packetization-diagram-bottom"}}),n("div",{attrs:{id:"packetization-packet-tooltip"}})])}];(function(e){e[e["sending"]=0]="sending",e[e["receiving"]=1]="receiving"})(Mt||(Mt={}));class Vt{static H3FrameTypeToNumber(e){switch(e.frame_type){case w["HTTP3FrameTypeName"].data:return 0;case w["HTTP3FrameTypeName"].headers:return 1;case w["HTTP3FrameTypeName"].reserved:return 2;case w["HTTP3FrameTypeName"].cancel_push:return 3;case w["HTTP3FrameTypeName"].settings:return 4;case w["HTTP3FrameTypeName"].push_promise:return 5;case w["HTTP3FrameTypeName"].goaway:return 7;case w["HTTP3FrameTypeName"].max_push_id:return 13;case w["HTTP3FrameTypeName"].unknown:return e.raw_frame_type;default:return 0}}static VLIELength(e){return e<=63?1:e<=16383?2:e<=1073741823?4:8}static extractRanges(e,t){const n=new Array;let a=t;if(0===t)return console.warn("Trying to extract ranges for size 0... potential error? Skipping..."),n;while(e.length>0){const i=e.shift();if(i.start+i.size<=i.start+a?n.push(i):(5===t&&a<5&&console.warn("Splitting a header range... server is being bad/naive?",t),e.unshift({start:i.start+a,size:i.size-a}),i.size=a,n.push(i)),i.size<0&&console.error("PacketizationDiagram:extractRanges : Negative size after extracting ranges! Should not happen!",i.size,i,e),a-=i.size,a<0){alert("Remaining length < 0, CANNOT HAPPEN! "+a);break}if(0===a)break}return 0!==a&&alert("Trying to fill payloadranges that aren't there! "+a),n}}class Bt{static StreamIDToColor(e,t){let n;if(n="HTTP2"===t?Bt.H2streamIDColorLUT:Bt.H3streamIDColorLUT,"HTTP2"===t){if(0===n.size&&(n.set("0","#FF0000"),n.set("1","#E1DA4C"),n.set("3","#6B067F"),n.set("5","#E17426"),n.set("7","#914ca8"),n.set("9","#99CBDF"),n.set("11","#C72737"),n.set("13","#BBC585"),n.set("15","#7D787A"),n.set("17","#6CAD58"),n.set("19","#D580AA"),n.set("21","#4C61B9"),n.set("23","#D38E75"),n.set("25","#46198C"),n.set("27","#C8A454")),n.has(e))return[n.get(e),"black"];{let t=parseInt(e,10);return t>27&&(t%=28),n.has(""+t)?[n.get(""+t),"black"]:["lavenderblush","black"]}}if(0===n.size&&(n.set("0","#E1DA4C"),n.set("4","#6B067F"),n.set("8","#E17426"),n.set("12","#914ca8"),n.set("16","#99CBDF"),n.set("20","#C72737"),n.set("24","#BBC585"),n.set("28","#7D787A"),n.set("32","#6CAD58"),n.set("36","#D580AA"),n.set("40","#4C61B9"),n.set("44","#D38E75"),n.set("48","#46198C"),n.set("52","#C8A454")),n.has(e))return[n.get(e),"black"];{let t=parseInt(e,10);return t>52&&(t%=56),n.has(""+t)?[n.get(""+t),"black"]:["lavenderblush","black"]}}}Bt.H2streamIDColorLUT=new Map,Bt.H3streamIDColorLUT=new Map;class Wt{static StreamIDToColor(e,t){return Bt.StreamIDToColor(e,t)}}class Yt{static process(e,t){const n=new Array;let a,i=w["TransportEventType"].packet_received,r=y.record_parsed,o=_.frame_parsed,s="received";t===Mt.sending&&(i=w["TransportEventType"].packet_sent,r=y.record_created,o=_.frame_created,s="sent"),e.vantagePoint&&e.vantagePoint.type===w["VantagePointType"].server?a=_.frame_parsed:e.vantagePoint&&e.vantagePoint.type===w["VantagePointType"].client&&(a=_.frame_created);const c=[],l=[],h=[],d=[];let p=0,m=0,g=0,u=0,f=0,v=0;const T=new Array,S=new Array,x=new Map;for(const y of e.getEvents()){const t=e.parseEvent(y),n=t.data;if(t.name===i){if(0===n.header.payload_length)continue;const e=n.header.header_length+n.header.payload_length;c.push({index:p,isPayload:!1,start:u,size:n.header.header_length,color:p%2===0?"black":"grey",lowerLayerIndex:-1,rawPacket:n}),c.push({index:p,isPayload:!0,start:u+n.header.header_length,size:n.header.payload_length,color:p%2===0?"black":"grey",lowerLayerIndex:-1,rawPacket:n}),T.push({start:u+n.header.header_length,size:n.header.payload_length}),u+=e,++p}else if(t.name===r){const e=Math.max(0,n.header.payload_length),t=n.header.header_length+e+n.header.trailer_length,a=Vt.extractRanges(T,n.header.header_length);for(const r of a)l.push({isPayload:!1,contentType:n.header.content_type,index:m,lowerLayerIndex:p-1,start:r.start,size:r.size,color:m%2===0?"red":"pink",extra:{DEBUG_wiresharkFrameNumber:n.header.DEBUG_wiresharkFrameNumber,record_length:t,payload_length:e},rawPacket:n});const i=Vt.extractRanges(T,e);for(const r of i)l.push({isPayload:!0,contentType:n.header.content_type,index:m,lowerLayerIndex:p-1,start:r.start,size:r.size,color:m%2===0?"red":"pink",extra:{DEBUG_wiresharkFrameNumber:n.header.DEBUG_wiresharkFrameNumber,record_length:t,payload_length:e},rawPacket:n}),"application"===n.header.content_type&&(S.push({start:r.start,size:r.size}),f+=r.size);if(0!==n.header.trailer_length){const a=Vt.extractRanges(T,n.header.trailer_length);for(const i of a)l.push({isPayload:!1,contentType:n.header.content_type,index:m,lowerLayerIndex:p-1,start:i.start,size:i.size,color:m%2===0?"red":"pink",extra:{DEBUG_wiresharkFrameNumber:n.header.DEBUG_wiresharkFrameNumber,record_length:t,payload_length:e},rawPacket:n})}++m}else if(t.name===o){if(n.header_length>0){const e=Vt.extractRanges(S,n.header_length);for(const t of e)if(h.push({isPayload:!1,contentType:n.content_type,index:g,lowerLayerIndex:m-1,start:t.start,size:t.size,color:g%2===0?"blue":"lightblue",extra:{frame_length:n.header_length+n.payload_length},rawPacket:n}),void 0!==n.stream_id){const e=parseInt(n.stream_id,10);d.push({isPayload:!0,contentType:n.content_type,index:g,lowerLayerIndex:m-1,start:t.start,size:t.size,color:Wt.StreamIDToColor(""+e,"HTTP2")[0],extra:{frame_length:n.header_length+n.payload_length},rawPacket:n})}v+=n.header_length}if(n.payload_length>0){const e=Vt.extractRanges(S,n.payload_length);for(const t of e)if(h.push({isPayload:!0,contentType:n.content_type,index:g,lowerLayerIndex:m-1,start:t.start,size:t.size,color:g%2===0?"blue":"lightblue",extra:{frame_length:n.header_length+n.payload_length},rawPacket:n}),void 0!==n.stream_id){const e=parseInt(n.stream_id,10);d.push({isPayload:!0,contentType:n.content_type,index:g,lowerLayerIndex:m-1,start:t.start,size:t.size,color:Wt.StreamIDToColor(""+e,"HTTP2")[0],extra:{frame_length:n.header_length+n.payload_length},rawPacket:n})}if(t.data.frame&&t.data.frame.frame_type===b.data){const e=parseInt(t.data.stream_id,10);0!==e&&(x.has(e)?x.get(e).total_size+=n.payload_length:console.error("PacketizationTCPPreprocessor: trying to increase payload size sum, but streamID not yet known! Potentially Server Push (which we don't support yet)",e,x))}v+=n.payload_length}else n.frame.frame_type!==b.settings&&console.warn("PacketizationTCPPreprocessor: Found HTTP frame without payload length... potential error?",n);++g}if(t.name===a&&t.data.frame.frame_type===b.headers){const e=parseInt(t.data.stream_id,10);x.has(e)?console.error("PacketizationTCPPreprocessor: HTTPStreamInfo already had an entry for this stream",e,x,t.data):x.set(e,{headers:t.data.frame.headers,total_size:0})}}return 0===T.length&&0===S.length||console.error("PacketizationTCPPreprocessor: Not all payload ranges were used up!",T,S),f!==v&&console.error("TLS payload size != HTTP payload size","TLS: ",f,"HTTP: ",v,"Diff : ",Math.abs(f-v)),n.push({name:"TCP",CSSClassName:"tcppacket",ranges:c,rangeToString:Yt.tcpRangeToString}),n.push({name:"TLS",CSSClassName:"tlspacket",ranges:l,rangeToString:Yt.tlsRangeToString}),n.push({name:"HTTP/2",CSSClassName:"httppacket",ranges:h,rangeToString:e=>{return Yt.httpRangeToString(e,x)}}),n.push({name:"Stream IDs",CSSClassName:"streampacket",ranges:d,rangeToString:e=>{return Yt.streamRangeToString(e,x)},heightModifier:.6}),n}static tcpRangeToString(e){let t="TCP ";return t+=(e.isPayload?"Payload #":"Header #")+e.index+" : packet size "+e.size+"<br/>",t}static tlsRangeToString(e){let t="TLS ";return t+=(e.isPayload?"Payload #":e.size>5?"Trailer (MAC/auth tag/padding/content type) ":"Header #")+e.index,t+=" (TCP index: "+e.lowerLayerIndex+") : record size "+e.extra.record_length+", partial size "+e.size+"<br/>",e.extra.DEBUG_wiresharkFrameNumber&&(t+="Wireshark frame number (DEBUG): "+e.extra.DEBUG_wiresharkFrameNumber+"<br/>"),t+="content type: "+e.contentType,t}static httpRangeToString(e,t){let n="H2 ";n+=(e.isPayload?"Payload #":"Header #")+" (TLS index: "+e.lowerLayerIndex+") : frame size "+e.rawPacket.payload_length+", partial size : "+e.size+"<br/>",n+="frame type: "+e.rawPacket.frame.frame_type+", streamID: "+e.rawPacket.stream_id,e.rawPacket.frame.stream_end&&(n+="<br/>",n+="<b>STREAM END BIT SET</b>");const a=t.get(parseInt(e.rawPacket.stream_id,10));if(a){n+="<br/>";let e="",t="";for(const n of a.headers)":method"===n.name?e=n.value:":path"===n.name&&(t=n.value);n+=e+": "+t+"<br/>",n+="total resource size: "+a.total_size+"<br/>"}return n}static streamRangeToString(e,t){let n="H2 ";n+="streamID: "+e.rawPacket.stream_id,e.rawPacket.frame.stream_end&&(n+="<br/>",n+="<b>STREAM END BIT SET</b>");const a=t.get(parseInt(e.rawPacket.stream_id,10));if(a){n+="<br/>";let e="",t="";for(const n of a.headers)":method"===n.name?e=n.value:":path"===n.name&&(t=n.value);n+=e+": "+t+"<br/>",n+="total resource size: "+a.total_size+"<br/>"}return n}}class Xt{static process(e,t){const n=new Array;Xt.frameSizeErrorShown=!1;let a,i=w["TransportEventType"].packet_received,r=w["HTTP3EventType"].frame_parsed;t===Mt.sending&&(i=w["TransportEventType"].packet_sent,r=w["HTTP3EventType"].frame_created),e.vantagePoint&&e.vantagePoint.type===w["VantagePointType"].server?a=w["HTTP3EventType"].frame_parsed:e.vantagePoint&&e.vantagePoint.type===w["VantagePointType"].client&&(a=w["HTTP3EventType"].frame_created);let o=65527,s=65527;const c=[],l=[],h=[],d=[];let p=0,m=0,g=0,u=0,f=0,v=0,y=0,_=0;const T=new Map,b=new Map,S=new Map,x=(e,t)=>{while(e.length>0){const n=e.shift(),a=parseInt(n.byte_length,10),i=Vt.VLIELength(Vt.H3FrameTypeToNumber(n.frame))+Vt.VLIELength(a),r=t.reduce((e,t)=>e+t.size,0);if(r<i+a){e.unshift(n);break}const o=Vt.extractRanges(t,i);for(const e of o)if(h.push({isPayload:!1,contentType:n.frame.frame_type,index:g,lowerLayerIndex:m-1,start:e.start,size:e.size,color:g%2===0?"blue":"lightblue",extra:{frame_length:i+a},rawPacket:n}),void 0!==n.stream_id){const t=parseInt(n.stream_id,10);d.push({isPayload:!0,contentType:n.frame.frame_type,index:g,lowerLayerIndex:m-1,start:e.start,size:e.size,color:Wt.StreamIDToColor(""+t,"HTTP3")[0],extra:{frame_length:i+a},rawPacket:n})}if(v+=i,a>0){const e=Vt.extractRanges(t,a);for(const t of e)if(h.push({isPayload:!0,contentType:n.frame.frame_type,index:g,lowerLayerIndex:m,start:t.start,size:t.size,color:g%2===0?"blue":"lightblue",extra:{frame_length:i+a},rawPacket:n}),void 0!==n.stream_id){const e=parseInt(n.stream_id,10);d.push({isPayload:!0,contentType:n.frame.frame_type,index:g,lowerLayerIndex:m,start:t.start,size:t.size,color:Wt.StreamIDToColor(""+e,"HTTP3")[0],extra:{frame_length:i+a},rawPacket:n})}if(n.frame&&n.frame.frame_type===w["HTTP3FrameTypeName"].data){const e=parseInt(n.stream_id,10);0!==e&&(S.has(e)?S.get(e).total_size+=a:console.error("PacketizationDiagram: trying to increase payload size sum, but streamID not yet known! Potentially Server Push (which we don't support yet)",e,S))}!n.frame||n.frame.frame_type!==w["HTTP3FrameTypeName"].data&&n.frame.frame_type!==w["HTTP3FrameTypeName"].headers||(_+=a),v+=a}++g}};for(const C of e.getEvents()){const n=e.parseEvent(C),h=n.data;if(n.name===i){if(!h.header.packet_size){console.error("PacketizationQUICPreProcessor: packet without header.packet_size set... ignoring",i,C);continue}const e=parseInt(h.header.packet_size,10),t=16;let n=h.header.payload_length-t,a=e-n;if(h.header.payload_length||(a=(h.packet_type,w["PacketType"].onertt,Math.min(4,e)),n=e-a-t),c.push({index:p,isPayload:!1,start:u,size:a,color:p%2===0?"black":"grey",contentType:h.packet_type,lowerLayerIndex:-1,rawPacket:h}),c.push({index:p,isPayload:!0,start:u+a,size:n,color:p%2===0?"black":"grey",contentType:h.packet_type,lowerLayerIndex:-1,rawPacket:h}),c.push({index:p,isPayload:!1,start:u+a+n,size:t,color:p%2===0?"black":"grey",contentType:h.packet_type,lowerLayerIndex:-1,rawPacket:h}),h.frames){let e=u+a;const t=Xt.backfillFrameSizes(n,h.frames);if(0!==t){const e={header_size:t,payload_size:0,frame_type:"qvis-injected FILLER (deal with incorrectly guesstimated frame size)",qvis:{sequence:{hide:!0}}};h.frames.unshift(e)}for(const n of h.frames){if(n.header_size>0&&l.push({index:n.frame_type.indexOf("qvis")>=0?-1:m,isPayload:!1,start:e,size:n.header_size,color:n.frame_type.indexOf("qvis")>=0?"yellow":m%2===0?"red":"pink",contentType:n.frame_type,lowerLayerIndex:p,rawPacket:n}),n.payload_size>0&&(l.push({index:m,isPayload:!0,start:e+n.header_size,size:n.payload_size,color:m%2===0?"red":"pink",contentType:n.frame_type,lowerLayerIndex:p,rawPacket:n}),n.frame_type===w["QUICFrameTypeName"].stream)){f+=n.payload_size;let t=T.get(""+n.stream_id);t||(t=new Array,T.set(""+n.stream_id,t)),t.push({start:e+n.header_size,size:n.payload_size});const a=b.get(""+n.stream_id);a&&a.length>0&&x(a,t),void 0!==n.stream_id&&n.stream_id%2!==0&&console.log("PacketizationPreProcessor: data seen on unidirectional stream: ",n.stream_id,n,h)}e+=n.header_size+n.payload_size,n.frame_type.indexOf("qvis")<0&&++m}}u+=e,++p,y+=e}else if(n.name===r){if(!h.byte_length){console.error("H3 frame didn't have byte_length set! skipping...",h);continue}const e=T.get(""+h.stream_id);let n=!1;if(!e){if(t!==Mt.sending){console.error("No payload ranges known for this stream_id, skipping...",e,h.stream_id,JSON.stringify(T));continue}n=!0}let a=b.get(""+h.stream_id);a||(a=new Array,b.set(""+h.stream_id,a)),a.push(h),n||x(a,e)}if(n.name===a&&n.data.frame.frame_type===w["HTTP3FrameTypeName"].headers){const e=parseInt(n.data.stream_id,10);S.has(e)?console.error("PacketizationQUICPreprocessor: HTTPStreamInfo already had an entry for this stream",e,S,n.data):S.set(e,{headers:n.data.frame.headers,total_size:0})}n.name===w["TransportEventType"].parameters_set&&(h.owner&&"local"===h.owner?h.max_packet_size&&(o=h.max_packet_size):h.owner&&"remote"===h.owner&&h.max_packet_size&&(s=h.max_packet_size))}let E=0;for(const w of T.entries()){const e=parseInt(w[0],10);if((e+1)%4===0)for(const t of w[1])E+=t.size;else if((e+2)%4===0)for(const t of w[1])E+=t.size;else 0!==w[1].length&&console.error("PacketizationQUICPreprocessor: Not all QUIC payload ranges were used up!",w[0],JSON.stringify(w[1]),b.get(""+w[0]))}for(const w of b.entries())0!==w[1].length&&console.error("PacketizationQUICPreprocessor: Not all HTTP3 frames found a home!",w[0],JSON.stringify(w[1]));if(f!==v){const e=v+E;f!==e&&console.error("QUIC payload size != HTTP3 payload size","QUIC: ",f,"HTTP: ",v,"HTTP leftover on control streams: ",E,"Diff : ",Math.abs(f-v))}const k=_/y;return n.push({name:"QUIC packets",CSSClassName:"quicpacket",ranges:c,rangeToString:Xt.quicRangeToString,max_size_local:o,max_size_remote:s,efficiency:k}),n.push({name:"QUIC frames",CSSClassName:"quicframe",ranges:l,rangeToString:Xt.quicFrameRangeToString}),n.push({name:"HTTP/3",CSSClassName:"httpframe",ranges:h,rangeToString:e=>{return Xt.httpFrameRangeToString(e,S)}}),n.push({name:"Stream IDs",CSSClassName:"streampacket",ranges:d,rangeToString:e=>{return Xt.streamRangeToString(e,S)},heightModifier:.6}),n}static quicRangeToString(e){let t="QUIC ";return t+=(e.isPayload?"Payload #":16===e.size?"Trailer (authentication tag) #":"Header #")+e.index+" : size "+e.size+"<br/>",t+="Packet type : "+e.contentType+", Packet nr : "+e.rawPacket.header.packet_number+"<br/>",t}static quicFrameRangeToString(e){let t="QUIC Frame #"+e.index+" : size "+e.size+"<br/>";return t+="Frame type : "+e.contentType+", stream ID: "+(e.rawPacket&&void 0!==e.rawPacket.stream_id?e.rawPacket.stream_id:"none")+"<br/>",e.rawPacket&&!0===e.rawPacket.fin&&(t+="<b>FIN BIT SET</b>"),t}static httpFrameRangeToString(e,t){let n="H3 ";n+=(e.isPayload?"Payload #":"Header #")+e.index+" (QUIC frame index: "+e.lowerLayerIndex+") : frame size "+e.extra.frame_length+", partial size : "+e.size+"<br/>",n+="frame type: "+e.rawPacket.frame.frame_type+", streamID: "+e.rawPacket.stream_id;const a=t.get(parseInt(e.rawPacket.stream_id,10));if(a){n+="<br/>";let e="",t="";for(const n of a.headers)":method"===n.name?e=n.value:":path"===n.name&&(t=n.value);n+=e+": "+t+"<br/>",n+="total resource size: "+a.total_size+"<br/>"}return n}static streamRangeToString(e,t){let n="H3 ";n+="streamID: "+e.rawPacket.stream_id;const a=t.get(parseInt(e.rawPacket.stream_id,10));if(a){n+="<br/>";let e="",t="";for(const n of a.headers)":method"===n.name?e=n.value:":path"===n.name&&(t=n.value);n+=e+": "+t+"<br/>",n+="total resource size: "+a.total_size+"<br/>"}return n}static backfillFrameSizes(e,t){let n=0;if(t[0].frame_size){let a=0;for(const e of t)a+=e.frame_size;n+=e-a,0!==n&&console.error("PacketizationQUICPreProcessor: frame_sizes don't fill the entire packet payload!",n)}else{Xt.frameSizeErrorShown||(console.error("PacketizationQUICPreProcessor: qlog trace does not have frame_size fields set properly. We -guesstimate- them here, so exact frame sizes are expected to be off!"),Xt.frameSizeErrorShown=!0);let a=0;const i=1;let r=0;for(const e of t)e.frame_type===w["QUICFrameTypeName"].stream&&(void 0!==e.length?(e.frame_size=i+parseInt(e.length,10),a+=e.frame_size):console.error("PacketizationQUICPreProcessor: stream frame with no length attribute! skipping...",e)),e.frame_type===w["QUICFrameTypeName"].max_streams?e.frame_size=i+4:r++;const o=e-a;if(o<0)return console.error("PacketizationQUICPreProcessor: something went wrong calculating frame sizes!",e,a,t),0;const s=Math.floor(o/r);for(const e of t)e.frame_type!==w["QUICFrameTypeName"].stream&&(e.frame_size=s,a+=e.frame_size);e-a<0&&console.error("PacketizationQUICPreProcessor: payload is longer than payload! Shouldn't happen!",e,a,s,t),n+=e-a}for(const a of t)a.length?(a.header_size=a.frame_size-a.length,a.payload_size=parseInt(a.length,10)):(a.header_size=a.frame_size,a.payload_size=0);return n}}Xt.frameSizeErrorShown=!1;class $t{constructor(e){this.axisLocation="bottom",this.rendering=!1,this.totalHeight=100,this.dimensions={},this.containerID=e}getDirection(){return this.direction}async render(e,t){if(this.rendering)return!1;console.log("PacketizationDiagramD3Renderer:render",e),this.rendering=!0;const n=this.setup(e,t);return n?(await this.renderLive(),this.rendering=!1,!0):(this.rendering=!1,!1)}setup(e,t){this.connection=e,this.connection.setupLookupTable(),this.direction=t;const n=document.getElementById(this.containerID);return this.dimensions.margin={top:30,right:Math.round(.05*n.clientWidth),bottom:20,left:100},"top"===this.axisLocation?this.dimensions.margin.top=30:this.dimensions.margin.bottom=40,this.dimensions.width=n.clientWidth-this.dimensions.margin.left-this.dimensions.margin.right,this.dimensions.height=this.totalHeight,tt["j"]("#"+this.containerID).selectAll("*").remove(),this.svg=tt["j"]("#"+this.containerID).append("svg").attr("width",this.dimensions.width+this.dimensions.margin.left+this.dimensions.margin.right).attr("height",this.dimensions.height+this.dimensions.margin.top+this.dimensions.margin.bottom).attr("xmlns","http://www.w3.org/2000/svg").attr("xmlns:xlink","http://www.w3.org/1999/xlink").attr("font-family","Trebuchet-ms").append("g").attr("transform","translate("+this.dimensions.margin.left+","+this.dimensions.margin.top+")"),this.tooltip=tt["j"]("#packetization-packet-tooltip").style("opacity",0).style("position","absolute").style("padding","5px").style("pointer-events","none").style("background","lightsteelblue"),!0}async renderLive(){console.log("Rendering packetization diagram");let e=[];e=this.connection.commonFields&&"TCP_HTTP2"===this.connection.commonFields.protocol_type?Yt.process(this.connection,this.direction):Xt.process(this.connection,this.direction);let t=0;if(e.length>0&&e[0].ranges&&e[0].ranges.length>0){const n=e[0].ranges;t=n[n.length-1].start+n[n.length-1].size}console.log("PacketizationDiagram: rendering data",e);this.svg.append("defs").append("SVG:clipPath").attr("id","clip").append("SVG:rect").attr("width",this.dimensions.width).attr("height",this.dimensions.height).attr("x",0).attr("y",0);const n=this.svg.append("g").attr("clip-path","url(#clip)"),a=.3,i=tt["i"]().domain([0,t]).range([0,this.dimensions.width]),r=this.svg.append("g");"top"===this.axisLocation?r.call(tt["d"](i)):r.attr("transform","translate(0,"+this.dimensions.height+")").call(tt["a"](i));const o=(e,t,n)=>{this.tooltip.transition().duration(100).style("opacity",.95);const a=e(t);this.tooltip.html(a).style("left",tt["g"].pageX+15+"px").style("top",tt["g"].pageY-75+"px")},s=(e,t)=>{this.tooltip.transition().duration(200).style("opacity",0)},c=this.totalHeight*(1/e.length),l=e.reduce((e,t)=>{return e.push("."+t.CSSClassName),e},new Array).join(",");for(const[m,g]of e.entries()){const t=e.length-m-1,r=void 0!==g.heightModifier?g.heightModifier:1;n.selectAll("rect."+g.CSSClassName).data(g.ranges).enter().append("rect").attr("x",e=>i(e.start)-a).attr("y",e=>c*t+c*(e.isPayload?0:.4)).attr("fill",e=>e.color).style("opacity",1).attr("class",g.CSSClassName).attr("width",e=>i(e.start+e.size)-i(e.start)+2*a).attr("height",e=>r*(c*(e.isPayload?1:.6))).style("pointer-events","all").on("mouseover",(e,t)=>{return o(g.rangeToString,e,t)}).on("mouseout",s),this.svg.append("g").append("text").attr("x",-5).attr("y",c*t+c/1.75).attr("dominant-baseline","middle").style("text-anchor","end").style("font-size","14").style("font-family","Trebuchet MS").attr("fill","#000000").text(g.name)}if(this.svg.append("g").append("text").attr("x",i(t/2)).attr("y",this.dimensions.height+this.dimensions.margin.bottom-10).attr("dominant-baseline","baseline").style("text-anchor","middle").style("font-size","14").style("font-family","Trebuchet MS").attr("fill","#000000").text("Bytes "+(this.direction===Mt.sending?"sent":"received")),e[0].max_size_local){const n=this.connection.vantagePoint&&this.connection.vantagePoint.type===w["VantagePointType"].server?"server":"client",a="client"===n?"server":"client";this.svg.append("g").append("text").attr("x",i(t)-450).attr("y",this.dimensions.height+this.dimensions.margin.bottom-10).attr("dominant-baseline","baseline").style("text-anchor","start").style("font-size","14").style("font-family","Trebuchet MS").attr("fill","#000000").text("max receiving size "+n+": "+e[0].max_size_local),this.svg.append("g").append("text").attr("x",i(t)).attr("y",this.dimensions.height+this.dimensions.margin.bottom-10).attr("dominant-baseline","baseline").style("text-anchor","end").style("font-size","14").style("font-family","Trebuchet MS").attr("fill","#000000").text("max receiving size "+a+": "+e[0].max_size_remote)}e[0].efficiency&&this.svg.append("g").append("text").attr("x",i(0)).attr("y",this.dimensions.height+this.dimensions.margin.bottom-10).attr("dominant-baseline","baseline").style("text-anchor","start").style("font-size","14").style("font-family","Trebuchet MS").attr("fill","#000000").text("efficiency "+(100*e[0].efficiency).toFixed(2)+"%");let h="";this.connection.vantagePoint&&this.connection.vantagePoint.type===w["VantagePointType"].server?h=this.direction===Mt.sending?"Data sent from server to client (trace vantagepoint = server)":"Data received by server from client (trace vantagepoint = server)":this.connection.vantagePoint&&this.connection.vantagePoint.type===w["VantagePointType"].client&&(h=this.direction===Mt.sending?"Data sent from client to server (trace vantagepoint = client)":"Data received by client from server (trace vantagepoint = client)"),this.svg.append("g").append("text").attr("x",i(t/2)).attr("y",-10).attr("dominant-baseline","baseline").style("text-anchor","middle").style("font-size","14").style("font-family","Trebuchet MS").attr("fill","#000000").text(h);const d=()=>{const e=tt["g"].transform.rescaleX(i);"top"===this.axisLocation?r.call(tt["d"](e)):r.call(tt["a"](e)),n.selectAll(l).attr("x",t=>e(t.start)-a).attr("width",t=>e(t.start+t.size)-e(t.start)+2*a)},p=tt["k"]().scaleExtent([1,2e3]).translateExtent([[0,0],[this.dimensions.width,this.dimensions.height]]).extent([[0,0],[this.dimensions.width,this.dimensions.height]]).on("zoom",d);this.svg.call(p)}}let Jt=class extends d["c"]{constructor(){super(...arguments),this.eventDetail="",this.rendererTop=void 0,this.rendererBottom=void 0}get connections(){return this.config.connections}created(){this.rendererTop=new $t("packetization-diagram-top"),this.rendererBottom=new $t("packetization-diagram-bottom")}mounted(){this.config&&this.rendererTop&&this.rendererBottom&&this.config.connections.length>0&&(this.rendererTop.render(this.config.connections[0],Mt.receiving),this.rendererBottom.render(this.config.connections[0],Mt.sending))}async onConfigChanged(e,t){console.log("PacketizationDiagramRenderer:onConfigChanged : ",e,t),this.rendererTop&&this.rendererBottom&&(this.rendererTop.rendering||(e.connections&&e.connections[0].getEvents().length>1e4&&(d["c"].notify({group:"default",title:"Trace might take long to render",type:"warn",text:"Some large traces can take a long time to render. Please be patient."}),await new Promise(e=>setTimeout(e,200))),this.rendererTop.render(e.connections[0],Mt.receiving).then(e=>{e||d["c"].notify({group:"default",title:"Trace could not be rendered",type:"error",text:"This trace could not be rendered. There could be an error or a previous file was still rendering.<br/>See the JavaScript devtools for more information."})}),this.rendererBottom.render(e.connections[0],Mt.sending).then(e=>{e||d["c"].notify({group:"default",title:"Trace could not be rendered",type:"error",text:"This trace could not be rendered. There could be an error or a previous file was still rendering.<br/>See the JavaScript devtools for more information."})})))}};Object(l["a"])([Object(d["b"])()],Jt.prototype,"config",void 0),Object(l["a"])([Object(d["d"])("config",{immediate:!0,deep:!0})],Jt.prototype,"onConfigChanged",null),Jt=Object(l["a"])([d["a"]],Jt);var Kt=Jt,Zt=Kt,en=Object(q["a"])(Zt,jt,Qt,!1,null,null,null),tn=en.exports;let nn=class extends d["c"]{constructor(){super(...arguments),this.store=Object(h["e"])(Tt,this.$store),this.config=this.store.packetizationDiagramConfig}};nn=Object(l["a"])([Object(d["a"])({components:{PacketizationDiagramConfigurator:Ht,PacketizationDiagramRenderer:tn}})],nn);var an=nn,rn=an,on=Object(q["a"])(rn,Ft,Dt,!1,null,null,null),sn=on.exports;let cn=class extends d["c"]{};cn=Object(l["a"])([Object(d["a"])({components:{PacketizationDiagramContainer:sn}})],cn);var ln=cn,hn=ln,dn=Object(q["a"])(hn,Gt,Ot,!1,null,null,null),pn=dn.exports,mn=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("CongestionGraphContainer")],1)},gn=[],un=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"home"},[n("CongestionGraphConfigurator",{attrs:{config:e.config}}),e._m(0),n("CongestionGraphRenderer",{attrs:{config:e.config}})],1)},fn=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticStyle:{position:"absolute",display:"none","z-index":"100",padding:"5px",border:"1px solid black","background-color":"white"},attrs:{id:"packetInfo"}},[n("p",{attrs:{id:"timestamp"}}),n("p",{attrs:{id:"packetNr"}}),n("p",{attrs:{id:"packetSize"}}),n("p",{attrs:{id:"ackedFrom"}}),n("p",{attrs:{id:"ackedTo"}})])}],vn=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticStyle:{"background-color":"#d4edda",padding:"0px 10px"}},[n("b-container",{attrs:{fluid:""}},[n("b-row",{attrs:{"align-h":"center"}},[n("p",{staticStyle:{"margin-top":"10px"}},[e._v("Select a trace via the dropdown(s) below to visualize it in the congestion graph")])]),n("b-row",{attrs:{"align-h":"center"}},[void 0!==e.config.connection?n("ConnectionConfigurator",{attrs:{allGroups:e.store.groups,connection:e.config.connection,canBeRemoved:!1,onConnectionSelected:e.onConnectionSelected}}):e._e()],1),n("b-row",{attrs:{"align-h":"center"}},[n("b-button",{on:{click:function(t){return e.resetZoom()}}},[e._v("Reset zoom")]),n("b-button",{directives:[{name:"b-tooltip",rawName:"v-b-tooltip.hover",modifiers:{hover:!0}}],attrs:{title:"Click this button, then drag and drop a horizontal time range to zoom in on."},on:{click:function(t){return e.useBrushX()}}},[e._v("Zoom timerange")]),n("b-button",{directives:[{name:"b-tooltip",rawName:"v-b-tooltip.hover",modifiers:{hover:!0}}],attrs:{title:"Click this button, then drag and drop a rectangular area to zoom in on."},on:{click:function(t){return e.useBrush2d()}}},[e._v("Zoom area")]),n("b-button",{directives:[{name:"b-tooltip",rawName:"v-b-tooltip.hover",modifiers:{hover:!0}}],attrs:{title:"Click this button or press R, then drag and drop a line to see the time and byte ranges it spans"},on:{click:function(t){return e.useRuler()}}},[e._v("Ruler (press R)")]),n("b-button",{on:{click:function(t){return e.toggleCongestionGraph()}}},[e._v("Toggle congestion info")])],1),0===this.store.outstandingRequestCount&&0===this.store.groups.length?n("b-alert",{attrs:{show:"",variant:"danger"}},[e._v("Please load a trace file to visualize it")]):0===this.store.groups.length?n("b-alert",{attrs:{show:"",variant:"warning"}},[e._v("Loading files...")]):e._e()],1)],1)},yn=[];let _n=class extends d["c"]{constructor(){super(...arguments),this.store=Object(h["e"])(A,this.$store)}onConnectionSelected(e){console.log("CongestionGraphConfigurator:onConnectionSelected : ",this.config,e),this.config.connection=e}resetZoom(){this.config.renderer.resetZoom()}useBrushX(){this.config.renderer.useBrushX()}useBrush2d(){this.config.renderer.useBrush2d()}useRuler(e){e&&"KeyR"!==e.code||(console.log("CongestionGraphConfigurator: Using ruler"),this.config.renderer.useRuler())}toggleCongestionGraph(){this.config.renderer.toggleCongestionGraph()}togglePerspective(){this.config.renderer.togglePerspective()}get isClientSideTrace(){return this.config&&this.config.connection&&this.config.connection.vantagePoint&&(this.config.connection.vantagePoint.type===w["VantagePointType"].client||this.config.connection.vantagePoint.flow===w["VantagePointType"].client)}mounted(){void 0===this.config.connection&&this.store.groups.length>0&&this.selectDefault(),document.addEventListener("keyup",this.useRuler)}beforeDestroy(){document.removeEventListener("keyup",this.useRuler)}updated(){void 0===this.config.connection&&this.store.groups.length>0&&this.selectDefault()}selectDefault(){console.log("selectDefault: adding new default connection configurator",this.store.groups),this.config.connection=this.store.groups[0].getConnections()[0]}};Object(l["a"])([Object(d["b"])()],_n.prototype,"config",void 0),_n=Object(l["a"])([Object(d["a"])({components:{ConnectionConfigurator:Be}})],_n);var Tn=_n,bn=Tn,Sn=(n("c011"),Object(q["a"])(bn,vn,yn,!1,null,"ee54e634",null)),wn=Sn.exports,xn=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("div",{staticStyle:{width:"100%",border:"5px solid #d4edda","min-height":"200px",position:"relative"},attrs:{id:"congestion-graph"}},[n("div",{staticStyle:{padding:"5px",border:"1px solid black","background-color":"white",position:"absolute",top:"10px",left:"80px","z-index":"100"},attrs:{id:"legendPackets"},on:{mouseenter:e.hideLegend,mouseleave:e.showLegend}},[e._m(0),e._m(1),e._m(2),e._m(3),e._m(4)]),n("div",{staticStyle:{padding:"5px",border:"1px solid black","background-color":"white",position:"absolute",top:"440px",right:"50px","z-index":"100"},attrs:{id:"legendMetrics"},on:{mouseenter:e.hideLegend,mouseleave:e.showLegend}},[e._m(5),e._m(6)]),n("div",{staticStyle:{padding:"5px",border:"1px solid black","background-color":"white",position:"absolute",top:"795px",right:"50px","z-index":"100"},attrs:{id:"legendRTT"},on:{mouseenter:e.hideLegend,mouseleave:e.showLegend}},[e._m(7),e._m(8),e._m(9)])])])},En=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",{staticStyle:{padding:"0",margin:"10px 0"}},[n("span",{staticStyle:{width:"12px",height:"8px","background-color":"blue",display:"inline-block","margin-right":"1px","vertical-align":"middle"}}),e._v(" \n                : Data sent (includes retransmits)\n            ")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",{staticStyle:{padding:"0",margin:"10px 0"}},[n("span",{staticStyle:{width:"12px",height:"8px","background-color":"#6B8E23",display:"inline-block","margin-right":"1px","vertical-align":"middle"}}),e._v(" \n                : Data acknowledged\n            ")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",{staticStyle:{padding:"0",margin:"10px 0"}},[n("span",{staticStyle:{width:"12px",height:"8px","background-color":"red",display:"inline-block","margin-right":"1px","vertical-align":"middle"}}),e._v(" \n                : Data lost\n            ")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",{staticStyle:{padding:"0",margin:"10px 0"}},[n("span",{staticStyle:{width:"12px",height:"8px","background-color":"#a80f3a",display:"inline-block","margin-right":"1px","vertical-align":"middle"}}),e._v(" \n                : Connection flow control limit\n            ")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",{staticStyle:{padding:"0",margin:"10px 0"}},[n("span",{staticStyle:{width:"12px",height:"8px","background-color":"#ff69b4",display:"inline-block","margin-right":"1px","vertical-align":"middle"}}),e._v(" \n                : Sum of stream flow control limits\n            ")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",{staticStyle:{padding:"0",margin:"10px 0"}},[n("span",{staticStyle:{width:"12px",height:"8px","background-color":"#8A2BE2",display:"inline-block","margin-right":"1px","vertical-align":"middle"}}),e._v(" \n                : Congestion window\n            ")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",{staticStyle:{padding:"0",margin:"10px 0"}},[n("span",{staticStyle:{width:"12px",height:"8px","background-color":"#808000",display:"inline-block","margin-right":"1px","vertical-align":"middle"}}),e._v(" \n                : Bytes in flight\n            ")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",{staticStyle:{padding:"0",margin:"3px 15px",display:"inline"}},[n("span",{staticStyle:{width:"32px",height:"8px","background-color":"#C96480",display:"inline-block","margin-right":"1px","vertical-align":"middle"}}),e._v("\n                : Min RTT\n            ")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",{staticStyle:{padding:"0",margin:"3px 15px",display:"inline"}},[n("span",{staticStyle:{width:"32px",height:"8px","background-color":"#ff9900",display:"inline-block","margin-right":"1px","vertical-align":"middle"}}),e._v("\n                : Latest RTT\n            ")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",{staticStyle:{padding:"0",margin:"3px 15px",display:"inline"}},[n("span",{staticStyle:{width:"32px",height:"8px","background-color":"#8a554a",display:"inline-block","margin-right":"1px","vertical-align":"middle"}}),e._v("\n                : Smoothed RTT\n            ")])}];class kn{constructor(){this.eventBus=null,this.outerWidth=window.innerWidth,this.outerHeight=600,this.margins={top:20,bottom:60,left:70,right:70},this.graphSvg=null,this.canvas=null,this.canvasContext=null,this.mouseHandlerPanningSvg=null,this.mouseHandlerBrushXSvg=null,this.mouseHandlerBrush2dSvg=null,this.mouseHandlerSelectionSvg=null,this.mouseHandlerPickSvg=null,this.mouseHandlerRulerSvg=null,this.brushX=null,this.brushXElement=null,this.brush2d=null,this.brush2dElement=null,this.selectionBrush=null,this.packetInformationDiv=null,this.congestionGraphEnabled=!0,this.useSentPerspective=!0,this.gxAxis=null,this.gyAxis=null,this.gyCongestionAxis=null,this.congestionAxisText=null,this.innerWidth=this.outerWidth-this.margins.left-this.margins.right,this.innerHeight=this.outerHeight-this.margins.top-this.margins.bottom,this.reset()}currentPerspective(){return this.useSentPerspective?this.sent:this.received}reset(){this.sent={xScale:null,yScale:null,yCongestionScale:null,xAxis:null,yAxis:null,yCongestionAxis:null,rangeX:[0,0],rangeY:[0,0],congestionRangeY:[0,0],originalRangeX:[0,0],originalRangeY:[0,0],originalCongestionRangeY:[0,0],drawScaleX:1,drawScaleY:1},this.received={xScale:null,yScale:null,xAxis:null,yAxis:null,rangeX:[0,0],rangeY:[0,0],originalRangeX:[0,0],originalRangeY:[0,0],drawScaleX:1,drawScaleY:1},this.metricUpdateLines={bytes:new Array,cwnd:new Array,minRTT:new Array,smoothedRTT:new Array,lastRTT:new Array},this.flowControlLines={application:new Array,stream:new Array}}}class Cn{constructor(){this.outerWidth=window.innerWidth,this.outerHeight=300,this.margins={top:20,bottom:60,left:70,right:70},this.graphSvg=null,this.canvas=null,this.canvasContext=null,this.xAxis=null,this.gxAxis=null,this.yScale=null,this.yAxis=null,this.gyAxis=null,this.originalRangeY=[0,0],this.rangeY=[0,0],this.innerWidth=this.outerWidth-this.margins.left-this.margins.right,this.innerHeight=this.outerHeight-this.margins.top-this.margins.bottom}reset(){this.xAxis=null,this.yAxis=null,this.yScale=null,this.originalRangeY=[0,0],this.rangeY=[0,0]}}class Pn{constructor(e){this.rendering=!1,this.isInitialised=!1,this._startTimeOffset=0,this.previousMouseX=null,this.previousMouseY=null,this.containerID=e}useBrushX(){this.mainGraphState.mouseHandlerBrush2dSvg.style("z-index",0),this.mainGraphState.mouseHandlerBrushXSvg.style("z-index",1),this.mainGraphState.mouseHandlerPanningSvg.style("z-index",0),this.mainGraphState.mouseHandlerSelectionSvg.style("z-index",0),this.mainGraphState.mouseHandlerPickSvg.style("z-index",0),this.mainGraphState.mouseHandlerRulerSvg.style("z-index",0)}useBrush2d(){this.mainGraphState.mouseHandlerBrush2dSvg.style("z-index",1),this.mainGraphState.mouseHandlerBrushXSvg.style("z-index",0),this.mainGraphState.mouseHandlerPanningSvg.style("z-index",0),this.mainGraphState.mouseHandlerSelectionSvg.style("z-index",0),this.mainGraphState.mouseHandlerPickSvg.style("z-index",0),this.mainGraphState.mouseHandlerRulerSvg.style("z-index",0)}usePanning(){this.mainGraphState.mouseHandlerBrush2dSvg.style("z-index",0),this.mainGraphState.mouseHandlerBrushXSvg.style("z-index",0),this.mainGraphState.mouseHandlerPanningSvg.style("z-index",1),this.mainGraphState.mouseHandlerSelectionSvg.style("z-index",0),this.mainGraphState.mouseHandlerPickSvg.style("z-index",0),this.mainGraphState.mouseHandlerRulerSvg.style("z-index",0)}useSelection(){this.mainGraphState.mouseHandlerBrush2dSvg.style("z-index",0),this.mainGraphState.mouseHandlerBrushXSvg.style("z-index",0),this.mainGraphState.mouseHandlerPanningSvg.style("z-index",0),this.mainGraphState.mouseHandlerSelectionSvg.style("z-index",1),this.mainGraphState.mouseHandlerPickSvg.style("z-index",0),this.mainGraphState.mouseHandlerRulerSvg.style("z-index",0)}usePicker(){this.mainGraphState.mouseHandlerBrush2dSvg.style("z-index",0),this.mainGraphState.mouseHandlerBrushXSvg.style("z-index",0),this.mainGraphState.mouseHandlerPanningSvg.style("z-index",0),this.mainGraphState.mouseHandlerSelectionSvg.style("z-index",0),this.mainGraphState.mouseHandlerPickSvg.style("z-index",1),this.mainGraphState.mouseHandlerRulerSvg.style("z-index",0)}useRuler(){this.mainGraphState.mouseHandlerBrush2dSvg.style("z-index",0),this.mainGraphState.mouseHandlerBrushXSvg.style("z-index",0),this.mainGraphState.mouseHandlerPanningSvg.style("z-index",0),this.mainGraphState.mouseHandlerSelectionSvg.style("z-index",0),this.mainGraphState.mouseHandlerPickSvg.style("z-index",0),this.mainGraphState.mouseHandlerRulerSvg.style("z-index",1),document.body.style.cursor="pointer";const e={};let t=void 0,n=void 0,a=void 0,i=void 0,r=void 0,o=void 0;const s=this.mainGraphState.mouseHandlerRulerSvg.node(),c=c=>{e.x1=c.offsetX,e.y1=c.offsetY,e.x2=c.offsetX,e.y2=c.offsetY,t=this.mainGraphState.mouseHandlerRulerSvg.append("line").attr("stroke","pink").attr("stroke-width",10).attr("x1",""+e.x1).attr("y1",""+e.y1).attr("x2",""+e.x2).attr("y2",""+e.y2).style("opacity","0.7").attr("class","ruler"),n=this.mainGraphState.mouseHandlerRulerSvg.append("line").attr("stroke","black").attr("stroke-width",2).attr("x1",""+e.x1).attr("y1",""+e.y1).attr("x2",""+e.x2).attr("y2",""+e.y2),a=this.mainGraphState.mouseHandlerRulerSvg.append("line").attr("stroke","black").attr("stroke-width",2).attr("x1",""+e.x1).attr("y1",""+e.y1).attr("x2",""+e.x2).attr("y2",""+e.y2),i=this.mainGraphState.mouseHandlerRulerSvg.append("text").attr("dominant-baseline","hanging").style("text-anchor","middle").style("font-size","14").style("font-family","Trebuchet MS").style("font-style","italic").style("stroke","white").style("stroke-width",5).style("paint-order","stroke").attr("fill","#000000").text("time"),r=this.mainGraphState.mouseHandlerRulerSvg.append("text").attr("dominant-baseline","central").style("text-anchor","start").style("font-size","14").style("font-family","Trebuchet MS").style("font-style","italic").style("stroke","white").style("stroke-width",5).style("paint-order","stroke").attr("fill","#000000").text("bytes"),o=this.mainGraphState.mouseHandlerRulerSvg.append("text").attr("dominant-baseline","hanging").style("text-anchor","middle").style("font-size","14").style("font-family","Trebuchet MS").style("font-style","italic").style("stroke","white").style("stroke-width",5).style("paint-order","stroke").attr("fill","#000000").text("rate"),s.addEventListener("mousemove",l)},l=s=>{e.x2=s.offsetX,e.y2=s.offsetY,t.attr("x2",""+e.x2).attr("y2",""+e.y2),n.attr("x2",""+e.x2).attr("y2",""+e.y1),a.attr("x1",""+e.x2).attr("x2",""+e.x2).attr("y2",""+e.y2);const c=Math.round(this.mainGraphState.sent.xScale.invert(e.x1)),l=Math.round(this.mainGraphState.sent.xScale.invert(e.x2)),h=l-c,d=Math.round(this.mainGraphState.sent.yScale.invert(e.y1)),p=Math.round(this.mainGraphState.sent.yScale.invert(e.y2)),m=p-d;let g=h+" ms";h>1e4&&(g=(h/1e3).toFixed(2)+"s");let u=m+" bytes";m>2e6?u=(m/1e6).toFixed(2)+" MB":m>1e4&&(u=Math.round(m/1e3)+" KB");const f=8*(p-d);let v=f/1e3/((l-c)/1e3),y=Math.round(v)+" Kbps";v>1e3&&(v=f/1e6/((l-c)/1e3),y=v.toFixed(2)+" Mbps");const _=Math.min(e.x1,e.x2)+Math.abs(e.x1-e.x2)/2,T=Math.min(e.y1,e.y2)+Math.abs(e.y1-e.y2)/2,b=(e.x1+e.x2)/2,S=(e.y1+e.y2)/2;i.attr("x",_).attr("y",e.y1+(e.y1>e.y2?12:-20)).text(g),r.attr("x",Math.max(e.x1,e.x2)+12).attr("y",T).text(u),o.attr("x",b).attr("y",S+(e.y1>e.y2?-30:20)).text(""+y)};s.addEventListener("mousedown",c,{once:!0}),s.addEventListener("mouseup",e=>{document.body.style.cursor="default",s.removeEventListener("mousemove",l),t.remove(),n.remove(),a.remove(),i.remove(),r.remove(),o.remove(),this.usePanning()},{once:!0})}toggleCongestionGraph(){this.mainGraphState.congestionGraphEnabled=!this.mainGraphState.congestionGraphEnabled,this.redrawCanvas(this.mainGraphState.currentPerspective().rangeX[0],this.mainGraphState.currentPerspective().rangeX[1],this.mainGraphState.currentPerspective().rangeY[0],this.mainGraphState.currentPerspective().rangeY[1])}togglePerspective(){this.setPerspective(!this.mainGraphState.useSentPerspective,!0)}resetZoom(){this.mainGraphState.currentPerspective().rangeX=this.mainGraphState.currentPerspective().originalRangeX,this.mainGraphState.currentPerspective().rangeY=this.mainGraphState.currentPerspective().originalRangeY,this.redrawCanvas(this.mainGraphState.currentPerspective().rangeX[0],this.mainGraphState.currentPerspective().rangeX[1],this.mainGraphState.currentPerspective().rangeY[0],this.mainGraphState.currentPerspective().rangeY[1])}render(e){if(this.rendering)return;console.log("CongestionGraphRenderer:render",e),this.config=e,this.isInitialised?(this.mainGraphState.reset(),this.recoveryGraphState.reset()):(this.mainGraphState=new kn,this.recoveryGraphState=new Cn,this.init(),this.isInitialised=!0),this.rendering=!0;const t=this.setup();t?this.renderParts().then(()=>{this.rendering=!1}):this.rendering=!1}init(){if(this.mainGraphState.eventBus=document.createElement("span"),this.mainGraphState.packetInformationDiv=tt["j"]("#packetInfo"),this.mainGraphContainer=tt["j"]("#"+this.containerID).append("div").attr("id","mainGraphContainer").style("height",this.mainGraphState.outerHeight+"px"),this.recoveryGraphContainer=tt["j"]("#"+this.containerID).append("div").attr("id","recoveryGraphContainer").style("height",this.recoveryGraphState.outerHeight+"px"),this.mainGraphState.graphSvg=this.mainGraphContainer.append("svg:svg").attr("width",this.mainGraphState.outerWidth).attr("height",this.mainGraphState.outerHeight).style("position","absolute").append("g").attr("transform","translate("+this.mainGraphState.margins.left+", "+this.mainGraphState.margins.top+")"),this.mainGraphState.canvas=this.mainGraphContainer.append("canvas").attr("width",this.mainGraphState.innerWidth).attr("height",this.mainGraphState.innerHeight).style("margin-left",this.mainGraphState.margins.left+"px").style("margin-top",this.mainGraphState.margins.top+"px").style("position","absolute"),this.mainGraphState.mouseHandlerPanningSvg=this.mainGraphContainer.append("svg:svg").attr("width",this.mainGraphState.innerWidth).attr("height",this.mainGraphState.innerHeight).style("margin-left",this.mainGraphState.margins.left+"px").style("margin-top",this.mainGraphState.margins.top+"px").style("z-index",1).style("position","absolute"),this.mainGraphState.mouseHandlerBrushXSvg=this.mainGraphContainer.append("svg:svg").attr("width",this.mainGraphState.innerWidth).attr("height",this.mainGraphState.innerHeight).style("margin-left",this.mainGraphState.margins.left+"px").style("margin-top",this.mainGraphState.margins.top+"px").style("z-index",0).style("position","absolute"),this.mainGraphState.mouseHandlerBrush2dSvg=this.mainGraphContainer.append("svg:svg").attr("width",this.mainGraphState.innerWidth).attr("height",this.mainGraphState.innerHeight).style("margin-left",this.mainGraphState.margins.left+"px").style("margin-top",this.mainGraphState.margins.top+"px").style("z-index",0).style("position","absolute"),this.mainGraphState.mouseHandlerSelectionSvg=this.mainGraphContainer.append("svg:svg").attr("width",this.mainGraphState.innerWidth).attr("height",this.mainGraphState.innerHeight).style("margin-left",this.mainGraphState.margins.left+"px").style("margin-top",this.mainGraphState.margins.top+"px").style("z-index",0).style("position","absolute"),this.mainGraphState.mouseHandlerPickSvg=this.mainGraphContainer.append("svg:svg").attr("width",this.mainGraphState.innerWidth).attr("height",this.mainGraphState.innerHeight).style("margin-left",this.mainGraphState.margins.left+"px").style("margin-top",this.mainGraphState.margins.top+"px").style("z-index",0).style("position","absolute"),this.mainGraphState.mouseHandlerRulerSvg=this.mainGraphContainer.append("svg:svg").attr("width",this.mainGraphState.innerWidth).attr("height",this.mainGraphState.innerHeight).style("margin-left",this.mainGraphState.margins.left+"px").style("margin-top",this.mainGraphState.margins.top+"px").style("z-index",0).style("position","absolute"),this.recoveryGraphState.graphSvg=this.recoveryGraphContainer.append("svg:svg").attr("width",this.recoveryGraphState.outerWidth).attr("height",this.recoveryGraphState.outerHeight).style("position","absolute").append("g").attr("transform","translate("+this.recoveryGraphState.margins.left+", "+this.recoveryGraphState.margins.top+")"),this.recoveryGraphState.canvas=this.recoveryGraphContainer.append("canvas").attr("width",this.recoveryGraphState.innerWidth).attr("height",this.recoveryGraphState.innerHeight).style("margin-left",this.recoveryGraphState.margins.left+"px").style("margin-top",this.recoveryGraphState.margins.top+"px").style("position","absolute"),this.mainGraphState.canvasContext=this.mainGraphState.canvas.node().getContext("2d"),this.recoveryGraphState.canvasContext=this.recoveryGraphState.canvas.node().getContext("2d"),this.mainGraphState.gxAxis=this.mainGraphState.graphSvg.append("g").attr("transform","translate(0, "+this.mainGraphState.innerHeight+")").attr("class","grid"),this.mainGraphState.gyAxis=this.mainGraphState.graphSvg.append("g").attr("class","grid"),this.mainGraphState.gyCongestionAxis=this.mainGraphState.graphSvg.append("g").attr("class","nogrid"),this.recoveryGraphState.gxAxis=this.recoveryGraphState.graphSvg.append("g").attr("transform","translate(0, "+this.recoveryGraphState.innerHeight+")").attr("class","grid"),this.recoveryGraphState.gyAxis=this.recoveryGraphState.graphSvg.append("g").attr("class","grid"),this.mainGraphState.graphSvg.append("text").attr("x","-"+this.mainGraphState.innerHeight/2).attr("dy","-3.5em").attr("transform","rotate(-90)").text("Data (bytes)"),this.mainGraphState.graphSvg.append("text").attr("x",""+this.mainGraphState.innerWidth/2).attr("y",""+(this.mainGraphState.innerHeight+40)).text("Time (ms)"),this.mainGraphState.congestionAxisText=this.mainGraphState.graphSvg.append("text").attr("transform","translate("+(this.mainGraphState.innerWidth+this.mainGraphState.margins.right/2)+", "+this.mainGraphState.innerHeight/2+"), rotate(-90)").text("Congestion info (bytes)"),this.recoveryGraphState.graphSvg.append("text").attr("x",""+this.recoveryGraphState.innerWidth/2).attr("y",""+(this.recoveryGraphState.innerHeight+40)).text("Time (ms)"),this.recoveryGraphState.graphSvg.append("text").attr("x","-"+this.recoveryGraphState.innerHeight/2).attr("dy","-3.5em").attr("transform","rotate(-90)").text("RTT (ms)"),this.config&&this.config.connection&&this.config.connection.getEvents().length>0){const e=this.config.connection.parseEvent(this.config.connection.getEvents()[0]);e.relativeTime>3e3?this._startTimeOffset=-1*(e.relativeTime-200):this._startTimeOffset=0}}setup(){this.parseQlog(),this.initSentSide({}),this.initReceivedSide({}),this.mainGraphState.gxAxis.call(this.mainGraphState.currentPerspective().xAxis),this.mainGraphState.gyAxis.call(this.mainGraphState.currentPerspective().yAxis),this.mainGraphState.gyCongestionAxis.call(this.mainGraphState.sent.yCongestionAxis),this.recoveryGraphState.gxAxis.call(this.recoveryGraphState.xAxis),this.recoveryGraphState.gyAxis.call(this.recoveryGraphState.yAxis);const e=this,t=()=>{e.onZoom()},n=()=>{e.onPan()},a=()=>{e.onHover()},i=()=>{e.onPickerClick()},r=()=>{e.onBrushXEnd()},o=()=>{e.onBrush2dEnd()};return this.mainGraphState.mouseHandlerPanningSvg.on("wheel",t).on("click",i).on("mousemove.pan",n).on("mousemove.hover",a),this.mainGraphState.mouseHandlerPickSvg.on("wheel",t).on("click",i).on("mousemove",a),this.mainGraphState.brushX=tt["f"]().extent([[0,0],[this.mainGraphState.innerWidth,this.mainGraphState.innerHeight]]).on("end",r),this.mainGraphState.brushXElement=this.mainGraphState.mouseHandlerBrushXSvg.append("g").attr("class","brush").call(this.mainGraphState.brushX).on("wheel",t).on("mousemove",a),this.mainGraphState.brush2d=tt["e"]().extent([[0,0],[this.mainGraphState.innerWidth,this.mainGraphState.innerHeight]]).on("end",o),this.mainGraphState.brush2dElement=this.mainGraphState.mouseHandlerBrush2dSvg.append("g").attr("class","brush").call(this.mainGraphState.brush2d).on("wheel",t).on("mousemove",a),this.setPerspective(this.mainGraphState.useSentPerspective,!1),this.mainGraphContainer.style("display","block"),this.recoveryGraphContainer.style("display","block"),!0}initSentSide(e){const t=this.mainGraphState.useSentPerspective;this.mainGraphState.useSentPerspective=!0;const[n,a,i,r]=this.findMetricUpdateExtrema(),[o,s]=[e.minX&&e.minX>0?e.minX:0,e.maxX&&e.maxX<this.mainGraphState.sent.originalRangeX[1]?e.maxX:this.mainGraphState.sent.originalRangeX[1]],[c,l]=this.findYExtrema(o,s),h=3*a;this.mainGraphState.sent.xScale=tt["i"]().domain([o,s]).range([0,this.mainGraphState.innerWidth]),this.mainGraphState.sent.yScale=tt["i"]().domain([c,l]).range([this.mainGraphState.innerHeight,0]),this.mainGraphState.sent.yCongestionScale=tt["i"]().domain([0,h]).range([this.mainGraphState.innerHeight,0]).nice(),this.recoveryGraphState.yScale=tt["i"]().domain([0,r]).range([this.recoveryGraphState.innerHeight,0]),this.mainGraphState.sent.xAxis=tt["a"](this.mainGraphState.sent.xScale).tickSize(-this.mainGraphState.innerHeight).scale(this.mainGraphState.sent.xScale),this.mainGraphState.sent.yAxis=tt["b"](this.mainGraphState.sent.yScale).tickFormat(e=>{const t=void 0!==e.valueOf?e.valueOf():e;if(t>1e3||t<-1e3){if(Math.round(t)%1e3===0){const e=Math.round(t/1e3);return e+"K"}return Math.round(t).toString()}return Math.round(t).toString()}).tickSize(-this.mainGraphState.innerWidth).scale(this.mainGraphState.sent.yScale),this.mainGraphState.sent.yCongestionAxis=tt["c"](this.mainGraphState.sent.yCongestionScale).tickFormat(e=>{const t=void 0!==e.valueOf?e.valueOf():e;if(t>1e3||t<-1e3){if(Math.round(t)%1e3===0){const e=Math.round(t/1e3);return e+"K"}return Math.round(t).toString()}return Math.round(t).toString()}).tickSize(this.mainGraphState.innerWidth).scale(this.mainGraphState.sent.yCongestionScale),this.recoveryGraphState.xAxis=tt["a"](this.mainGraphState.sent.xScale).tickSize(-this.recoveryGraphState.innerHeight).scale(this.mainGraphState.sent.xScale),this.recoveryGraphState.yAxis=tt["b"](this.recoveryGraphState.yScale).tickSize(-this.recoveryGraphState.innerWidth).scale(this.recoveryGraphState.yScale),this.mainGraphState.sent.rangeX=[o,s],this.mainGraphState.sent.rangeY=[c,l],this.mainGraphState.sent.congestionRangeY=this.mainGraphState.sent.originalCongestionRangeY,this.recoveryGraphState.rangeY=this.recoveryGraphState.originalRangeY,this.mainGraphState.useSentPerspective=t}initReceivedSide(e){const t=this.mainGraphState.useSentPerspective;this.mainGraphState.useSentPerspective=!1;const[n,a]=[e.minX&&e.minX>0?e.minX:0,e.maxX&&e.maxX<this.mainGraphState.received.originalRangeX[1]?e.maxX:this.mainGraphState.received.originalRangeX[1]],[i,r]=this.findYExtrema(n,a);this.mainGraphState.received.xScale=tt["i"]().domain([n,a]).range([0,this.mainGraphState.innerWidth]),this.mainGraphState.received.yScale=tt["i"]().domain([i,r]).range([this.mainGraphState.innerHeight,0]),this.mainGraphState.received.xAxis=tt["a"](this.mainGraphState.received.xScale).tickSize(-this.mainGraphState.innerHeight).scale(this.mainGraphState.received.xScale),this.mainGraphState.received.yAxis=tt["b"](this.mainGraphState.received.yScale).tickFormat(e=>{const t=void 0!==e.valueOf?e.valueOf():e;if(t>1e3||t<-1e3){if(Math.round(t)%1e3===0){const e=Math.round(t/1e3);return e+"K"}return Math.round(t).toString()}return Math.round(t).toString()}).tickSize(-this.mainGraphState.innerWidth).scale(this.mainGraphState.received.yScale),this.mainGraphState.received.rangeX=[n,a],this.mainGraphState.received.rangeY=[i,r],this.mainGraphState.useSentPerspective=t}async renderParts(){this.redrawCanvas(this.mainGraphState.currentPerspective().rangeX[0],this.mainGraphState.currentPerspective().rangeX[1],this.mainGraphState.currentPerspective().rangeY[0],this.mainGraphState.currentPerspective().rangeY[1])}redrawCanvas(e,t,n,a){const i=this.mainGraphState.currentPerspective(),r=3;i.xScale=tt["i"]().domain([e,t]).range([0,this.mainGraphState.innerWidth]),i.yScale=tt["i"]().domain([n,a]).range([this.mainGraphState.innerHeight,0]),this.mainGraphState.gxAxis.call(i.xAxis.scale(i.xScale)),this.mainGraphState.gyAxis.call(i.yAxis.scale(i.yScale)),this.mainGraphState.canvasContext.clearRect(0,0,this.mainGraphState.innerWidth,this.mainGraphState.innerHeight),this.mainGraphState.useSentPerspective&&(this.recoveryGraphState.gxAxis.call(i.xAxis.scale(i.xScale)),this.recoveryGraphState.canvasContext.clearRect(0,0,this.recoveryGraphState.innerWidth,this.recoveryGraphState.innerHeight)),i.drawScaleX=this.xScalingFunction((i.originalRangeX[1]-i.originalRangeX[0])/(t-e)),i.drawScaleY=this.yScalingFunction((i.originalRangeY[1]-i.originalRangeY[0])/(a-n));const o=this.mainGraphState.useSentPerspective?this.packetsSent:this.packetsReceived;for(const s of o){const e=this.config.connection.parseEvent(s),t=s.qvis.congestion,n=i.yScale(t.to)-i.yScale(t.from),a=i.xScale(this.transformTime(e.relativeTime)),o=i.yScale(t.to);if(a+r>=0&&a<=this.mainGraphState.innerWidth&&o+n>=0&&o<=this.mainGraphState.innerHeight&&this.drawRect(this.mainGraphState.canvasContext,a,o,r,n,"#0000FF"),t.correspondingAck){const e=this.config.connection.parseEvent(t.correspondingAck),s=i.xScale(this.transformTime(e.relativeTime));s+r>=0&&a<=this.mainGraphState.innerWidth&&o+n>=0&&o<=this.mainGraphState.innerHeight&&this.drawRect(this.mainGraphState.canvasContext,s,o,r,n,"#6B8E23")}if(t.correspondingLoss){const e=this.config.connection.parseEvent(t.correspondingLoss),s=i.xScale(this.transformTime(e.relativeTime));s+r>=0&&a<=this.mainGraphState.innerWidth&&o+n>=0&&o<=this.mainGraphState.innerHeight&&this.drawRect(this.mainGraphState.canvasContext,s,o,r,n,"#FF0000")}}this.mainGraphState.useSentPerspective&&(this.mainGraphState.congestionGraphEnabled&&(this.drawLines(this.mainGraphState.canvasContext,this.mainGraphState.metricUpdateLines.bytes.map(e=>{return[this.mainGraphState.sent.xScale(e[0]),this.mainGraphState.sent.yCongestionScale(e[1])]}),"#808000",this.drawCircle),this.drawLines(this.mainGraphState.canvasContext,this.mainGraphState.metricUpdateLines.cwnd.map(e=>{return[this.mainGraphState.sent.xScale(e[0]),this.mainGraphState.sent.yCongestionScale(e[1])]}),"#8A2BE2",this.drawCross),this.drawLines(this.mainGraphState.canvasContext,this.mainGraphState.flowControlLines.application.map(e=>{return[this.mainGraphState.sent.xScale(e[0]),this.mainGraphState.sent.yScale(e[1])]}),"#a80f3a",this.drawCross),this.drawLines(this.mainGraphState.canvasContext,this.mainGraphState.flowControlLines.stream.map(e=>{return[this.mainGraphState.sent.xScale(e[0]),this.mainGraphState.sent.yScale(e[1])]}),"#ff69b4",this.drawCross)),this.drawLines(this.recoveryGraphState.canvasContext,this.mainGraphState.metricUpdateLines.minRTT.map(e=>{return[this.mainGraphState.sent.xScale(e[0]),this.recoveryGraphState.yScale(e[1])]}),"#C96480",void 0),this.drawLines(this.recoveryGraphState.canvasContext,this.mainGraphState.metricUpdateLines.smoothedRTT.map(e=>{return[this.mainGraphState.sent.xScale(e[0]),this.recoveryGraphState.yScale(e[1])]}),"#8a554a",void 0),this.drawLines(this.recoveryGraphState.canvasContext,this.mainGraphState.metricUpdateLines.lastRTT.map(e=>{return[this.mainGraphState.sent.xScale(e[0]),this.recoveryGraphState.yScale(e[1])]}),"#ff9900",void 0)),i.rangeX=[e,t],i.rangeY=[n,a]}drawRect(e,t,n,a,i,r){e.beginPath(),e.fillStyle=r,i<0?e.rect(t,n,a*this.mainGraphState.currentPerspective().drawScaleX,Math.max(.05,-i*this.mainGraphState.currentPerspective().drawScaleY)):e.rect(t,n,a*this.mainGraphState.currentPerspective().drawScaleX,Math.min(-.05,-i*this.mainGraphState.currentPerspective().drawScaleY)),e.fill()}drawLines(e,t,n,a){if(e.lineWidth=1*this.mainGraphState.currentPerspective().drawScaleX,t.length>0){e.beginPath(),e.strokeStyle=n;const i=t[0][0],r=t[0][1];e.moveTo(i,r);for(let n=1;n<t.length;++n){const a=t[n][0],i=t[n][1];e.lineTo(a,i)}e.stroke();for(let o=1;o<t.length;++o){const i=t[o][0],r=t[o][1];a&&a(e,i,r,n)}}}drawCross(e,t,n,a){const i=2;e.strokeStyle=a,e.beginPath(),e.moveTo(t-i,n-i),e.lineTo(t+i,n+i),e.stroke(),e.beginPath(),e.moveTo(t+i,n-i),e.lineTo(t-i,n+i),e.stroke()}drawCircle(e,t,n,a){const i=2;e.fillStyle=a,e.beginPath(),e.arc(t,n,i,0,360),e.fill()}setPerspective(e,t){this.mainGraphState.useSentPerspective=e,this.mainGraphState.useSentPerspective?(this.mainGraphState.congestionAxisText.style("display","block"),this.mainGraphState.gyCongestionAxis.style("display","block"),this.recoveryGraphState.graphSvg.style("display","block"),this.recoveryGraphState.canvas.style("display","block")):(this.mainGraphState.congestionAxisText.style("display","none"),this.mainGraphState.gyCongestionAxis.style("display","none"),this.recoveryGraphState.graphSvg.style("display","none"),this.recoveryGraphState.canvas.style("display","none")),t&&this.redrawCanvas(this.mainGraphState.currentPerspective().rangeX[0],this.mainGraphState.currentPerspective().rangeX[1],this.mainGraphState.currentPerspective().rangeY[0],this.mainGraphState.currentPerspective().rangeY[1])}parseQlog(){const e={xMin:1/0,xMax:0,yMin:1/0,yMax:0,minCongestionY:1/0,maxCongestionY:0,minRTT:1/0,maxRTT:0},t={xMin:1/0,xMax:0,yMin:1/0,yMax:0};this.config.connection.setupLookupTable();const n=this.config.connection.lookup(w["EventCategory"].transport,w["TransportEventType"].packet_sent),a=this.config.connection.lookup(w["EventCategory"].transport,w["TransportEventType"].packet_received),i=this.config.connection.lookup(w["EventCategory"].recovery,w["RecoveryEventType"].packet_lost),r=this.config.connection.lookup(w["EventCategory"].recovery,w["RecoveryEventType"].metrics_updated),o=this.config.connection.lookup(w["EventCategory"].transport,w["TransportEventType"].parameters_set),s=[],c=[];let l=0,h=0;for(const m of o){const e=this.config.connection.parseEvent(m),t=e.data,n=this.transformTime(e.relativeTime);t.owner&&"remote"===t.owner&&(t.initial_max_data&&this.mainGraphState.flowControlLines.application.push([n,parseFloat(t.initial_max_data)]),t.initial_max_stream_data_bidi_remote&&this.mainGraphState.flowControlLines.stream.push([n,parseFloat(t.initial_max_stream_data_bidi_remote)]))}let d=0;for(const m of n){const n=this.config.connection.parseEvent(m),a=n.data,i=this.transformTime(n.relativeTime);this.createPrivateNamespace(m);const r=m.qvis.congestion;if(!a.header.packet_size||0===a.header.packet_size){++d;continue}const o=l+1;l+=a.header.packet_size,r.from=o,r.to=l,s[parseInt(a.header.packet_number,10)]=m,e.xMin=e.xMin>i?i:e.xMin,e.xMax=e.xMax<i?i:e.xMax,e.yMin=e.yMin>o?o:e.yMin,e.yMax=e.yMax<l?l:e.yMax,t.xMin=t.xMin>i?i:t.xMin,t.xMax=t.xMax<i?i:t.xMax}d>0&&console.error("CongestionGraphD3Renderer:parseQlog : There were "+d+" sent packets with invalid size! They were not used!");const p=new Map;d=0;for(const m of a){const n=this.config.connection.parseEvent(m),a=n.data,i=this.transformTime(n.relativeTime);this.createPrivateNamespace(m);const r=m.qvis.congestion;if(a.header.packet_size&&0!==a.header.packet_size){const n=h+1;h+=a.header.packet_size,r.from=n,r.to=h,c[parseInt(a.header.packet_number,10)]=m,t.xMin=t.xMin>i?i:t.xMin,t.xMax=t.xMax<i?i:t.xMax,t.yMin=t.yMin>n?n:t.yMin,t.yMax=t.yMax<h?h:t.yMax,e.xMin=e.xMin>i?i:e.xMin,e.xMax=e.xMax<i?i:e.xMax}else++d;if(!a.frames)continue;const o=[];for(const e of a.frames)if(e.frame_type===w["QUICFrameTypeName"].ack)o.push(e);else if(e.frame_type===w["QUICFrameTypeName"].max_data)void 0!==e.maximum&&this.mainGraphState.flowControlLines.application.push([i,parseFloat(e.maximum)]);else if(e.frame_type===w["QUICFrameTypeName"].max_stream_data&&void 0!==e.maximum){const t=""+e.stream_id;p.set(t,parseFloat(e.maximum));let n=0;for(const e of p.values())n+=e;this.mainGraphState.flowControlLines.stream.push([i,n])}if(0===o.length)continue;let l=0;for(const e of o)if(e.acked_ranges)for(const t of e.acked_ranges){let e=-1,n=-1;2===t.length?(e=parseInt(t[0],10),n=parseInt(t[1],10)):(e=parseInt(t[0],10),n=e);for(let t=e;t<=n;++t){const e=s[t];e?e.qvis.congestion.correspondingAck||(e.qvis.congestion.correspondingAck=m,r.correspondingPackets.push(e)):++l}}l>0&&this.config.connection.commonFields&&"TCP"!==this.config.connection.commonFields.protocol_type&&console.error("CongestionGraphD3Renderer:parseQlog : There were "+l+" packets acked that we didn't send. If this is a TCP trace with SACKs, that is expected for now.")}d>0&&console.error("CongestionGraphD3Renderer:parseQlog : There were "+d+" received packets with invalid size! They were not used!");for(const m of n){const e=this.config.connection.parseEvent(m),t=e.data,n=m.qvis.congestion;if(!t.frames)continue;const a=[];for(const i of t.frames)i.frame_type===w["QUICFrameTypeName"].ack&&a.push(i);if(0!==a.length)for(const i of a)if(i.acked_ranges)for(const e of i.acked_ranges){let t=-1,a=-1;2===e.length?(t=parseInt(e[0],10),a=parseInt(e[1],10)):(t=parseInt(e[0],10),a=t);for(let e=t;e<=a;++e){const t=c[e];t?t.qvis.congestion.correspondingAck||(t.qvis.congestion.correspondingAck=m,n.correspondingPackets.push(t)):console.error("Packet was ACKed that we didn't receive... ignoring",e,i,m)}}}for(const m of i){const e=this.config.connection.parseEvent(m),t=e.data;if(this.createPrivateNamespace(m),void 0===t.packet_number){console.error("Packet was LOST that didn't contain a packet_number field...",m);continue}const n=parseInt(t.packet_number,10),a=s[n];a?(a.qvis.congestion.correspondingLoss=m,m.qvis.congestion.correspondingPackets.push(a)):console.error("Packet was LOST that we didn't send... ignoring",n,m)}for(const m of r){const t=this.config.connection.parseEvent(m),n=t.data,a=this.transformTime(t.relativeTime);if(n.bytes_in_flight){const t=n.bytes_in_flight;e.minCongestionY=e.minCongestionY>t?t:e.minCongestionY,e.maxCongestionY=e.maxCongestionY<t?t:e.maxCongestionY,this.mainGraphState.metricUpdateLines.bytes.push([a,t])}if(n.cwnd){const t=n.cwnd;e.minCongestionY=e.minCongestionY>t?t:e.minCongestionY,e.maxCongestionY=e.maxCongestionY<t?t:e.maxCongestionY,this.mainGraphState.metricUpdateLines.cwnd.push([a,t])}else if(n.congestion_window){const t=n.congestion_window;e.minCongestionY=e.minCongestionY>t?t:e.minCongestionY,e.maxCongestionY=e.maxCongestionY<t?t:e.maxCongestionY,this.mainGraphState.metricUpdateLines.cwnd.push([a,t])}if(n.min_rtt){const i=t.timeToMilliseconds(n.min_rtt);e.minRTT=e.minRTT>i?i:e.minRTT,e.maxRTT=e.maxRTT<i?i:e.maxRTT,this.mainGraphState.metricUpdateLines.minRTT.push([a,i])}if(n.smoothed_rtt){const i=t.timeToMilliseconds(n.smoothed_rtt);e.minRTT=e.minRTT>i?i:e.minRTT,e.maxRTT=e.maxRTT<i?i:e.maxRTT,this.mainGraphState.metricUpdateLines.smoothedRTT.push([a,i])}if(n.latest_rtt){const i=t.timeToMilliseconds(n.latest_rtt);e.minRTT=e.minRTT>i?i:e.minRTT,e.maxRTT=e.maxRTT<i?i:e.maxRTT,this.mainGraphState.metricUpdateLines.lastRTT.push([a,i])}}this.packetsSent=n,this.packetsReceived=a,this.metricUpdates=r,this.mainGraphState.sent.originalRangeX=[0,e.xMax],this.mainGraphState.sent.originalRangeY=[0,e.yMax],this.mainGraphState.sent.originalCongestionRangeY=[0,e.maxCongestionY],this.recoveryGraphState.originalRangeY=[0,e.maxRTT],this.mainGraphState.received.originalRangeX=[0,t.xMax],this.mainGraphState.received.originalRangeY=[0,t.yMax],this.mainGraphState.metricUpdateLines.bytes=this.fixMetricUpdates(this.mainGraphState.metricUpdateLines.bytes),this.mainGraphState.metricUpdateLines.cwnd=this.fixMetricUpdates(this.mainGraphState.metricUpdateLines.cwnd),this.mainGraphState.metricUpdateLines.minRTT=this.fixMetricUpdates(this.mainGraphState.metricUpdateLines.minRTT),this.mainGraphState.metricUpdateLines.smoothedRTT=this.fixMetricUpdates(this.mainGraphState.metricUpdateLines.smoothedRTT),this.mainGraphState.metricUpdateLines.lastRTT=this.fixMetricUpdates(this.mainGraphState.metricUpdateLines.lastRTT),this.mainGraphState.flowControlLines.application=this.fixMetricUpdates(this.mainGraphState.flowControlLines.application),this.mainGraphState.flowControlLines.stream=this.fixMetricUpdates(this.mainGraphState.flowControlLines.stream)}onZoom(){tt["g"].preventDefault(),this.mainGraphState.graphSvg.selectAll(".ackArrow").remove(),this.clearPacketInfoWidget();const e=tt["g"].deltaY>0?1/1.5:1.5,t=this.mainGraphState.currentPerspective().xScale.invert(tt["h"](tt["g"].currentTarget)[0]),n=this.mainGraphState.currentPerspective().rangeX[0],a=this.mainGraphState.currentPerspective().rangeX[1],i=(t-n)/e,r=(a-t)/e,o=t-i>=0?t-i:0,s=t+r<=this.mainGraphState.currentPerspective().originalRangeX[1]?t+r:this.mainGraphState.currentPerspective().originalRangeX[1],[c,l]=this.findYExtrema(o,s);this.redrawCanvas(o,s,c,l)}onPan(){if(1&tt["g"].buttons){const e=this.mainGraphState.currentPerspective().xScale.invert(tt["h"](tt["g"].currentTarget)[0]),t=this.mainGraphState.currentPerspective().yScale.invert(tt["h"](tt["g"].currentTarget)[1]);if(null===this.previousMouseX||null===this.previousMouseY)return this.previousMouseX=e,void(this.previousMouseY=t);const n=(this.mainGraphState.currentPerspective().rangeX[1]-this.mainGraphState.currentPerspective().rangeX[0])/this.mainGraphState.innerWidth,a=(this.mainGraphState.currentPerspective().rangeY[1]-this.mainGraphState.currentPerspective().rangeY[0])/this.mainGraphState.innerHeight,i=tt["g"].movementX*n*-1,r=tt["g"].movementY*a;this.panCanvas(i,r),this.previousMouseX=e,this.previousMouseX=t}}clearPacketInfoWidget(){this.mainGraphState.packetInformationDiv.style("display","none"),this.mainGraphState.packetInformationDiv.select("#timestamp").text(""),this.mainGraphState.packetInformationDiv.select("#packetNr").text(""),this.mainGraphState.packetInformationDiv.select("#packetSize").text(""),this.mainGraphState.packetInformationDiv.select("#ackedFrom").text(""),this.mainGraphState.packetInformationDiv.select("#ackedTo").text("")}onHover(){if(this.mainGraphState.graphSvg.selectAll(".ackArrow").remove(),this.clearPacketInfoWidget(),0!==tt["g"].buttons)return;const e=tt["h"](tt["g"].currentTarget),t=[this.mainGraphState.currentPerspective().xScale.invert(e[0]),this.mainGraphState.currentPerspective().yScale.invert(e[1])],n=this.mainGraphState.canvasContext.getImageData(e[0],e[1],1,1).data,a=[n[0],n[1],n[2]];if(0===a[0]&&0===a[1]&&0===a[2])return;const i=this.mainGraphState.useSentPerspective?this.packetsSent:this.packetsReceived;for(const r of i){const n=this.config.connection.parseEvent(r),i=this.transformTime(n.relativeTime),o=n.data,s=r.qvis.congestion;if(s.from<=t[1]&&s.to>=t[1]){if(0===a[0]&&0===a[1]&&255===a[2]){this.mainGraphState.packetInformationDiv.style("display","block"),this.mainGraphState.packetInformationDiv.style("margin-left",e[0]+this.mainGraphState.margins.left+10+"px"),this.mainGraphState.packetInformationDiv.style("margin-top",e[1]+this.mainGraphState.margins.top+10+"px"),this.mainGraphState.packetInformationDiv.select("#timestamp").text("Timestamp: "+i),this.mainGraphState.packetInformationDiv.select("#packetNr").text("PacketNr: "+o.header.packet_number);let t="PacketSize: "+o.header.packet_size;for(let e=0;e<this.mainGraphState.metricUpdateLines.cwnd.length-2;++e){const n=this.mainGraphState.metricUpdateLines.cwnd[e],a=this.mainGraphState.metricUpdateLines.cwnd[e+1];n[0]<=i&&a[0]>i&&(t+="<br/>",t+="CWND: "+n[1]+" bytes")}for(let e=0;e<this.mainGraphState.metricUpdateLines.bytes.length-2;++e){const n=this.mainGraphState.metricUpdateLines.bytes[e],a=this.mainGraphState.metricUpdateLines.bytes[e+1];n[0]<=i&&a[0]>i&&(t+="<br/>",t+="In flight: "+n[1]+" bytes")}for(let e=0;e<this.mainGraphState.metricUpdateLines.lastRTT.length-2;++e){const n=this.mainGraphState.metricUpdateLines.lastRTT[e],a=this.mainGraphState.metricUpdateLines.lastRTT[e+1];n[0]<=i&&a[0]>i&&(t+="<br/>",t+="RTT: "+n[1]+" ms")}for(let e=0;e<this.mainGraphState.metricUpdateLines.smoothedRTT.length-2;++e){const n=this.mainGraphState.metricUpdateLines.smoothedRTT[e],a=this.mainGraphState.metricUpdateLines.smoothedRTT[e+1];n[0]<=i&&a[0]>i&&(t+="<br/>",t+="sRTT: "+n[1]+" ms")}return void this.mainGraphState.packetInformationDiv.select("#packetSize").html(t)}if(107===a[0]&&142===a[1]&&35===a[2]){const t=s.correspondingAck,n=this.config.connection.parseEvent(t);this.mainGraphState.packetInformationDiv.style("display","block"),this.mainGraphState.packetInformationDiv.style("margin-left",e[0]+this.mainGraphState.margins.left+10+"px"),this.mainGraphState.packetInformationDiv.style("margin-top",e[1]+this.mainGraphState.margins.top+10+"px"),this.mainGraphState.packetInformationDiv.select("#timestamp").text("Timestamp: "+this.transformTime(n.relativeTime)),this.mainGraphState.packetInformationDiv.select("#ackedFrom").text("Acked from: "+s.from),this.mainGraphState.packetInformationDiv.select("#ackedTo").text("Acked to: "+s.to);let a=this.mainGraphState.currentPerspective().xScale(i);a=a>0?a:0;const r=this.mainGraphState.currentPerspective().yScale(s.from),o=this.mainGraphState.currentPerspective().yScale(s.to),c=(r-o)*this.mainGraphState.currentPerspective().drawScaleY,l=this.mainGraphState.currentPerspective().xScale(this.transformTime(n.relativeTime))-this.mainGraphState.currentPerspective().xScale(i);return void this.mainGraphState.graphSvg.append("rect").attr("class","ackArrow").attr("x",a).attr("width",l).attr("y",o).attr("height",c).attr("fill","#fff").attr("stroke-width","2px").attr("stroke","#686868")}if(255===a[0]&&0===a[1]&&0===a[2]){const t=s.correspondingLoss,n=this.config.connection.parseEvent(t);return this.mainGraphState.packetInformationDiv.style("display","block"),this.mainGraphState.packetInformationDiv.style("margin-left",e[0]+this.mainGraphState.margins.left+10+"px"),this.mainGraphState.packetInformationDiv.style("margin-top",e[1]+this.mainGraphState.margins.top+10+"px"),this.mainGraphState.packetInformationDiv.select("#timestamp").text("Timestamp: "+this.transformTime(n.relativeTime)),this.mainGraphState.packetInformationDiv.select("#packetNr").text("PacketNr: "+n.data.header.packet_number),void this.mainGraphState.packetInformationDiv.select("#packetSize").text("PacketSize: "+n.data.header.packet_size)}}}}panCanvas(e,t){let n=e,a=t;this.mainGraphState.currentPerspective().rangeX[0]+n<0?n=0-this.mainGraphState.currentPerspective().rangeX[0]:this.mainGraphState.currentPerspective().rangeX[1]+n>this.mainGraphState.currentPerspective().originalRangeX[1]&&(n=this.mainGraphState.currentPerspective().originalRangeX[1]-this.mainGraphState.currentPerspective().rangeX[1]),this.mainGraphState.currentPerspective().rangeY[0]+a<0?a=0-this.mainGraphState.currentPerspective().rangeY[0]:this.mainGraphState.currentPerspective().rangeY[1]+a>this.mainGraphState.currentPerspective().originalRangeY[1]&&(a=this.mainGraphState.currentPerspective().originalRangeY[1]-this.mainGraphState.currentPerspective().rangeY[1]);const i=this.mainGraphState.currentPerspective().rangeX[0]+n,r=this.mainGraphState.currentPerspective().rangeX[1]+n,o=this.mainGraphState.currentPerspective().rangeY[0]+a,s=this.mainGraphState.currentPerspective().rangeY[1]+a;this.redrawCanvas(i,r,o,s)}onBrushXEnd(){const e=tt["g"].selection,t=this.mainGraphState.currentPerspective().xScale.invert(e[0]),n=this.mainGraphState.currentPerspective().xScale.invert(e[1]),[a,i]=t<n?[t,n]:[n,t],[r,o]=this.findYExtrema(a,i);this.redrawCanvas(a,i,r,o),this.usePanning(),this.mainGraphState.brushXElement.call(this.mainGraphState.brushX.move,null)}onBrush2dEnd(){const e=tt["g"].selection,t=this.mainGraphState.currentPerspective().xScale.invert(e[0][0]),n=this.mainGraphState.currentPerspective().xScale.invert(e[1][0]),a=this.mainGraphState.currentPerspective().yScale.invert(e[0][1]),i=this.mainGraphState.currentPerspective().yScale.invert(e[1][1]),[r,o]=t<n?[t,n]:[n,t],[s,c]=a<i?[a,i]:[i,a];this.redrawCanvas(r,o,s,c),this.usePanning(),this.mainGraphState.brush2dElement.call(this.mainGraphState.brush2d.move,null)}onPickerClick(){const e=tt["h"](tt["g"].currentTarget),t=[this.mainGraphState.currentPerspective().xScale.invert(e[0]),this.mainGraphState.currentPerspective().yScale.invert(e[1])],n=this.mainGraphState.canvasContext.getImageData(e[0],e[1],1,1).data,a=[n[0],n[1],n[2]];this.mainGraphState.eventBus.dispatchEvent(new CustomEvent("packetPickEvent",{detail:{x:t[0],y:t[1],pixelColor:a}}))}xScalingFunction(e){return 1/(1+Math.exp(-(e-2)))+1.2}yScalingFunction(e){return 1/e+1}findYExtrema(e,t){let n=1/0,a=0;const i=this.mainGraphState.useSentPerspective?this.packetsSent:this.packetsReceived;for(const r of i){const i=this.config.connection.parseEvent(r),o=r.qvis.congestion,s=this.transformTime(i.relativeTime);e<=s&&s<=t&&(n=n>o.to?o.to:n,a=a<o.to?o.to:a)}return[n,a]}findMetricUpdateExtrema(e){let t=0,n=0,a=0,i=0;const r=void 0!==e?e[0]:this.mainGraphState.currentPerspective().originalRangeX[0],o=void 0!==e?e[1]:this.mainGraphState.currentPerspective().originalRangeX[1],s=this.metricUpdates;for(const c of s){const e=this.config.connection.parseEvent(c),s=e.data,l=this.transformTime(e.relativeTime);if(s.bytes_in_flight&&r<=l&&l<=o){const e=parseInt(s.bytes_in_flight,10);t=t>e?e:t,n=n<e?e:n}if(s.cwnd&&r<=l&&l<=o){const e=parseInt(s.cwnd,10);t=t>e?e:t,n=n<e?e:n}else if(s.congestion_window&&r<=l&&l<=o){const e=parseInt(s.congestion_window,10);t=t>e?e:t,n=n<e?e:n}if(s.min_rtt&&r<=l&&l<=o){const t=e.timeToMilliseconds(s.min_rtt);a=a>t?t:a,i=i<t?t:i}if(s.smoothed_rtt&&r<=l&&l<=o){const t=e.timeToMilliseconds(s.smoothed_rtt);a=a>t?t:a,i=i<t?t:i}if(s.latest_rtt&&r<=l&&l<=o){const t=e.timeToMilliseconds(s.latest_rtt);a=a>t?t:a,i=i<t?t:i}}return[t,n,a,i]}createPrivateNamespace(e){void 0===e.qvis&&Object.defineProperty(e,"qvis",{enumerable:!1,value:{}}),void 0===e.qvis.congestion&&(e.qvis.congestion={correspondingPackets:[]})}fixMetricUpdates(e){const t=[];if(0===e.length)return t;let n=0;for(const a of e)e.length>0&&t.push([a[0],n]),t.push(a),n=a[1];return t.push([this.mainGraphState.currentPerspective().originalRangeX[1]+1,t[t.length-1][1]]),t}transformTime(e){return void 0===this._startTimeOffset?(console.error("CongestionGraphD3Renderer:transformTime : _startTimeOffset was not set. We need this here!"),e):e+this._startTimeOffset}}let Rn=class extends d["c"]{constructor(){super(...arguments),this.renderer=void 0}get connection(){return this.config.connection}created(){this.renderer=new Pn("congestion-graph"),this.config.renderer=this.renderer}mounted(){this.config&&this.renderer&&void 0!==this.config.connection&&this.renderer.render(this.config)}hideLegend(e){e.target.classList.add("hiddenLegend")}showLegend(e){e.target.classList.remove("hiddenLegend")}onConfigChanged(e,t){console.log("CongestionGraphRenderer:onConfigChanged : ",e,t),this.renderer&&void 0!==e.connection&&this.renderer.render(e)}};Object(l["a"])([Object(d["b"])()],Rn.prototype,"config",void 0),Object(l["a"])([Object(d["d"])("config",{immediate:!0,deep:!0})],Rn.prototype,"onConfigChanged",null),Rn=Object(l["a"])([d["a"]],Rn);var In=Rn,Gn=In,On=(n("9d5e"),Object(q["a"])(Gn,xn,En,!1,null,null,null)),Fn=On.exports;let Dn=class extends d["c"]{constructor(){super(...arguments),this.store=Object(h["e"])(Tt,this.$store),this.config=this.store.congestionGraphConfig}created(){console.log("container created",this.config)}};Dn=Object(l["a"])([Object(d["a"])({components:{CongestionGraphConfigurator:wn,CongestionGraphRenderer:Fn}})],Dn);var An=Dn,Ln=An,Nn=Object(q["a"])(Ln,un,fn,!1,null,null,null),Mn=Nn.exports;let qn=class extends d["c"]{};qn=Object(l["a"])([Object(d["a"])({components:{CongestionGraphContainer:Mn}})],qn);var Un=qn,zn=Un,Hn=Object(q["a"])(zn,mn,gn,!1,null,null,null),jn=Hn.exports,Qn=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("MultiplexingGraphContainer")],1)},Vn=[],Bn=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"home"},[n("MultiplexingGraphConfigurator",{attrs:{config:e.config}}),n("MultiplexingGraphRenderer",{attrs:{config:e.config}})],1)},Wn=[],Yn=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticStyle:{"background-color":"#d1ecf1",padding:"0px 10px"}},[n("b-container",{attrs:{fluid:""}},[n("b-row",{attrs:{"align-h":"center"}},[n("p",{staticStyle:{"margin-top":"10px"}},[e._v("Select a trace via the dropdown(s) below to visualize it in the stream graph")])]),n("b-row",{attrs:{"align-h":"center"}},[e.config.connections.length>0?n("ConnectionConfigurator",{attrs:{allGroups:e.store.groups,connection:e.config.connections[0],canBeRemoved:!1,onConnectionSelected:e.onConnectionSelected}}):e._e()],1),n("b-row",{attrs:{"align-h":"center"}},[n("b-form-checkbox",{staticClass:"mr-3",attrs:{id:"waterfall-checkbox",name:"waterfall-checkbox"},model:{value:e.config.showwaterfall,callback:function(t){e.$set(e.config,"showwaterfall",t)},expression:"config.showwaterfall"}},[e._v("\n                Show waterfall\n            ")]),n("b-form-checkbox",{attrs:{id:"byteranges-checkbox",name:"byteranges-checkbox"},model:{value:e.config.showbyteranges,callback:function(t){e.$set(e.config,"showbyteranges",t)},expression:"config.showbyteranges"}},[e._v("\n                Show byte ranges\n            ")]),e.allowSelectAll?n("b-button",{staticClass:"ml-3",attrs:{disabled:0===e.config.connections.length,variant:"primary"},on:{click:function(t){return e.selectAllConnections()}}},[e._v("Load all connections at once")]):e._e()],1),0===this.store.outstandingRequestCount&&0===this.store.groups.length?n("b-alert",{attrs:{show:"",variant:"danger"}},[e._v("Please load a trace file to visualize it")]):0===this.store.groups.length?n("b-alert",{attrs:{show:"",variant:"warning"}},[e._v("Loading files...")]):e._e()],1)],1)},Xn=[];let $n=class extends d["c"]{constructor(){super(...arguments),this.store=Object(h["e"])(A,this.$store)}onConnectionSelected(e){console.log("MultiplexingGraphConfigurator:onConnectionSelected : ",this.config,e),this.config.connections=[e]}get allowSelectAll(){return window.location.toString().indexOf(":8080")>=0}selectAllConnections(){window.holblockinfo=new Array;const e=[];for(const t of this.store.groups)t.filename.indexOf("DEMO")<0&&e.push(...t.getConnections());this.config.showwaterfall=!1,this.config.connections=e}mounted(){0===this.config.connections.length&&this.store.groups.length>0&&this.selectDefault()}updated(){0===this.config.connections.length&&this.store.groups.length>0&&this.selectDefault()}selectDefault(){console.log("MultiplexingGraphConfigurator:selectDefault: adding new default connection configurator",this.store.groups),this.config.connections=[this.store.groups[0].getConnections()[0]]}};Object(l["a"])([Object(d["b"])()],$n.prototype,"config",void 0),$n=Object(l["a"])([Object(d["a"])({components:{ConnectionConfigurator:Be}})],$n);var Jn,Kn=$n,Zn=Kn,ea=(n("5bb0"),Object(q["a"])(Zn,Yn,Xn,!1,null,"1eb2b106",null)),ta=ea.exports,na=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("b-container",{attrs:{fluid:""}},[n("b-row",{attrs:{"align-v":"center"}},[n("b-col",{attrs:{cols:"6"}},[n("div",{staticStyle:{width:"100%"},attrs:{id:"multiplexing-stats"}})]),n("b-col",{attrs:{cols:"6"}},[n("div",{staticStyle:{width:"100%"},attrs:{id:"multiplexing-stats-streams"}})])],1)],1),e._l(this.config.connections,(function(t,a){return[n("MultiplexingGraphCollapsedRenderer",{key:a,staticStyle:{width:"100%",border:"5px solid #d1ecf1"},attrs:{connection:t,showwaterfall:e.config.showwaterfall,showbyteranges:e.config.showbyteranges}})]})),n("div",{attrs:{id:"multiplexing-packet-tooltip"}})],2)},aa=[],ia=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("b-container",{staticStyle:{width:"100%"},attrs:{id:"multiplexingToplevelContainer",fluid:""}},[n("b-row",{staticStyle:{"text-align":"center"},attrs:{"align-v":"center"}},[n("b-col",{attrs:{cols:"12"}},[n("h4",[e._v(e._s(void 0!==e.connection?e.connection.parent.filename+" : "+e.connection.getLongName():""))])])],1),e.showstreamdetail?n("b-row",{staticStyle:{width:"100%"},attrs:{"align-v":"center"}},[n("b-col",{attrs:{cols:"1"}},[e._v("\n            Selected stream's details\n        ")]),n("b-col",{attrs:{cols:"11"}},[n("div",[n("span",{style:e.streamDetail.style},[e._v(" ")]),e._v(" Stream "),n("span",{staticClass:"font-weight-bold"},[e._v(e._s(e.streamDetail.stream_id))]),e._v(" : Requested at "+e._s(e.streamDetail.data.requestTime.toFixed(2))+"ms. Transmitted from "+e._s(e.streamDetail.data.startTime.toFixed(2))+"ms to "+e._s(e.streamDetail.data.endTime.toFixed(2))+"ms ("+e._s((e.streamDetail.data.endTime.toFixed(2)-e.streamDetail.data.startTime.toFixed(2)).toFixed(2))+"ms). "+e._s(e.streamDetail.data.totalData)+" bytes spread over "+e._s(e.streamDetail.data.frameCount)+" frames (including retransmits). ")])])],1):e._e(),e.showwaterfall?n("b-row",{staticStyle:{height:"165px",width:"100%"},attrs:{"align-v":"center"}},[n("b-col",{attrs:{cols:"1"}},[e._v("\n            Waterfall\n        ")]),n("b-col",{attrs:{cols:"11"}},[n("div",{staticStyle:{width:"100%",height:"165px","overflow-y":"auto"}},[n("div",{attrs:{id:e.id_waterfall}})])])],1):e._e(),n("b-row",{staticStyle:{height:"5px"}}),n("b-row",{staticStyle:{height:"70px",width:"100%",border:"1px solid red",display:"none"},attrs:{"align-v":"center"}},[n("b-col",{attrs:{cols:"1"}},[e._v("\n            Simulated FIFO order\n        ")]),n("b-col",{attrs:{cols:"11"}},[n("div",{staticStyle:{width:"100%"},attrs:{id:e.id_fifo}})])],1),n("b-row",{staticStyle:{height:"5px"}}),n("b-row",{staticStyle:{height:"110px",width:"100%"},attrs:{"align-v":"center"}},[n("b-col",{attrs:{cols:"1"}},[e._v("\n            Multiplexed data flow\n        ")]),n("b-col",{attrs:{cols:"11"}},[n("div",{staticStyle:{width:"100%"},attrs:{id:e.id_data}})])],1),e.showbyteranges?n("b-row",{staticStyle:{height:"520px",width:"100%","margin-bottom":"10px"},attrs:{"align-v":"center"}},[n("b-col",{attrs:{cols:"1"}},[e._v("\n            Byterange per STREAM frame\n        ")]),n("b-col",{attrs:{cols:"11"}},[n("div",{staticStyle:{width:"100%"},attrs:{id:e.id_byterange}})])],1):e._e()],1)},ra=[];class oa{static isDataStream(e){return parseInt(e,10)%4===0}static StreamIDToColor(e){return Bt.StreamIDToColor(e,"HTTP3")}}class sa{constructor(e){this.rendering=!1,this.height=500,this.dimensions={},this.containerID=e}async render(e,t,n){if(this.rendering)return!1;console.log("MultiplexingGraphD3ByterangesRenderer:render",n),this.rendering=!0;const a=this.setup();return a?(await this.renderLive(e,t,n),this.rendering=!1,!0):(this.rendering=!1,!1)}zoom(e){this.updateZoom(e)}setup(){const e=document.getElementById(this.containerID);return this.dimensions.margin={top:20,right:40,bottom:20,left:20},this.dimensions.width=e.clientWidth-this.dimensions.margin.left-this.dimensions.margin.right,this.dimensions.height=this.height,tt["j"]("#"+this.containerID).selectAll("*").remove(),this.svg=tt["j"]("#"+this.containerID).append("svg").attr("width",this.dimensions.width+this.dimensions.margin.left+this.dimensions.margin.right).attr("height",this.dimensions.height+this.dimensions.margin.top+this.dimensions.margin.bottom).attr("xmlns","http://www.w3.org/2000/svg").attr("xmlns:xlink","http://www.w3.org/1999/xlink").attr("font-family","Trebuchet-ms").append("g").attr("transform","translate("+this.dimensions.margin.left+","+this.dimensions.margin.top+")"),!0}async renderLive(e,t,n){console.log("Rendering multiplexing byteranges graph",n);const a=e.filter(e=>""+e.streamID===""+n),i=t.filter(e=>""+e.streamID===""+n);let r=0;for(const u of a){const e=u.offset+u.length-1;e>r&&(r=e)}const o=tt["i"]().domain([1,e[e.length-1].countEnd]).range([0,this.dimensions.width]),s=this.svg.append("g");s.call(tt["d"](o));const c=tt["i"]().domain([0,r]).range([0,this.dimensions.height]),l=this.svg.append("g").attr("transform","translate(0, 0)");l.call(tt["c"](c));this.svg.append("defs").append("SVG:clipPath").attr("id","byterange-clip").append("SVG:rect").attr("width",this.dimensions.width).attr("height",this.dimensions.height).attr("x",0).attr("y",0);const h=this.svg.append("g").attr("clip-path","url(#byterange-clip)"),d=1,p=1;h.selectAll("rect.packet").data(a).enter().append("rect").attr("x",e=>{return o(e.countStart)}).attr("y",e=>c(e.offset)).attr("fill",e=>oa.StreamIDToColor(""+e.streamID)[0]).style("opacity",1).attr("class","packet").attr("width",e=>Math.max(1,o(e.countEnd)-o(e.countStart))*d).attr("height",e=>Math.max(1,c(e.length-1))*p);const m=.2;h.selectAll("rect.pingback").data(a).enter().append("rect").attr("x",e=>o(1)).attr("y",e=>c(e.offset)).attr("fill",e=>oa.StreamIDToColor(""+e.streamID)[0]).style("opacity",m).attr("class","pingback").attr("width",e=>Math.max(1,o(e.countEnd)-o(1))).attr("height",e=>c(e.length-1));const g=1;h.selectAll("rect.dataMoved").data(i).enter().append("rect").attr("x",e=>o(e.countStart+g)).attr("y",e=>c(e.offset)).attr("fill","black").style("opacity",1).attr("class","dataMoved").attr("width",e=>Math.max(1,o(e.countEnd)-o(e.countStart))*d).attr("height",e=>c(e.offset+e.length-1)-c(e.offset)),this.updateZoom=t=>{const a=t,i=Math.max(0,Math.ceil(a.domain()[0])+1),r=Math.min(e.length-1,Math.floor(a.domain()[1])-1);r>e.length&&console.error("Something went wrong transforming Y domain byterangeszoom",r,e.length);let o=Number.MAX_VALUE,d=0;for(let s=i;s<r;++s){const t=e[s];""+t.streamID===""+n&&t.offset<o&&(o=parseInt(t.offset,0))}for(let s=r;s>i;--s){const t=e[s];t&&(""+t.streamID===""+n&&parseInt(t.offset,10)+parseInt(t.length,10)-1>d&&(d=parseInt(t.offset,0)+parseInt(t.length,10)-1))}o>d&&console.error("Something went terribly wrong",o,d);const p=c.copy().domain([o,d]);s.call(tt["d"](a)),l.call(tt["b"](p)),h.selectAll(".packet").attr("x",e=>a(e.countStart)).attr("width",e=>Math.max(1,a(e.countEnd)-a(e.countStart))).attr("y",e=>p(e.offset)).attr("height",e=>Math.max(1,p(e.offset+e.length-1)-p(e.offset))),h.selectAll(".pingback").attr("x",e=>a(1)).attr("width",e=>a(e.countEnd)-a(1)).attr("y",e=>p(e.offset)).attr("height",e=>{return p(e.offset+e.length-1)-p(e.offset)}),h.selectAll(".dataMoved").attr("x",e=>a(e.countStart+g)).attr("width",e=>Math.max(1,a(e.countEnd)-a(e.countStart))).attr("y",e=>p(e.offset)).attr("height",e=>{return p(e.offset+e.length-1)-p(e.offset)})}}}(function(e){e[e["Normal"]=0]="Normal",e[e["Future"]=1]="Future",e[e["Duplicate"]=2]="Duplicate",e[e["Retransmit"]=3]="Retransmit",e[e["Reordered"]=4]="Reordered",e[e["UNKNOWN"]=5]="UNKNOWN"})(Jn||(Jn={}));class ca{constructor(e,t){this.axisLocation="bottom",this.waterfallRenderer=void 0,this.rendering=!1,this.barHeight=70,this.currentDomain=void 0,this.dimensions={},this.containerID=e,this.byteRangeRenderer=new sa(t)}async render(e){if(this.rendering)return!1;console.log("MultiplexingGraphD3CollapsedRenderer:render",e),this.rendering=!0;const t=this.setup(e);return t?(await this.renderLive(),this.rendering=!1,!0):(this.rendering=!1,!1)}setup(e){this.connection=e,this.connection.setupLookupTable();const t=document.getElementById(this.containerID);return this.dimensions.margin={top:0,right:40,bottom:20,left:20},"top"===this.axisLocation?this.dimensions.margin.top=20:this.dimensions.margin.bottom=40,this.dimensions.width=t.clientWidth-this.dimensions.margin.left-this.dimensions.margin.right,this.dimensions.height=this.barHeight,tt["j"]("#"+this.containerID).selectAll("*").remove(),this.svg=tt["j"]("#"+this.containerID).append("svg").attr("width",this.dimensions.width+this.dimensions.margin.left+this.dimensions.margin.right).attr("height",this.dimensions.height+this.dimensions.margin.top+this.dimensions.margin.bottom).attr("xmlns","http://www.w3.org/2000/svg").attr("xmlns:xlink","http://www.w3.org/1999/xlink").attr("font-family","Trebuchet-ms").append("g").attr("transform","translate("+this.dimensions.margin.left+","+this.dimensions.margin.top+")"),this.tooltip=tt["j"]("#multiplexing-packet-tooltip").style("opacity",0).style("position","absolute").style("padding","5px").style("pointer-events","none").style("background","lightsteelblue"),!0}async renderLive(){console.log("Rendering multiplexinggraph");const e=this.connection.getEventParser(),t=e.load(this.connection.getEvents()[this.connection.getEvents().length-1]).absoluteTime-e.load(this.connection.getEvents()[0]).absoluteTime;console.log("DEBUG MS range for this trace: ",t);let n=1,a=0;const i=new Set;let r=w["TransportEventType"].packet_received,o="received";this.connection.vantagePoint&&this.connection.vantagePoint.type===w["VantagePointType"].server&&(r=w["TransportEventType"].packet_sent,o="sent");const s=new Map,c=(e,t,n,a)=>{let i=Jn.UNKNOWN,r=0,o=void 0,s=void 0;for(const h of e.holes)if(n>=h.from&&n<=h.to||a>=h.from&&a<=h.to){s=h;break}if(s)r=t-s.time,i=Jn.Retransmit;else{let c=void 0;for(const t of e.filled)if(n>=t.from&&n<=t.to||a>=t.from&&a<=t.to){c=t;break}if(c)return console.error("DUPLICATE FOUND VIA FILLED!",c,n,a),{type:Jn.Duplicate,timeDifference:0,createdHole:void 0};if(a<e.currentHead)return console.error("calculateFrameArrivalType : duplicate data found! Not really an error, but means spurious retransmissions.",e.currentHead,n,a,t),{type:Jn.Duplicate,timeDifference:0,createdHole:void 0};if(n>e.highestReceived+1)i=Jn.Future,o={time:t,from:e.highestReceived+1,to:n};else if(n===e.highestReceived+1)i=Jn.Normal;else if(a>e.highestReceived+1)i=Jn.Normal;else{let o=!1;for(let t=0;t<e.filled.length-1;++t){const i=e.filled[t],r=e.filled[t+1];n>=i.from&&a>i.to&&a<=r.to&&(o=!0)}if(o){s=void 0;for(const t of e.holes)if(n<t.from&&a>t.to){s=t;break}s?(console.error("Found spanning frame, shouldn't happen in practice, only when debugging",s,n,a,e),r=t-s.time,i=Jn.Retransmit):(console.error("calculateFrameArrivalType: Spanning frame, but not hole found... very weird",n,a,e),i=Jn.UNKNOWN)}else console.error("calculateFrameArrivalType: no hole found for frame, but also nowhere else we would expect it...",n,a,e),i=Jn.UNKNOWN}}if(i===Jn.Retransmit){++e.timeDifferenceSampleCount,e.cumulativeTimeDifference+=r;const t=e.cumulativeTimeDifference/e.timeDifferenceSampleCount;r<20&&r<.3*t&&(i=Jn.Reordered)}a>e.highestReceived&&(e.highestReceived=a),e.filled.push({from:n,to:a,time:t}),e.filled.sort((e,t)=>{return e.from-t.from});const c=new Array;c.push(e.filled[0]);for(let h=1;h<e.filled.length;++h){const n=c.pop(),a=e.filled[h];if(n.to+1>=a.from){const e=Math.max(n.to,a.to);c.push({from:n.from,to:e,time:t})}else c.push(n),c.push(a)}e.filled=c;const l=new Array;for(let h=0;h<e.filled.length-1;++h){const n=e.filled[h],a=e.filled[h+1],i={from:n.to+1,to:a.from-1,time:-666};let r=void 0;for(const t of e.holes)if(i.from>=t.from&&i.from<=t.to||i.to>=t.from&&i.to<=t.to){r=t;break}i.time=r?r.time:t,l.push(i)}return e.holes=l,e.holes.length>0?e.currentHead=e.holes[0].from-1:e.currentHead=e.filled[e.filled.length-1].to,{type:i,timeDifference:r,createdHole:void 0!==o?[o.from,o.to]:void 0}},l=[],h=[];for(const S of this.connection.getEvents()){const e=this.connection.parseEvent(S),t=e.data;if(e.name===r){const r=new Array;if(t.frames&&t.frames.length>0)for(const o of t.frames){if(void 0===o.stream_id||!oa.isDataStream(""+o.stream_id))continue;const h=parseInt(o.stream_id,10);if(o.frame_type&&o.frame_type===w["QUICFrameTypeName"].stream){r.push(o);let d=s.get(h);d||(d={currentHead:-1,highestReceived:-1,holes:new Array,filled:new Array,cumulativeTimeDifference:0,timeDifferenceSampleCount:0,frameCount:0},s.set(h,d));const p=c(d,e.relativeTime,parseInt(o.offset,10),parseInt(o.offset,10)+parseInt(o.length,10)-1);d.frameCount+=1,l.push({streamID:h,packetNumber:t.header.packet_number,index:a,size:o.length,countStart:n,countEnd:n+1,arrivalType:p.type,arrivalTimeDifference:p.timeDifference,arrivalCreatedHole:p.createdHole,offset:parseInt(o.offset,10),length:parseInt(o.length,10),time:e.relativeTime}),++n,++a,i.add(h)}}}else if(e.name===w["HTTP3EventType"].data_moved){if(!oa.isDataStream(""+t.stream_id))continue;if("transport"!==t.from&&"application"!==t.to)continue;if(0===l.length){console.error("data moved but no stream frames seen yet... shouldn't happen!",t);continue}const n=parseInt(t.offset,10),a=parseInt(t.length,10);if(0===a){console.error("data_moved event with length 0, shouldn't happen! ignoring...",t);continue}let i=void 0;for(let e=l.length-1;e>=0;--e)if(""+l[e].streamID===""+t.stream_id){i=l[e];break}if(!i){console.error("Data moved but didn't start at previous stream's offset, impossible!!!",i,e.relativeTime,t);continue}h.push({streamID:parseInt(t.stream_id,10),countStart:i.countStart,countEnd:i.countEnd,offset:n,length:a})}}for(const[S,w]of s)w.holes&&0!==w.holes.length&&console.warn("MultiplexingGraphD3CollapsedRenderer : stream has holes, didn't finish completely! Did this connection end pre-maturely?",S,w.holes);this.svg.append("defs").append("SVG:clipPath").attr("id","clip").append("SVG:rect").attr("width",this.dimensions.width).attr("height",this.dimensions.height).attr("x",0).attr("y",0);const d=this.svg.append("g").attr("clip-path","url(#clip)"),p=.3,m=tt["i"]().domain([1,n]).range([0,this.dimensions.width]);this.currentDomain=m;const g=this.svg.append("g");"top"===this.axisLocation?g.call(tt["d"](m)):g.attr("transform","translate(0,"+this.dimensions.height+")").call(tt["a"](m));const u=(e,t)=>{this.tooltip.transition().duration(100).style("opacity",.95);let n="";n+=e.time+"ms : stream "+e.streamID+" : packet number "+e.packetNumber+"<br/>",n+="["+e.offset+", "+(e.offset+e.length-1)+"] (size: "+e.length+")",e.arrivalType===Jn.Retransmit||e.arrivalType===Jn.Reordered?(n+="<br/>",n+="Fills gap that was created "+e.arrivalTimeDifference+"ms ago"):void 0!==e.arrivalCreatedHole&&(n+="<br/>",n+="Creates gap from "+e.arrivalCreatedHole[0]+" to "+e.arrivalCreatedHole[1]+" (size: "+(e.arrivalCreatedHole[1]-e.arrivalCreatedHole[0])+")"),this.tooltip.html(n).style("left",tt["g"].pageX+15+"px").style("top",tt["g"].pageY-75+"px")},f=(e,t)=>{this.tooltip.transition().duration(200).style("opacity",0)},v=.65*this.barHeight,y=.05*this.barHeight,_=.275*this.barHeight;d.selectAll("rect.packet").data(l).enter().append("rect").attr("x",e=>m(e.countStart)-p).attr("y",e=>e.index%2===0?0:.05*v).attr("fill",e=>oa.StreamIDToColor(""+e.streamID)[0]).style("opacity",1).attr("class","packet").attr("width",e=>m(e.countEnd)-m(e.countStart)+2*p).attr("height",e=>v*(e.index%2===0?1:.9)).style("pointer-events","all").on("mouseover",u).on("mouseout",f).on("click",e=>{this.byteRangeRenderer.render(l,h,e.streamID),this.byteRangeRenderer.zoom(this.currentDomain)}),d.selectAll("rect.retransmitPacket").data(l.filter(e=>{return e.arrivalType===Jn.Retransmit})).enter().append("rect").attr("x",e=>m(e.countStart)-p).attr("y",e=>v+y).attr("fill",e=>"black").style("opacity",1).attr("class","retransmitPacket").attr("width",e=>m(e.countEnd)-m(e.countStart)+2*p).attr("height",e=>_),d.selectAll("rect.reorderPacket").data(l.filter(e=>{return e.arrivalType===Jn.Reordered})).enter().append("rect").attr("x",e=>m(e.countStart)-p).attr("y",e=>v+y).attr("fill",e=>"blue").style("opacity",1).attr("class","reorderPacket").attr("width",e=>m(e.countEnd)-m(e.countStart)+2*p).attr("height",e=>_),d.selectAll("rect.duplicatePacket").data(l.filter(e=>{return e.arrivalType===Jn.Duplicate})).enter().append("rect").attr("x",e=>m(e.countStart)-p).attr("y",e=>v+y).attr("fill",e=>"red").style("opacity",1).attr("class","duplicatePacket").attr("width",e=>m(e.countEnd)-m(e.countStart)+2*p).attr("height",e=>_),d.selectAll("rect.futurePacket").data(l.filter(e=>{return e.arrivalType===Jn.Future})).enter().append("rect").attr("x",e=>m(e.countStart)-p).attr("y",e=>v+y).attr("fill",e=>"purple").style("opacity",1).attr("class","futurePacket").attr("width",e=>m(e.countEnd)-m(e.countStart)+2*p).attr("height",e=>_),this.svg.append("g").append("text").attr("x",m(n/2)).attr("y",this.dimensions.height+this.dimensions.margin.bottom-10).attr("dominant-baseline","baseline").style("text-anchor","middle").style("font-size","14").style("font-family","Trebuchet MS").attr("fill","#000000").text("Count of STREAM frames "+o+" (regardless of size, includes retransmits)");const T=()=>{const e=tt["g"].transform.rescaleX(m);this.currentDomain=e,"top"===this.axisLocation?g.call(tt["d"](e)):g.call(tt["a"](e)),d.selectAll(".packet,.retransmitPacket,.reorderPacket,.duplicatePacket,.futurePacket").attr("x",t=>e(t.countStart)-p).attr("width",t=>e(t.countEnd)-e(t.countStart)+2*p),this.byteRangeRenderer.zoom(e)},b=tt["k"]().scaleExtent([1,30]).translateExtent([[0,0],[this.dimensions.width,this.dimensions.height]]).extent([[0,0],[this.dimensions.width,this.dimensions.height]]).on("zoom",T);this.svg.call(b),l.length>0&&this.byteRangeRenderer.render(l,h,0),void 0!==this.waterfallRenderer&&(this.waterfallRenderer.onStreamClicked=e=>{void 0!==this.byteRangeRenderer&&(this.byteRangeRenderer.render(l,h,parseInt(e,0)),this.byteRangeRenderer.zoom(this.currentDomain))})}}class la{constructor(e,t){this.rendering=!1,this.onStreamClicked=void 0,this.barHeight=120,this.dimensions={},this.containerID=e,this.onStreamClickedUpper=t}async render(e){if(this.rendering)return!1;console.log("MultiplexingGraphD3WaterfallRenderer:render",e),this.rendering=!0;const t=this.setup(e);return t?(await this.renderLive(),this.rendering=!1,!0):(this.rendering=!1,!1)}setup(e){this.connection=e,this.connection.setupLookupTable();const t=document.getElementById(this.containerID);return this.dimensions.margin={top:40,right:40,bottom:0,left:20},this.dimensions.width=t.clientWidth-this.dimensions.margin.left-this.dimensions.margin.right,this.dimensions.height=this.barHeight,tt["j"]("#"+this.containerID).selectAll("*").remove(),this.svg=tt["j"]("#"+this.containerID).append("svg").attr("width",this.dimensions.width+this.dimensions.margin.left+this.dimensions.margin.right).attr("height",this.dimensions.height+this.dimensions.margin.top+this.dimensions.margin.bottom).attr("xmlns","http://www.w3.org/2000/svg").attr("xmlns:xlink","http://www.w3.org/1999/xlink").attr("font-family","Trebuchet-ms").append("g").attr("transform","translate("+this.dimensions.margin.left+","+this.dimensions.margin.top+")"),!0}async renderLive(){console.log("Rendering multiplexing waterfall");let e=w["TransportEventType"].packet_sent,t=w["TransportEventType"].packet_received,n="received";this.connection.vantagePoint&&this.connection.vantagePoint.type===w["VantagePointType"].server&&(e=w["TransportEventType"].packet_received,t=w["TransportEventType"].packet_sent,n="sent");let a=0;const i=new Map;for(const m of this.connection.getEvents()){const n=this.connection.parseEvent(m),r=n.data;if(n.name!==e&&n.name!==t)continue;if(!r.frames)continue;const o=[];for(const e of r.frames)e.frame_type===w["QUICFrameTypeName"].stream&&o.push(e);if(0!==o.length)for(const s of o){if(!oa.isDataStream(""+s.stream_id))continue;const r=parseInt(s.stream_id,10);n.name===t&&++a;let o=i.get(r);if(o){if(n.name!==t)continue;-1===o.startIndex&&(o.startIndex=a,o.startTime=n.relativeTime),a>o.stopIndex&&(o.stopIndex=a,o.endTime=n.relativeTime),o.frameCount++,o.totalData+=parseInt(s.length,0)}else{if(n.name!==e){console.error("MultiplexingGraphD3WaterfallRenderer: first packet for stream was not request! Shouldn't happen!",n);break}o={stream_id:r,order:i.size,requestIndex:a,startIndex:-1,stopIndex:-1,requestTime:n.relativeTime,startTime:-1,endTime:-1,frameCount:0,totalData:0},i.set(r,o)}}}let r=4;r*i.size<this.barHeight&&(r=.95*this.barHeight/i.size),this.dimensions.height=Math.ceil(r*i.size)+this.dimensions.margin.top,tt["j"]("#"+this.containerID+" svg").attr("height",this.dimensions.height);const o=tt["i"]().domain([1,a]).range([0,this.dimensions.width]),s=(this.svg.append("g"),this.svg.append("defs").append("SVG:clipPath").attr("id","clip").append("SVG:rect").attr("width",this.dimensions.width+this.dimensions.margin.left).attr("height",this.dimensions.height).attr("x",-this.dimensions.margin.left).attr("y",0),this.svg.append("g"));if(i.size<=1||a<5)return void s.append("text").attr("x",200).attr("y",100).attr("dominant-baseline","baseline").style("text-anchor","start").style("font-size","14").style("font-family","Trebuchet MS").attr("fill","#000000").text("This trace doesn't contain multiple independent streams (or has less than 5 STREAM frames), which is needed for the waterfall.");const c=s.selectAll("rect").data([...i.values()]).enter().append("g"),l=4;c.append("rect").attr("x",e=>{return o(e.startIndex)-.15}).attr("y",e=>{return e.order*r}).attr("fill",e=>{return oa.StreamIDToColor(""+e.stream_id)[0]}).style("opacity",1).attr("class","packet").attr("width",e=>{return Math.max(l,o(e.stopIndex)-o(e.startIndex)+.3)}).attr("height",Math.max(r,.01)).on("click",e=>{if(this.onStreamClickedUpper){const t={};t.stream_id=e.stream_id,t.data=i.get(e.stream_id),this.onStreamClickedUpper(t)}this.onStreamClicked&&this.onStreamClicked(""+e.stream_id)});const h=Math.min(15,Math.max(r/1.2,.01));c.append("circle").attr("cx",e=>{return o(e.requestIndex)+h/2}).attr("cy",e=>{return e.order*r+h/1.6}).attr("fill",e=>{return oa.StreamIDToColor(""+e.stream_id)[0]}).attr("stroke","black").attr("stroke-width",e=>{return h/5}).attr("r",h/2);const d=-this.dimensions.margin.top/2,p=13;s.append("circle").attr("cx",o(0)+p/2).attr("cy",d).attr("fill",e=>{return"white"}).attr("stroke",e=>{return"black"}).attr("stroke-width",e=>{return p/5}).attr("r",p/2),s.append("text").attr("x",o(0)+p/2+20).attr("y",d+1).attr("dominant-baseline","middle").style("text-anchor","start").style("font-size","14").style("font-family","Trebuchet MS").attr("fill","#000000").text("Request "+n),s.append("rect").attr("x",o(0)+p/2+150).attr("y",d-p/2).attr("fill",e=>{return"white"}).attr("stroke",e=>{return"black"}).attr("stroke-width",e=>{return p/5}).attr("width",20).attr("height",p),s.append("text").attr("x",o(0)+p/2+180).attr("y",d).attr("dominant-baseline","middle").style("text-anchor","start").style("font-size","14").style("font-family","Trebuchet MS").attr("fill","#000000").text('Colored while stream is "active" (between first and last STREAM frame '+n+")")}}let ha=class extends d["c"]{constructor(){super(...arguments),this.streamDetail=null,this.skipRender=!1}get id_waterfall(){return this.id_fifo.replace("-fifo-","-waterfall-")}get id_fifo(){return"multiplexing-fifo-"+Math.round(1e5*Math.random())}get id_data(){return this.id_fifo.replace("-fifo-","-data-")}get id_byterange(){return this.id_fifo.replace("-fifo-","-byterange-")}get showstreamdetail(){return null!==this.streamDetail}created(){this.waterfallRenderer=new la(this.id_waterfall,e=>{this.onStreamClicked(e)}),this.dataRenderer=new ca(this.id_data,this.id_byterange)}mounted(){this.updateRenderers()}updated(){this.updateRenderers()}onStreamClicked(e){this.skipRender=!0,this.streamDetail=e,this.streamDetail.style={display:"inline-block",paddingRight:"10px",width:"50px",height:"100%",backgroundColor:Bt.StreamIDToColor(""+this.streamDetail.stream_id,"HTTP3")[0]}}updateRenderers(){if(this.skipRender)return void(this.skipRender=!1);const e=Math.ceil(.9075*(document.getElementById("multiplexingToplevelContainer").clientWidth-90))+"px";document.getElementById(""+this.id_waterfall).style.width=e,document.getElementById(""+this.id_data).style.width=e,document.getElementById(""+this.id_byterange).style.width=e,setTimeout(()=>{void 0!==this.connection&&(this.showwaterfall?(this.waterfallRenderer.render(this.connection),this.dataRenderer.waterfallRenderer=this.waterfallRenderer):this.dataRenderer.waterfallRenderer=void 0,this.dataRenderer.render(this.connection))},100)}};Object(l["a"])([Object(d["b"])()],ha.prototype,"connection",void 0),Object(l["a"])([Object(d["b"])()],ha.prototype,"showwaterfall",void 0),Object(l["a"])([Object(d["b"])()],ha.prototype,"showbyteranges",void 0),ha=Object(l["a"])([d["a"]],ha);var da=ha,pa=da,ma=Object(q["a"])(pa,ia,ra,!1,null,null,null),ga=ma.exports;let ua=class extends d["c"]{get connection(){return this.config.connections[0]}created(){}};Object(l["a"])([Object(d["b"])()],ua.prototype,"config",void 0),ua=Object(l["a"])([Object(d["a"])({components:{MultiplexingGraphCollapsedRenderer:ga}})],ua);var fa=ua,va=fa,ya=Object(q["a"])(va,na,aa,!1,null,null,null),_a=ya.exports;let Ta=class extends d["c"]{constructor(){super(...arguments),this.store=Object(h["e"])(Tt,this.$store),this.config=this.store.multiplexingGraphConfig}};Ta=Object(l["a"])([Object(d["a"])({components:{MultiplexingGraphConfigurator:ta,MultiplexingGraphRenderer:_a}})],Ta);var ba=Ta,Sa=ba,wa=Object(q["a"])(Sa,Bn,Wn,!1,null,null,null),xa=wa.exports;let Ea=class extends d["c"]{};Ea=Object(l["a"])([Object(d["a"])({components:{MultiplexingGraphContainer:xa}})],Ea);var ka=Ea,Ca=ka,Pa=Object(q["a"])(Ca,Qn,Vn,!1,null,null,null),Ra=Pa.exports,Ia=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("StatisticsContainer")],1)},Ga=[],Oa=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"home"},[n("StatisticsConfigurator",{attrs:{config:e.config}}),n("StatisticsRenderer",{attrs:{config:e.config}})],1)},Fa=[],Da=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticStyle:{"background-color":"#fff3cd",padding:"0px 10px"}},[n("b-container",{attrs:{fluid:""}},[n("b-row",{attrs:{"align-h":"center"}},[n("p",{staticStyle:{"margin-top":"10px"}},[e._v("Select a file via the dropdown(s) below to view its statistics")])]),n("b-row",{attrs:{"align-h":"center"}},[void 0!==e.config.group?n("ConnectionConfigurator",{attrs:{allGroups:e.store.groups,group:e.config.group,canBeRemoved:!1,allowGroupSelection:!0,allowConnectionSelection:!1,onGroupSelected:e.onGroupSelected}}):e._e()],1),0===this.store.outstandingRequestCount&&0===this.store.groups.length?n("b-alert",{attrs:{show:"",variant:"danger"}},[e._v("Please load a trace file to visualize it")]):0===this.store.groups.length?n("b-alert",{attrs:{show:"",variant:"warning"}},[e._v("Loading files...")]):e._e()],1)],1)},Aa=[];let La=class extends d["c"]{constructor(){super(...arguments),this.store=Object(h["e"])(A,this.$store)}onGroupSelected(e){console.log("StatisticsConfigurator:onGroupSelected : ",this.config,e),this.config.group=e}mounted(){void 0===this.config.group&&this.store.groups.length>0&&this.selectDefault()}updated(){void 0===this.config.group&&this.store.groups.length>0&&this.selectDefault()}selectDefault(){console.log("selectDefault: adding new default connection configurator",this.store.groups),this.config.group=this.store.groups[0]}};Object(l["a"])([Object(d["b"])()],La.prototype,"config",void 0),La=Object(l["a"])([Object(d["a"])({components:{ConnectionConfigurator:Be}})],La);var Na=La,Ma=Na,qa=(n("6010"),Object(q["a"])(Ma,Da,Aa,!1,null,"d3f9bc98",null)),Ua=qa.exports,za=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("div",{staticStyle:{width:"100%",border:"5px solid #fff3cd","min-height":"200px"},attrs:{id:"statistics-container"}},[void 0!==e.group?n("div",{staticStyle:{width:"50%","min-width":"1024px","margin-left":"auto","margin-right":"auto"}},[n("h3",[e._v("File info")]),n("b-table-simple",{attrs:{fixed:"",bordered:"",small:"",responsive:""}},[n("colgroup",[n("col",{attrs:{width:"20%",align:"right"}})]),n("b-thead",{attrs:{"head-variant":"dark"}},[n("b-tr",[n("b-th",[e._v("Aspect")]),n("b-th",[e._v("Value")])],1)],1),n("b-tbody",[""!==e.group.filename?n("b-tr",[n("b-td",[e._v("Filename")]),n("b-td",[e._v(e._s(e.group.filename))])],1):e._e(),""!==e.group.title?n("b-tr",[n("b-td",[e._v("Title")]),n("b-td",[e._v(e._s(e.group.title))])],1):e._e(),""!==e.group.description?n("b-tr",[n("b-td",[e._v("Description")]),n("b-td",[e._v(e._s(e.group.description))])],1):e._e(),n("b-tr",[n("b-td",[e._v("qlog version")]),n("b-td",[e._v(e._s(e.group.version))])],1),Object.keys(e.group.summary).length>0?n("b-tr",[n("b-td",[e._v("Summary")]),n("b-td",[e._v(e._s(JSON.stringify(e.group.summary,null,4)))])],1):e._e(),n("b-tr",[n("b-td",[e._v("Trace count")]),n("b-td",[e._v(e._s(e.group.getConnections().filter((function(e){return!e.wasAutoGenerated})).length))])],1),n("b-tr",[n("b-td",[e._v("Total event count")]),n("b-td",[e._v(e._s(e.totalEventCount))])],1)],1)],1),e._l(e.group.getConnections().filter((function(e){return!e.wasAutoGenerated})),(function(t,a){return e.totalEventCount>0?n("StatisticsConnectionRenderer",{key:"conn_"+a,attrs:{connection:t,index:a}}):e._e()}))],2):e._e()])])},Ha=[],ja=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("h3",[e._v("Trace "+e._s(e.index+1)+" info")]),n("b-table-simple",{attrs:{fixed:"",bordered:"",small:"",responsive:"",id:"toplevel"}},[n("colgroup",[n("col",{attrs:{width:"20%"}})]),n("b-tbody",[e.connection.title&&e.connection.title>0?n("b-tr",[n("b-td",[e._v("Title")]),n("b-td",[e._v(e._s(e.connection.title))])],1):e._e(),e.connection.description&&e.connection.description.length>0?n("b-tr",[n("b-td",[e._v("Description")]),n("b-td",[e._v(e._s(e.connection.description))])],1):e._e(),e.connection.vantagePoint?n("b-tr",[n("b-td",[e._v("Vantage point")]),n("b-td",[""!==e.connection.vantagePoint.name?n("span",[e._v(e._s(e.connection.vantagePoint.name)),n("br")]):e._e(),e.connection.vantagePoint.type===e.qlogns.VantagePointType.network?n("span",[e._v(e._s(e.connection.vantagePoint.type)+" : with "+e._s(e.connection.vantagePoint.flow)+" perspective")]):n("span",[e._v(e._s(e.connection.vantagePoint.type))])])],1):e._e(),void 0!==e.H3headersSummary?n("b-tr",[n("b-td",[e._v("H3 connection headers")]),n("b-td",[n("div",{domProps:{innerHTML:e._s(e.H3headersSummary)}})])],1):e._e(),n("b-tr",[n("b-td",[e._v("Event count")]),n("b-td",[e._v(e._s(e.connection.getEvents().length))])],1),n("b-tr",[n("b-td",[e._v("Events")]),n("b-td",[n("b-table-simple",{staticStyle:{"border-bottom":"0px"},attrs:{fixed:"",small:"",borderless:"",responsive:""}},[n("colgroup",[n("col",{attrs:{width:"20%"}})]),n("b-tbody",[n("b-tr",[n("b-th",[e._v("Category")]),n("b-th",[e._v("Event type")]),n("b-th",[e._v("Event count")]),n("b-th",[e._v("% of total occurence")])],1),e._l(e.connection.getLookupTable().entries(),(function(t,a){return e._l(t[1],(function(i,r){return n("b-tr",{key:"evt_"+a+"_"+r},[0===r?n("b-td",{attrs:{rowspan:t[1].size}},[e._v(e._s(t[0]))]):e._e(),n("b-td",[e._v("\n                                        "+e._s(i[0])+"\n                                    ")]),n("b-td",[e._v("\n                                        "+e._s(i[1].length)+"\n                                    ")]),n("b-td",[n("b-progress",{attrs:{value:i[1].length,max:e.connection.getEvents().length,precision:2,"show-progress":""}})],1)],1)}))}))],2)],1)],1)],1),n("b-tr",[n("b-td",[e._v("Frame count")]),n("b-td",[e._v(e._s(e.totalFrameCount))])],1),n("b-tr",[n("b-td",[e._v("Frames")]),n("b-td",[n("b-table-simple",{staticStyle:{"border-bottom":"0px"},attrs:{fixed:"",small:"",borderless:"",responsive:""}},[n("colgroup",[n("col",{attrs:{width:"20%"}})]),n("b-tbody",[n("b-tr",[n("b-th"),n("b-th",[e._v("Frame type")]),n("b-th",[e._v("Frame count")]),n("b-th",[e._v("% of total occurence")])],1),e._l(e.frameLUT,(function(t,a){return n("b-tr",{key:"frame_"+a},[n("b-td"),n("b-td",[e._v("\n                                    "+e._s(t[0])+"\n                                ")]),n("b-td",[e._v("\n                                    "+e._s(t[1])+"\n                                ")]),n("b-td",[n("b-progress",{attrs:{value:t[1],"show-progress":"",precision:2,max:e.totalFrameCount}})],1)],1)}))],2)],1)],1)],1),n("b-tr",[n("b-td",[e._v("Encryption level count")]),n("b-td",[e._v(e._s(Array.from(e.encryptionLUT.keys()).length))])],1),n("b-tr",[n("b-td",[e._v("Encryption levels")]),e.encryptionLUT.size>0?n("b-td",[n("b-table-simple",{staticStyle:{"border-bottom":"0px"},attrs:{fixed:"",small:"",borderless:"",responsive:""}},[n("colgroup",[n("col",{attrs:{width:"20%"}})]),n("b-tbody",[n("b-tr",[n("b-th"),n("b-th",[e._v("Encryption level")]),n("b-th",[e._v("Packet count")]),n("b-th")],1),e._l(e.encryptionLUT,(function(t,a){return n("b-tr",{key:"enc_"+a},[n("b-td"),n("b-td",[e._v("\n                                    "+e._s(t[0])+"\n                                ")]),n("b-td",[e._v("\n                                    "+e._s(t[1])+"\n                                ")]),n("b-td")],1)}))],2)],1)],1):n("b-td",{attrs:{variant:"danger"}},[e._v("\n                    None of the events in this trace had data.packet_type set!\n                ")])],1),n("b-tr",[n("b-td",[e._v("Connection-level Flow Control evolution"),n("br"),e._v("(MAX_DATA, initial_max_data)"),n("br"),n("br"),e._v("\n                    Read as: viewpoint allows the other side to send this much data on the entire connection (all streams combined)\n                ")]),e.encryptionLUT.size>0?n("b-td",[n("b-table-simple",{staticStyle:{"border-bottom":"0px"},attrs:{fixed:"",small:"",borderless:"",responsive:""}},[n("colgroup",[n("col",{attrs:{width:"20%"}})]),n("b-tbody",[n("b-tr",[n("b-th"),n("b-th",[e._v("Viewpoint")]),n("b-th",[e._v("Evolution (bytes)")]),n("b-th")],1),n("b-tr",[n("b-td"),n("b-td",[e._v("\n                                    Local ("+e._s(e.connection.vantagePoint.type)+")\n                                ")]),n("b-td",e._l(e.connectionDataFCLocal,(function(t,a){return n("p",{key:"fcc_"+a},[e._v("\n                                        "+e._s(t)+"\n                                    ")])})),0),n("b-td")],1),n("b-tr",[n("b-td"),n("b-td",[e._v("\n                                    Remote ("+e._s(e.connection.vantagePoint.type===e.qlogns.VantagePointType.client?"server":"client")+")\n                                ")]),n("b-td",e._l(e.connectionDataFCRemote,(function(t,a){return n("p",{key:"fcc_"+a},[e._v("\n                                        "+e._s(t)+"\n                                    ")])})),0),n("b-td")],1)],1)],1)],1):n("b-td",{attrs:{variant:"danger"}},[e._v("\n                    None of the events in this trace had data.packet_type set!\n                ")])],1),n("b-tr",[n("b-td",[e._v("Stream-level Flow Control evolution"),n("br"),e._v("(MAX_STREAM_DATA, initial_max_stream_data_*)"),n("br"),n("br"),e._v("\n                    Read as: viewpoint allows the other side to send this much data on each individual stream\n                ")]),e.streamDataFCRemote.size>0?n("b-td",[n("b-table-simple",{staticStyle:{"border-bottom":"0px"},attrs:{fixed:"",small:"",borderless:"",responsive:""}},[n("colgroup",[n("col",{attrs:{width:"20%"}})]),n("b-tbody",[n("b-tr",[n("b-th"),n("b-th",[e._v("Local Streams ("+e._s(e.connection.vantagePoint.type)+")")]),n("b-th",[e._v("Evolution")]),n("b-th")],1),e._l(e.streamDataFCLocal,(function(t,a){return n("b-tr",{key:"fcsl_"+a},[n("b-td"),n("b-td",[e._v("\n                                    "+e._s(t[0])+"\n                                ")]),n("b-td",e._l(t[1],(function(t,a){return n("p",{key:"fcsl2_"+a},[e._v("\n                                        "+e._s(t)+"\n                                    ")])})),0),n("b-td")],1)})),n("b-tr",[n("b-th"),n("b-th",[e._v("Remote Streams ("+e._s(e.connection.vantagePoint.type===e.qlogns.VantagePointType.client?"server":"client")+")")]),n("b-th",[e._v("Evolution")]),n("b-th")],1),e._l(e.streamDataFCRemote,(function(t,a){return n("b-tr",{key:"fcsr_"+a},[n("b-td"),n("b-td",[e._v("\n                                    "+e._s(t[0])+"\n                                ")]),n("b-td",e._l(t[1],(function(t,a){return n("p",{key:"fcsr2_"+a},[e._v("\n                                        "+e._s(t)+"\n                                    ")])})),0),n("b-td")],1)}))],2)],1)],1):n("b-td",{attrs:{variant:"danger"}},[e._v("\n                    No stream level flow control limits set\n                ")])],1)],1)],1)],1)},Qa=[];let Va=class extends d["c"]{constructor(){super(...arguments),this.frameLookupTable=new Map,this.encryptionLookupTable=new Map,this.h3Headers=void 0,this.flowControlRemote={connectionDataFCList:new Array,connectionDataFCListTimes:new Array,streamDataFCList:new Map,streamDataFCListTimes:new Map,streamsUniFCList:new Array,streamsBidiFCList:new Array},this.flowControlLocal={connectionDataFCList:new Array,connectionDataFCListTimes:new Array,streamDataFCList:new Map,streamDataFCListTimes:new Map,streamsUniFCList:new Array,streamsBidiFCList:new Array}}get H3headersSummary(){this.connection.setupLookupTable();const e=this.connection.lookup(w["EventCategory"].http,w["HTTP3EventType"].frame_created),t=this.connection.lookup(w["EventCategory"].http,w["HTTP3EventType"].frame_parsed);let n=void 0,a=void 0,i=void 0;const r=[...e,...t];for(const o of r){const e=this.connection.parseEvent(o).data;if(e.frame&&void 0!==e.frame.headers)for(const t of e.frame.headers)"server"===t.name?a=t.value:"user-agent"===t.name?n=t.value:":authority"===t.name&&(i=t.value)}return void 0===n&&void 0===a&&void 0===i||(this.h3Headers="User Agent <i><u>"+(n||"unknown")+"</u></i> connected to Server <i><u>"+(a||"unknown")+"</u></i> at <i><u>"+(i||"unknown authority")+"</u></i>"),this.h3Headers}get qlogns(){return w}beforeUpdate(){this.frameLookupTable=new Map,this.encryptionLookupTable=new Map,this.h3Headers=void 0,this.flowControlRemote={connectionDataFCList:new Array,connectionDataFCListTimes:new Array,streamDataFCList:new Map,streamDataFCListTimes:new Map,streamsUniFCList:new Array,streamsBidiFCList:new Array},this.flowControlLocal={connectionDataFCList:new Array,connectionDataFCListTimes:new Array,streamDataFCList:new Map,streamDataFCListTimes:new Map,streamsUniFCList:new Array,streamsBidiFCList:new Array}}get totalFrameCount(){let e=0;const t=this.connection;for(const n of t.getEvents()){const a=t.parseEvent(n);if(a.data&&a.data.frames)for(const t of a.data.frames)++e;a.data&&a.data.frame&&++e}return e}get frameLUT(){const e=this.connection;for(const t of e.getEvents()){const n=e.parseEvent(t);if(n.data&&n.data.frames)for(const e of n.data.frames){const t=this.frameLookupTable.get(e.frame_type)||0;this.frameLookupTable.set(e.frame_type,t+1)}if(n.data&&n.data.frame){const e=this.frameLookupTable.get(n.data.frame.frame_type)||0;this.frameLookupTable.set(n.data.frame.frame_type,e+1)}}return this.frameLookupTable}get encryptionLUT(){const e=this.connection;for(const t of e.getEvents()){const n=e.parseEvent(t);if(n.data&&n.data.packet_type){const e=this.encryptionLookupTable.get(n.data.packet_type)||0;this.encryptionLookupTable.set(n.data.packet_type,e+1)}}return this.encryptionLookupTable}fillConnectionDataFC(e){let t,n;"remote"===e?(t=this.flowControlRemote,n=w["TransportEventType"].packet_received):(t=this.flowControlLocal,n=w["TransportEventType"].packet_sent);const a=this.connection;for(const i of a.getEvents()){const r=a.parseEvent(i);if(r.category===w["EventCategory"].transport&&r.name===w["TransportEventType"].parameters_set&&r.data&&r.data.owner===e&&(t.connectionDataFCListTimes.push(r.relativeTime),t.connectionDataFCList.push(parseInt(r.data.initial_max_data,10))),r.category===w["EventCategory"].transport&&r.name===n&&r.data&&r.data.frames)for(const e of r.data.frames)e.frame_type===w["QUICFrameTypeName"].max_data&&(t.connectionDataFCListTimes.push(r.relativeTime),t.connectionDataFCList.push(parseInt(e.maximum,10)))}}fillStreamDataFC(e){let t,n;"remote"===e?(t=this.flowControlRemote,n=w["TransportEventType"].packet_received):(t=this.flowControlLocal,n=w["TransportEventType"].packet_sent);const a=this.connection;for(const i of a.getEvents()){const r=a.parseEvent(i);if(r.category===w["EventCategory"].transport&&r.name===w["TransportEventType"].parameters_set&&r.data&&r.data.owner===e&&(t.streamDataFCList.set("bidi_local",[parseInt(r.data.initial_max_stream_data_bidi_local,10)]),t.streamDataFCList.set("bidi_remote",[parseInt(r.data.initial_max_stream_data_bidi_remote,10)]),t.streamDataFCList.set("uni_remote",[parseInt(r.data.initial_max_stream_data_uni,10)]),t.streamDataFCListTimes.set("bidi_local",[r.relativeTime]),t.streamDataFCListTimes.set("bidi_remote",[r.relativeTime]),t.streamDataFCListTimes.set("uni_remote",[r.relativeTime])),r.category===w["EventCategory"].transport&&r.name===n&&r.data&&r.data.frames)for(const e of r.data.frames)if(e.frame_type===w["QUICFrameTypeName"].max_stream_data){const n=""+e.stream_id;let a=t.streamDataFCList.get(n);a||(a=new Array,t.streamDataFCList.set(n,a)),a.push(parseInt(e.maximum,10));let i=t.streamDataFCListTimes.get(n);i||(i=new Array,t.streamDataFCListTimes.set(n,i)),i.push(r.relativeTime)}}}createStaggeredLines(e,t){let n="",a="",i=null,r=null;for(let o=0;o<e.length;++o){const s=e[o],c=t[o];null!==i&&(n+=(""+s).replace(".",",")+";",a+=(""+i).replace(".",",")+";"),n+=(""+s).replace(".",",")+";",a+=(""+c).replace(".",",")+";",r=s,i=c}return n+=(""+(r+200)).replace(".",",")+";",a+=(""+i).replace(".",",")+";",[n,a]}get connectionDataFCRemote(){this.fillConnectionDataFC("remote");const e=this.createStaggeredLines(this.flowControlRemote.connectionDataFCListTimes,this.flowControlRemote.connectionDataFCList);return console.log("Connection-level FC TIMES for remote viewpoint of Trace "+this.index+": ",e[0]),console.log("Connection-level FC for remote viewpoint of Trace "+this.index+": ",e[1]),this.flowControlRemote.connectionDataFCList}get connectionDataFCLocal(){this.fillConnectionDataFC("local");const e=this.createStaggeredLines(this.flowControlLocal.connectionDataFCListTimes,this.flowControlLocal.connectionDataFCList);return console.log("Connection-level FC TIMES for local viewpoint of Trace "+this.index+": ",e[0]),console.log("Connection-level FC for local viewpoint of Trace "+this.index+": ",e[1]),this.flowControlLocal.connectionDataFCList}get streamDataFCRemote(){this.fillStreamDataFC("remote");for(const e of this.flowControlRemote.streamDataFCList.entries()){const t=this.createStaggeredLines(this.flowControlRemote.streamDataFCListTimes.get(e[0]),e[1]);console.log("Stream-level FC TIMES for remote viewpoint of Trace "+this.index+", stream "+e[0]+": ",t[0]),console.log("Stream-level FC for remote viewpoint of Trace "+this.index+", stream "+e[0]+": ",t[1])}return this.flowControlRemote.streamDataFCList}get streamDataFCLocal(){this.fillStreamDataFC("local");for(const e of this.flowControlLocal.streamDataFCList.entries()){const t=this.createStaggeredLines(this.flowControlLocal.streamDataFCListTimes.get(e[0]),e[1]);console.log("Stream-level FC TIMES for local viewpoint of Trace "+this.index+", stream "+e[0]+": ",t[0]),console.log("Stream-level FC for local viewpoint of Trace "+this.index+", stream "+e[0]+": ",t[1])}return this.flowControlLocal.streamDataFCList}};Object(l["a"])([Object(d["b"])()],Va.prototype,"connection",void 0),Object(l["a"])([Object(d["b"])()],Va.prototype,"index",void 0),Va=Object(l["a"])([d["a"]],Va);var Ba=Va,Wa=Ba,Ya=(n("1159"),Object(q["a"])(Wa,ja,Qa,!1,null,"8adfb654",null)),Xa=Ya.exports;let $a=class extends d["c"]{get group(){return this.config.group}get totalEventCount(){if(!this.config.group)return-1;let e=0;for(const t of this.config.group.getConnections())e+=t.getEvents().length;return e}get qlogns(){return w}};Object(l["a"])([Object(d["b"])()],$a.prototype,"config",void 0),$a=Object(l["a"])([Object(d["a"])({components:{StatisticsConnectionRenderer:Xa}})],$a);var Ja=$a,Ka=Ja,Za=(n("73c9"),Object(q["a"])(Ka,za,Ha,!1,null,"7640512c",null)),ei=Za.exports;let ti=class extends d["c"]{constructor(){super(...arguments),this.store=Object(h["e"])(Tt,this.$store),this.config=this.store.statisticsConfig}created(){console.log("statistics container created",this.config)}};ti=Object(l["a"])([Object(d["a"])({components:{StatisticsConfigurator:Ua,StatisticsRenderer:ei}})],ti);var ni=ti,ai=ni,ii=Object(q["a"])(ai,Oa,Fa,!1,null,null,null),ri=ii.exports;let oi=class extends d["c"]{};oi=Object(l["a"])([Object(d["a"])({components:{StatisticsContainer:ri}})],oi);var si=oi,ci=si,li=Object(q["a"])(ci,Ia,Ga,!1,null,null,null),hi=li.exports;a["default"].use(H["a"]);const di=new H["a"]({routes:[{path:"/",redirect:"/files"},{path:"/debug",name:"VUEDebug",components:{default:pe,menu:X}},{path:"/files",name:"FileManager",components:{default:Oe,menu:X}},{path:"/sequence",name:"sequence",components:{default:It,menu:X}},{path:"/congestion",name:"congestion",components:{default:jn,menu:X}},{path:"/multiplexing",name:"multiplexing",components:{default:Ra,menu:X}},{path:"/packetization",name:"packetization",components:{default:pn,menu:X}},{path:"/stats",name:"Statistics",components:{default:hi,menu:X}}]});di.beforeEach((e,t,n)=>{if(window.location.search&&0===Object.keys(e.query).length&&"/"===t.path){const t=new URLSearchParams(window.location.search),a={};for(const e of t.entries())a[e[0]]=e[1];n({name:e.name,query:a})}else n()});var pi=di,mi=n("2f62");a["default"].use(mi["a"]);var gi=new mi["a"].Store({modules:{connections:A,configurations:Tt}}),ui=(n("f9e3"),n("2dd8"),n("9483"));Object(ui["a"])("service-worker.js",{ready(){console.log("App is being served from cache by a service worker.\nFor more details, visit https://goo.gl/AFskqB")},registered(){console.log("Service worker has been registered.")},cached(){console.log("Content has been cached for offline use.")},updatefound(){console.log("New content is downloading.")},updated(){console.log("New content is available; please refresh.")},offline(){console.log("No internet connection found. App is running in offline mode.")},error(e){console.error("Error during service worker registration:",e)}}),a["default"].config.productionTip=!1,a["default"].use(i["a"]),a["default"].use(o.a),new a["default"]({router:pi,store:gi,render:e=>e(z)}).$mount("#app")},d1c7:function(e,t,n){},e354:function(e,t,n){"use strict";var a=n("b85d"),i=n.n(a);i.a},f796:function(e,t,n){}});
//# sourceMappingURL=app.30645f81.js.map